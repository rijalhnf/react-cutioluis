{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _typeof from \"@babel/runtime/helpers/esm/typeof\";\nvar _excluded = [\"id\", \"mode\", \"prefixCls\", \"backfill\", \"fieldNames\", \"inputValue\", \"searchValue\", \"onSearch\", \"autoClearSearchValue\", \"onSelect\", \"onDeselect\", \"dropdownMatchSelectWidth\", \"filterOption\", \"filterSort\", \"optionFilterProp\", \"optionLabelProp\", \"options\", \"optionRender\", \"children\", \"defaultActiveFirstOption\", \"menuItemSelectedIcon\", \"virtual\", \"direction\", \"listHeight\", \"listItemHeight\", \"labelRender\", \"value\", \"defaultValue\", \"labelInValue\", \"onChange\", \"maxCount\"];\n/**\n * To match accessibility requirement, we always provide an input in the component.\n * Other element will not set `tabIndex` to avoid `onBlur` sequence problem.\n * For focused select, we set `aria-live=\"polite\"` to update the accessibility content.\n *\n * ref:\n * - keyboard: https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/listbox_role#Keyboard_interactions\n *\n * New api:\n * - listHeight\n * - listItemHeight\n * - component\n *\n * Remove deprecated api:\n * - multiple\n * - tags\n * - combobox\n * - firstActiveValue\n * - dropdownMenuStyle\n * - openClassName (Not list in api)\n *\n * Update:\n * - `backfill` only support `combobox` mode\n * - `combobox` mode not support `labelInValue` since it's meaningless\n * - `getInputElement` only support `combobox` mode\n * - `onChange` return OptionData instead of ReactNode\n * - `filterOption` `onChange` `onSelect` accept OptionData instead of ReactNode\n * - `combobox` mode trigger `onChange` will get `undefined` if no `value` match in Option\n * - `combobox` mode not support `optionLabelProp`\n */\n\nimport useMergedState from \"rc-util/es/hooks/useMergedState\";\nimport warning from \"rc-util/es/warning\";\nimport * as React from 'react';\nimport BaseSelect, { isMultiple } from \"./BaseSelect\";\nimport OptGroup from \"./OptGroup\";\nimport Option from \"./Option\";\nimport OptionList from \"./OptionList\";\nimport SelectContext from \"./SelectContext\";\nimport useCache from \"./hooks/useCache\";\nimport useFilterOptions from \"./hooks/useFilterOptions\";\nimport useId from \"./hooks/useId\";\nimport useOptions from \"./hooks/useOptions\";\nimport useRefFunc from \"./hooks/useRefFunc\";\nimport { hasValue, isComboNoValue, toArray } from \"./utils/commonUtil\";\nimport { fillFieldNames, flattenOptions, injectPropsWithOption } from \"./utils/valueUtil\";\nimport warningProps, { warningNullOptions } from \"./utils/warningPropsUtil\";\nvar OMIT_DOM_PROPS = ['inputValue'];\n\nfunction isRawValue(value) {\n  return !value || _typeof(value) !== 'object';\n}\n\nvar Select = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var id = props.id,\n      mode = props.mode,\n      _props$prefixCls = props.prefixCls,\n      prefixCls = _props$prefixCls === void 0 ? 'rc-select' : _props$prefixCls,\n      backfill = props.backfill,\n      fieldNames = props.fieldNames,\n      inputValue = props.inputValue,\n      searchValue = props.searchValue,\n      onSearch = props.onSearch,\n      _props$autoClearSearc = props.autoClearSearchValue,\n      autoClearSearchValue = _props$autoClearSearc === void 0 ? true : _props$autoClearSearc,\n      onSelect = props.onSelect,\n      onDeselect = props.onDeselect,\n      _props$dropdownMatchS = props.dropdownMatchSelectWidth,\n      dropdownMatchSelectWidth = _props$dropdownMatchS === void 0 ? true : _props$dropdownMatchS,\n      filterOption = props.filterOption,\n      filterSort = props.filterSort,\n      optionFilterProp = props.optionFilterProp,\n      optionLabelProp = props.optionLabelProp,\n      options = props.options,\n      optionRender = props.optionRender,\n      children = props.children,\n      defaultActiveFirstOption = props.defaultActiveFirstOption,\n      menuItemSelectedIcon = props.menuItemSelectedIcon,\n      virtual = props.virtual,\n      direction = props.direction,\n      _props$listHeight = props.listHeight,\n      listHeight = _props$listHeight === void 0 ? 200 : _props$listHeight,\n      _props$listItemHeight = props.listItemHeight,\n      listItemHeight = _props$listItemHeight === void 0 ? 20 : _props$listItemHeight,\n      labelRender = props.labelRender,\n      value = props.value,\n      defaultValue = props.defaultValue,\n      labelInValue = props.labelInValue,\n      onChange = props.onChange,\n      maxCount = props.maxCount,\n      restProps = _objectWithoutProperties(props, _excluded);\n\n  var mergedId = useId(id);\n  var multiple = isMultiple(mode);\n  var childrenAsData = !!(!options && children);\n  var mergedFilterOption = React.useMemo(function () {\n    if (filterOption === undefined && mode === 'combobox') {\n      return false;\n    }\n\n    return filterOption;\n  }, [filterOption, mode]); // ========================= FieldNames =========================\n\n  var mergedFieldNames = React.useMemo(function () {\n    return fillFieldNames(fieldNames, childrenAsData);\n  },\n  /* eslint-disable react-hooks/exhaustive-deps */\n  [// We stringify fieldNames to avoid unnecessary re-renders.\n  JSON.stringify(fieldNames), childrenAsData]\n  /* eslint-enable react-hooks/exhaustive-deps */\n  ); // =========================== Search ===========================\n\n  var _useMergedState = useMergedState('', {\n    value: searchValue !== undefined ? searchValue : inputValue,\n    postState: function postState(search) {\n      return search || '';\n    }\n  }),\n      _useMergedState2 = _slicedToArray(_useMergedState, 2),\n      mergedSearchValue = _useMergedState2[0],\n      setSearchValue = _useMergedState2[1]; // =========================== Option ===========================\n\n\n  var parsedOptions = useOptions(options, children, mergedFieldNames, optionFilterProp, optionLabelProp);\n  var valueOptions = parsedOptions.valueOptions,\n      labelOptions = parsedOptions.labelOptions,\n      mergedOptions = parsedOptions.options; // ========================= Wrap Value =========================\n\n  var convert2LabelValues = React.useCallback(function (draftValues) {\n    // Convert to array\n    var valueList = toArray(draftValues); // Convert to labelInValue type\n\n    return valueList.map(function (val) {\n      var rawValue;\n      var rawLabel;\n      var rawKey;\n      var rawDisabled;\n      var rawTitle; // Fill label & value\n\n      if (isRawValue(val)) {\n        rawValue = val;\n      } else {\n        var _val$value;\n\n        rawKey = val.key;\n        rawLabel = val.label;\n        rawValue = (_val$value = val.value) !== null && _val$value !== void 0 ? _val$value : rawKey;\n      }\n\n      var option = valueOptions.get(rawValue);\n\n      if (option) {\n        var _option$key; // Fill missing props\n\n\n        if (rawLabel === undefined) rawLabel = option === null || option === void 0 ? void 0 : option[optionLabelProp || mergedFieldNames.label];\n        if (rawKey === undefined) rawKey = (_option$key = option === null || option === void 0 ? void 0 : option.key) !== null && _option$key !== void 0 ? _option$key : rawValue;\n        rawDisabled = option === null || option === void 0 ? void 0 : option.disabled;\n        rawTitle = option === null || option === void 0 ? void 0 : option.title; // Warning if label not same as provided\n\n        if (process.env.NODE_ENV !== 'production' && !optionLabelProp) {\n          var optionLabel = option === null || option === void 0 ? void 0 : option[mergedFieldNames.label];\n\n          if (optionLabel !== undefined && ! /*#__PURE__*/React.isValidElement(optionLabel) && ! /*#__PURE__*/React.isValidElement(rawLabel) && optionLabel !== rawLabel) {\n            warning(false, '`label` of `value` is not same as `label` in Select options.');\n          }\n        }\n      }\n\n      return {\n        label: rawLabel,\n        value: rawValue,\n        key: rawKey,\n        disabled: rawDisabled,\n        title: rawTitle\n      };\n    });\n  }, [mergedFieldNames, optionLabelProp, valueOptions]); // =========================== Values ===========================\n\n  var _useMergedState3 = useMergedState(defaultValue, {\n    value: value\n  }),\n      _useMergedState4 = _slicedToArray(_useMergedState3, 2),\n      internalValue = _useMergedState4[0],\n      setInternalValue = _useMergedState4[1]; // Merged value with LabelValueType\n\n\n  var rawLabeledValues = React.useMemo(function () {\n    var _values$;\n\n    var newInternalValue = multiple && internalValue === null ? [] : internalValue;\n    var values = convert2LabelValues(newInternalValue); // combobox no need save value when it's no value (exclude value equal 0)\n\n    if (mode === 'combobox' && isComboNoValue((_values$ = values[0]) === null || _values$ === void 0 ? void 0 : _values$.value)) {\n      return [];\n    }\n\n    return values;\n  }, [internalValue, convert2LabelValues, mode, multiple]); // Fill label with cache to avoid option remove\n\n  var _useCache = useCache(rawLabeledValues, valueOptions),\n      _useCache2 = _slicedToArray(_useCache, 2),\n      mergedValues = _useCache2[0],\n      getMixedOption = _useCache2[1];\n\n  var displayValues = React.useMemo(function () {\n    // `null` need show as placeholder instead\n    // https://github.com/ant-design/ant-design/issues/25057\n    if (!mode && mergedValues.length === 1) {\n      var firstValue = mergedValues[0];\n\n      if (firstValue.value === null && (firstValue.label === null || firstValue.label === undefined)) {\n        return [];\n      }\n    }\n\n    return mergedValues.map(function (item) {\n      var _ref;\n\n      return _objectSpread(_objectSpread({}, item), {}, {\n        label: (_ref = typeof labelRender === 'function' ? labelRender(item) : item.label) !== null && _ref !== void 0 ? _ref : item.value\n      });\n    });\n  }, [mode, mergedValues, labelRender]);\n  /** Convert `displayValues` to raw value type set */\n\n  var rawValues = React.useMemo(function () {\n    return new Set(mergedValues.map(function (val) {\n      return val.value;\n    }));\n  }, [mergedValues]);\n  React.useEffect(function () {\n    if (mode === 'combobox') {\n      var _mergedValues$;\n\n      var strValue = (_mergedValues$ = mergedValues[0]) === null || _mergedValues$ === void 0 ? void 0 : _mergedValues$.value;\n      setSearchValue(hasValue(strValue) ? String(strValue) : '');\n    }\n  }, [mergedValues]); // ======================= Display Option =======================\n  // Create a placeholder item if not exist in `options`\n\n  var createTagOption = useRefFunc(function (val, label) {\n    var mergedLabel = label !== null && label !== void 0 ? label : val;\n    return _defineProperty(_defineProperty({}, mergedFieldNames.value, val), mergedFieldNames.label, mergedLabel);\n  }); // Fill tag as option if mode is `tags`\n\n  var filledTagOptions = React.useMemo(function () {\n    if (mode !== 'tags') {\n      return mergedOptions;\n    } // >>> Tag mode\n\n\n    var cloneOptions = _toConsumableArray(mergedOptions); // Check if value exist in options (include new patch item)\n\n\n    var existOptions = function existOptions(val) {\n      return valueOptions.has(val);\n    }; // Fill current value as option\n\n\n    _toConsumableArray(mergedValues).sort(function (a, b) {\n      return a.value < b.value ? -1 : 1;\n    }).forEach(function (item) {\n      var val = item.value;\n\n      if (!existOptions(val)) {\n        cloneOptions.push(createTagOption(val, item.label));\n      }\n    });\n\n    return cloneOptions;\n  }, [createTagOption, mergedOptions, valueOptions, mergedValues, mode]);\n  var filteredOptions = useFilterOptions(filledTagOptions, mergedFieldNames, mergedSearchValue, mergedFilterOption, optionFilterProp); // Fill options with search value if needed\n\n  var filledSearchOptions = React.useMemo(function () {\n    if (mode !== 'tags' || !mergedSearchValue || filteredOptions.some(function (item) {\n      return item[optionFilterProp || 'value'] === mergedSearchValue;\n    })) {\n      return filteredOptions;\n    } // ignore when search value equal select input value\n\n\n    if (filteredOptions.some(function (item) {\n      return item[mergedFieldNames.value] === mergedSearchValue;\n    })) {\n      return filteredOptions;\n    } // Fill search value as option\n\n\n    return [createTagOption(mergedSearchValue)].concat(_toConsumableArray(filteredOptions));\n  }, [createTagOption, optionFilterProp, mode, filteredOptions, mergedSearchValue, mergedFieldNames]);\n  var orderedFilteredOptions = React.useMemo(function () {\n    if (!filterSort) {\n      return filledSearchOptions;\n    }\n\n    return _toConsumableArray(filledSearchOptions).sort(function (a, b) {\n      return filterSort(a, b);\n    });\n  }, [filledSearchOptions, filterSort]);\n  var displayOptions = React.useMemo(function () {\n    return flattenOptions(orderedFilteredOptions, {\n      fieldNames: mergedFieldNames,\n      childrenAsData: childrenAsData\n    });\n  }, [orderedFilteredOptions, mergedFieldNames, childrenAsData]); // =========================== Change ===========================\n\n  var triggerChange = function triggerChange(values) {\n    var labeledValues = convert2LabelValues(values);\n    setInternalValue(labeledValues);\n\n    if (onChange && ( // Trigger event only when value changed\n    labeledValues.length !== mergedValues.length || labeledValues.some(function (newVal, index) {\n      var _mergedValues$index;\n\n      return ((_mergedValues$index = mergedValues[index]) === null || _mergedValues$index === void 0 ? void 0 : _mergedValues$index.value) !== (newVal === null || newVal === void 0 ? void 0 : newVal.value);\n    }))) {\n      var returnValues = labelInValue ? labeledValues : labeledValues.map(function (v) {\n        return v.value;\n      });\n      var returnOptions = labeledValues.map(function (v) {\n        return injectPropsWithOption(getMixedOption(v.value));\n      });\n      onChange( // Value\n      multiple ? returnValues : returnValues[0], // Option\n      multiple ? returnOptions : returnOptions[0]);\n    }\n  }; // ======================= Accessibility ========================\n\n\n  var _React$useState = React.useState(null),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      activeValue = _React$useState2[0],\n      setActiveValue = _React$useState2[1];\n\n  var _React$useState3 = React.useState(0),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      accessibilityIndex = _React$useState4[0],\n      setAccessibilityIndex = _React$useState4[1];\n\n  var mergedDefaultActiveFirstOption = defaultActiveFirstOption !== undefined ? defaultActiveFirstOption : mode !== 'combobox';\n  var onActiveValue = React.useCallback(function (active, index) {\n    var _ref3 = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {},\n        _ref3$source = _ref3.source,\n        source = _ref3$source === void 0 ? 'keyboard' : _ref3$source;\n\n    setAccessibilityIndex(index);\n\n    if (backfill && mode === 'combobox' && active !== null && source === 'keyboard') {\n      setActiveValue(String(active));\n    }\n  }, [backfill, mode]); // ========================= OptionList =========================\n\n  var triggerSelect = function triggerSelect(val, selected, type) {\n    var getSelectEnt = function getSelectEnt() {\n      var _option$key2;\n\n      var option = getMixedOption(val);\n      return [labelInValue ? {\n        label: option === null || option === void 0 ? void 0 : option[mergedFieldNames.label],\n        value: val,\n        key: (_option$key2 = option === null || option === void 0 ? void 0 : option.key) !== null && _option$key2 !== void 0 ? _option$key2 : val\n      } : val, injectPropsWithOption(option)];\n    };\n\n    if (selected && onSelect) {\n      var _getSelectEnt = getSelectEnt(),\n          _getSelectEnt2 = _slicedToArray(_getSelectEnt, 2),\n          wrappedValue = _getSelectEnt2[0],\n          _option = _getSelectEnt2[1];\n\n      onSelect(wrappedValue, _option);\n    } else if (!selected && onDeselect && type !== 'clear') {\n      var _getSelectEnt3 = getSelectEnt(),\n          _getSelectEnt4 = _slicedToArray(_getSelectEnt3, 2),\n          _wrappedValue = _getSelectEnt4[0],\n          _option2 = _getSelectEnt4[1];\n\n      onDeselect(_wrappedValue, _option2);\n    }\n  }; // Used for OptionList selection\n\n\n  var onInternalSelect = useRefFunc(function (val, info) {\n    var cloneValues; // Single mode always trigger select only with option list\n\n    var mergedSelect = multiple ? info.selected : true;\n\n    if (mergedSelect) {\n      cloneValues = multiple ? [].concat(_toConsumableArray(mergedValues), [val]) : [val];\n    } else {\n      cloneValues = mergedValues.filter(function (v) {\n        return v.value !== val;\n      });\n    }\n\n    triggerChange(cloneValues);\n    triggerSelect(val, mergedSelect); // Clean search value if single or configured\n\n    if (mode === 'combobox') {\n      // setSearchValue(String(val));\n      setActiveValue('');\n    } else if (!isMultiple || autoClearSearchValue) {\n      setSearchValue('');\n      setActiveValue('');\n    }\n  }); // ======================= Display Change =======================\n  // BaseSelect display values change\n\n  var onDisplayValuesChange = function onDisplayValuesChange(nextValues, info) {\n    triggerChange(nextValues);\n    var type = info.type,\n        values = info.values;\n\n    if (type === 'remove' || type === 'clear') {\n      values.forEach(function (item) {\n        triggerSelect(item.value, false, type);\n      });\n    }\n  }; // =========================== Search ===========================\n\n\n  var onInternalSearch = function onInternalSearch(searchText, info) {\n    setSearchValue(searchText);\n    setActiveValue(null); // [Submit] Tag mode should flush input\n\n    if (info.source === 'submit') {\n      var formatted = (searchText || '').trim(); // prevent empty tags from appearing when you click the Enter button\n\n      if (formatted) {\n        var newRawValues = Array.from(new Set([].concat(_toConsumableArray(rawValues), [formatted])));\n        triggerChange(newRawValues);\n        triggerSelect(formatted, true);\n        setSearchValue('');\n      }\n\n      return;\n    }\n\n    if (info.source !== 'blur') {\n      if (mode === 'combobox') {\n        triggerChange(searchText);\n      }\n\n      onSearch === null || onSearch === void 0 || onSearch(searchText);\n    }\n  };\n\n  var onInternalSearchSplit = function onInternalSearchSplit(words) {\n    var patchValues = words;\n\n    if (mode !== 'tags') {\n      patchValues = words.map(function (word) {\n        var opt = labelOptions.get(word);\n        return opt === null || opt === void 0 ? void 0 : opt.value;\n      }).filter(function (val) {\n        return val !== undefined;\n      });\n    }\n\n    var newRawValues = Array.from(new Set([].concat(_toConsumableArray(rawValues), _toConsumableArray(patchValues))));\n    triggerChange(newRawValues);\n    newRawValues.forEach(function (newRawValue) {\n      triggerSelect(newRawValue, true);\n    });\n  }; // ========================== Context ===========================\n\n\n  var selectContext = React.useMemo(function () {\n    var realVirtual = virtual !== false && dropdownMatchSelectWidth !== false;\n    return _objectSpread(_objectSpread({}, parsedOptions), {}, {\n      flattenOptions: displayOptions,\n      onActiveValue: onActiveValue,\n      defaultActiveFirstOption: mergedDefaultActiveFirstOption,\n      onSelect: onInternalSelect,\n      menuItemSelectedIcon: menuItemSelectedIcon,\n      rawValues: rawValues,\n      fieldNames: mergedFieldNames,\n      virtual: realVirtual,\n      direction: direction,\n      listHeight: listHeight,\n      listItemHeight: listItemHeight,\n      childrenAsData: childrenAsData,\n      maxCount: maxCount,\n      optionRender: optionRender\n    });\n  }, [maxCount, parsedOptions, displayOptions, onActiveValue, mergedDefaultActiveFirstOption, onInternalSelect, menuItemSelectedIcon, rawValues, mergedFieldNames, virtual, dropdownMatchSelectWidth, direction, listHeight, listItemHeight, childrenAsData, optionRender]); // ========================== Warning ===========================\n\n  if (process.env.NODE_ENV !== 'production') {\n    warningProps(props);\n    warningNullOptions(mergedOptions, mergedFieldNames);\n  } // ==============================================================\n  // ==                          Render                          ==\n  // ==============================================================\n\n\n  return /*#__PURE__*/React.createElement(SelectContext.Provider, {\n    value: selectContext\n  }, /*#__PURE__*/React.createElement(BaseSelect, _extends({}, restProps, {\n    // >>> MISC\n    id: mergedId,\n    prefixCls: prefixCls,\n    ref: ref,\n    omitDomProps: OMIT_DOM_PROPS,\n    mode: mode // >>> Values\n    ,\n    displayValues: displayValues,\n    onDisplayValuesChange: onDisplayValuesChange // >>> Trigger\n    ,\n    direction: direction // >>> Search\n    ,\n    searchValue: mergedSearchValue,\n    onSearch: onInternalSearch,\n    autoClearSearchValue: autoClearSearchValue,\n    onSearchSplit: onInternalSearchSplit,\n    dropdownMatchSelectWidth: dropdownMatchSelectWidth // >>> OptionList\n    ,\n    OptionList: OptionList,\n    emptyOptions: !displayOptions.length // >>> Accessibility\n    ,\n    activeValue: activeValue,\n    activeDescendantId: \"\".concat(mergedId, \"_list_\").concat(accessibilityIndex)\n  })));\n});\n\nif (process.env.NODE_ENV !== 'production') {\n  Select.displayName = 'Select';\n}\n\nvar TypedSelect = Select;\nTypedSelect.Option = Option;\nTypedSelect.OptGroup = OptGroup;\nexport default TypedSelect;","map":{"version":3,"names":["_extends","_toConsumableArray","_defineProperty","_objectSpread","_slicedToArray","_objectWithoutProperties","_typeof","_excluded","useMergedState","warning","React","BaseSelect","isMultiple","OptGroup","Option","OptionList","SelectContext","useCache","useFilterOptions","useId","useOptions","useRefFunc","hasValue","isComboNoValue","toArray","fillFieldNames","flattenOptions","injectPropsWithOption","warningProps","warningNullOptions","OMIT_DOM_PROPS","isRawValue","value","Select","forwardRef","props","ref","id","mode","_props$prefixCls","prefixCls","backfill","fieldNames","inputValue","searchValue","onSearch","_props$autoClearSearc","autoClearSearchValue","onSelect","onDeselect","_props$dropdownMatchS","dropdownMatchSelectWidth","filterOption","filterSort","optionFilterProp","optionLabelProp","options","optionRender","children","defaultActiveFirstOption","menuItemSelectedIcon","virtual","direction","_props$listHeight","listHeight","_props$listItemHeight","listItemHeight","labelRender","defaultValue","labelInValue","onChange","maxCount","restProps","mergedId","multiple","childrenAsData","mergedFilterOption","useMemo","undefined","mergedFieldNames","JSON","stringify","_useMergedState","postState","search","_useMergedState2","mergedSearchValue","setSearchValue","parsedOptions","valueOptions","labelOptions","mergedOptions","convert2LabelValues","useCallback","draftValues","valueList","map","val","rawValue","rawLabel","rawKey","rawDisabled","rawTitle","_val$value","key","label","option","get","_option$key","disabled","title","process","env","NODE_ENV","optionLabel","isValidElement","_useMergedState3","_useMergedState4","internalValue","setInternalValue","rawLabeledValues","_values$","newInternalValue","values","_useCache","_useCache2","mergedValues","getMixedOption","displayValues","length","firstValue","item","_ref","rawValues","Set","useEffect","_mergedValues$","strValue","String","createTagOption","mergedLabel","filledTagOptions","cloneOptions","existOptions","has","sort","a","b","forEach","push","filteredOptions","filledSearchOptions","some","concat","orderedFilteredOptions","displayOptions","triggerChange","labeledValues","newVal","index","_mergedValues$index","returnValues","v","returnOptions","_React$useState","useState","_React$useState2","activeValue","setActiveValue","_React$useState3","_React$useState4","accessibilityIndex","setAccessibilityIndex","mergedDefaultActiveFirstOption","onActiveValue","active","_ref3","arguments","_ref3$source","source","triggerSelect","selected","type","getSelectEnt","_option$key2","_getSelectEnt","_getSelectEnt2","wrappedValue","_option","_getSelectEnt3","_getSelectEnt4","_wrappedValue","_option2","onInternalSelect","info","cloneValues","mergedSelect","filter","onDisplayValuesChange","nextValues","onInternalSearch","searchText","formatted","trim","newRawValues","Array","from","onInternalSearchSplit","words","patchValues","word","opt","newRawValue","selectContext","realVirtual","createElement","Provider","omitDomProps","onSearchSplit","emptyOptions","activeDescendantId","displayName","TypedSelect"],"sources":["/Users/joji/Downloads/react-cutioluis-main copy/node_modules/rc-select/es/Select.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _typeof from \"@babel/runtime/helpers/esm/typeof\";\nvar _excluded = [\"id\", \"mode\", \"prefixCls\", \"backfill\", \"fieldNames\", \"inputValue\", \"searchValue\", \"onSearch\", \"autoClearSearchValue\", \"onSelect\", \"onDeselect\", \"dropdownMatchSelectWidth\", \"filterOption\", \"filterSort\", \"optionFilterProp\", \"optionLabelProp\", \"options\", \"optionRender\", \"children\", \"defaultActiveFirstOption\", \"menuItemSelectedIcon\", \"virtual\", \"direction\", \"listHeight\", \"listItemHeight\", \"labelRender\", \"value\", \"defaultValue\", \"labelInValue\", \"onChange\", \"maxCount\"];\n/**\n * To match accessibility requirement, we always provide an input in the component.\n * Other element will not set `tabIndex` to avoid `onBlur` sequence problem.\n * For focused select, we set `aria-live=\"polite\"` to update the accessibility content.\n *\n * ref:\n * - keyboard: https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/listbox_role#Keyboard_interactions\n *\n * New api:\n * - listHeight\n * - listItemHeight\n * - component\n *\n * Remove deprecated api:\n * - multiple\n * - tags\n * - combobox\n * - firstActiveValue\n * - dropdownMenuStyle\n * - openClassName (Not list in api)\n *\n * Update:\n * - `backfill` only support `combobox` mode\n * - `combobox` mode not support `labelInValue` since it's meaningless\n * - `getInputElement` only support `combobox` mode\n * - `onChange` return OptionData instead of ReactNode\n * - `filterOption` `onChange` `onSelect` accept OptionData instead of ReactNode\n * - `combobox` mode trigger `onChange` will get `undefined` if no `value` match in Option\n * - `combobox` mode not support `optionLabelProp`\n */\n\nimport useMergedState from \"rc-util/es/hooks/useMergedState\";\nimport warning from \"rc-util/es/warning\";\nimport * as React from 'react';\nimport BaseSelect, { isMultiple } from \"./BaseSelect\";\nimport OptGroup from \"./OptGroup\";\nimport Option from \"./Option\";\nimport OptionList from \"./OptionList\";\nimport SelectContext from \"./SelectContext\";\nimport useCache from \"./hooks/useCache\";\nimport useFilterOptions from \"./hooks/useFilterOptions\";\nimport useId from \"./hooks/useId\";\nimport useOptions from \"./hooks/useOptions\";\nimport useRefFunc from \"./hooks/useRefFunc\";\nimport { hasValue, isComboNoValue, toArray } from \"./utils/commonUtil\";\nimport { fillFieldNames, flattenOptions, injectPropsWithOption } from \"./utils/valueUtil\";\nimport warningProps, { warningNullOptions } from \"./utils/warningPropsUtil\";\nvar OMIT_DOM_PROPS = ['inputValue'];\nfunction isRawValue(value) {\n  return !value || _typeof(value) !== 'object';\n}\nvar Select = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var id = props.id,\n    mode = props.mode,\n    _props$prefixCls = props.prefixCls,\n    prefixCls = _props$prefixCls === void 0 ? 'rc-select' : _props$prefixCls,\n    backfill = props.backfill,\n    fieldNames = props.fieldNames,\n    inputValue = props.inputValue,\n    searchValue = props.searchValue,\n    onSearch = props.onSearch,\n    _props$autoClearSearc = props.autoClearSearchValue,\n    autoClearSearchValue = _props$autoClearSearc === void 0 ? true : _props$autoClearSearc,\n    onSelect = props.onSelect,\n    onDeselect = props.onDeselect,\n    _props$dropdownMatchS = props.dropdownMatchSelectWidth,\n    dropdownMatchSelectWidth = _props$dropdownMatchS === void 0 ? true : _props$dropdownMatchS,\n    filterOption = props.filterOption,\n    filterSort = props.filterSort,\n    optionFilterProp = props.optionFilterProp,\n    optionLabelProp = props.optionLabelProp,\n    options = props.options,\n    optionRender = props.optionRender,\n    children = props.children,\n    defaultActiveFirstOption = props.defaultActiveFirstOption,\n    menuItemSelectedIcon = props.menuItemSelectedIcon,\n    virtual = props.virtual,\n    direction = props.direction,\n    _props$listHeight = props.listHeight,\n    listHeight = _props$listHeight === void 0 ? 200 : _props$listHeight,\n    _props$listItemHeight = props.listItemHeight,\n    listItemHeight = _props$listItemHeight === void 0 ? 20 : _props$listItemHeight,\n    labelRender = props.labelRender,\n    value = props.value,\n    defaultValue = props.defaultValue,\n    labelInValue = props.labelInValue,\n    onChange = props.onChange,\n    maxCount = props.maxCount,\n    restProps = _objectWithoutProperties(props, _excluded);\n  var mergedId = useId(id);\n  var multiple = isMultiple(mode);\n  var childrenAsData = !!(!options && children);\n  var mergedFilterOption = React.useMemo(function () {\n    if (filterOption === undefined && mode === 'combobox') {\n      return false;\n    }\n    return filterOption;\n  }, [filterOption, mode]);\n\n  // ========================= FieldNames =========================\n  var mergedFieldNames = React.useMemo(function () {\n    return fillFieldNames(fieldNames, childrenAsData);\n  }, /* eslint-disable react-hooks/exhaustive-deps */\n  [\n  // We stringify fieldNames to avoid unnecessary re-renders.\n  JSON.stringify(fieldNames), childrenAsData]\n  /* eslint-enable react-hooks/exhaustive-deps */);\n\n  // =========================== Search ===========================\n  var _useMergedState = useMergedState('', {\n      value: searchValue !== undefined ? searchValue : inputValue,\n      postState: function postState(search) {\n        return search || '';\n      }\n    }),\n    _useMergedState2 = _slicedToArray(_useMergedState, 2),\n    mergedSearchValue = _useMergedState2[0],\n    setSearchValue = _useMergedState2[1];\n\n  // =========================== Option ===========================\n  var parsedOptions = useOptions(options, children, mergedFieldNames, optionFilterProp, optionLabelProp);\n  var valueOptions = parsedOptions.valueOptions,\n    labelOptions = parsedOptions.labelOptions,\n    mergedOptions = parsedOptions.options;\n\n  // ========================= Wrap Value =========================\n  var convert2LabelValues = React.useCallback(function (draftValues) {\n    // Convert to array\n    var valueList = toArray(draftValues);\n\n    // Convert to labelInValue type\n    return valueList.map(function (val) {\n      var rawValue;\n      var rawLabel;\n      var rawKey;\n      var rawDisabled;\n      var rawTitle;\n\n      // Fill label & value\n      if (isRawValue(val)) {\n        rawValue = val;\n      } else {\n        var _val$value;\n        rawKey = val.key;\n        rawLabel = val.label;\n        rawValue = (_val$value = val.value) !== null && _val$value !== void 0 ? _val$value : rawKey;\n      }\n      var option = valueOptions.get(rawValue);\n      if (option) {\n        var _option$key;\n        // Fill missing props\n        if (rawLabel === undefined) rawLabel = option === null || option === void 0 ? void 0 : option[optionLabelProp || mergedFieldNames.label];\n        if (rawKey === undefined) rawKey = (_option$key = option === null || option === void 0 ? void 0 : option.key) !== null && _option$key !== void 0 ? _option$key : rawValue;\n        rawDisabled = option === null || option === void 0 ? void 0 : option.disabled;\n        rawTitle = option === null || option === void 0 ? void 0 : option.title;\n\n        // Warning if label not same as provided\n        if (process.env.NODE_ENV !== 'production' && !optionLabelProp) {\n          var optionLabel = option === null || option === void 0 ? void 0 : option[mergedFieldNames.label];\n          if (optionLabel !== undefined && ! /*#__PURE__*/React.isValidElement(optionLabel) && ! /*#__PURE__*/React.isValidElement(rawLabel) && optionLabel !== rawLabel) {\n            warning(false, '`label` of `value` is not same as `label` in Select options.');\n          }\n        }\n      }\n      return {\n        label: rawLabel,\n        value: rawValue,\n        key: rawKey,\n        disabled: rawDisabled,\n        title: rawTitle\n      };\n    });\n  }, [mergedFieldNames, optionLabelProp, valueOptions]);\n\n  // =========================== Values ===========================\n  var _useMergedState3 = useMergedState(defaultValue, {\n      value: value\n    }),\n    _useMergedState4 = _slicedToArray(_useMergedState3, 2),\n    internalValue = _useMergedState4[0],\n    setInternalValue = _useMergedState4[1];\n\n  // Merged value with LabelValueType\n  var rawLabeledValues = React.useMemo(function () {\n    var _values$;\n    var newInternalValue = multiple && internalValue === null ? [] : internalValue;\n    var values = convert2LabelValues(newInternalValue);\n\n    // combobox no need save value when it's no value (exclude value equal 0)\n    if (mode === 'combobox' && isComboNoValue((_values$ = values[0]) === null || _values$ === void 0 ? void 0 : _values$.value)) {\n      return [];\n    }\n    return values;\n  }, [internalValue, convert2LabelValues, mode, multiple]);\n\n  // Fill label with cache to avoid option remove\n  var _useCache = useCache(rawLabeledValues, valueOptions),\n    _useCache2 = _slicedToArray(_useCache, 2),\n    mergedValues = _useCache2[0],\n    getMixedOption = _useCache2[1];\n  var displayValues = React.useMemo(function () {\n    // `null` need show as placeholder instead\n    // https://github.com/ant-design/ant-design/issues/25057\n    if (!mode && mergedValues.length === 1) {\n      var firstValue = mergedValues[0];\n      if (firstValue.value === null && (firstValue.label === null || firstValue.label === undefined)) {\n        return [];\n      }\n    }\n    return mergedValues.map(function (item) {\n      var _ref;\n      return _objectSpread(_objectSpread({}, item), {}, {\n        label: (_ref = typeof labelRender === 'function' ? labelRender(item) : item.label) !== null && _ref !== void 0 ? _ref : item.value\n      });\n    });\n  }, [mode, mergedValues, labelRender]);\n\n  /** Convert `displayValues` to raw value type set */\n  var rawValues = React.useMemo(function () {\n    return new Set(mergedValues.map(function (val) {\n      return val.value;\n    }));\n  }, [mergedValues]);\n  React.useEffect(function () {\n    if (mode === 'combobox') {\n      var _mergedValues$;\n      var strValue = (_mergedValues$ = mergedValues[0]) === null || _mergedValues$ === void 0 ? void 0 : _mergedValues$.value;\n      setSearchValue(hasValue(strValue) ? String(strValue) : '');\n    }\n  }, [mergedValues]);\n\n  // ======================= Display Option =======================\n  // Create a placeholder item if not exist in `options`\n  var createTagOption = useRefFunc(function (val, label) {\n    var mergedLabel = label !== null && label !== void 0 ? label : val;\n    return _defineProperty(_defineProperty({}, mergedFieldNames.value, val), mergedFieldNames.label, mergedLabel);\n  });\n\n  // Fill tag as option if mode is `tags`\n  var filledTagOptions = React.useMemo(function () {\n    if (mode !== 'tags') {\n      return mergedOptions;\n    }\n\n    // >>> Tag mode\n    var cloneOptions = _toConsumableArray(mergedOptions);\n\n    // Check if value exist in options (include new patch item)\n    var existOptions = function existOptions(val) {\n      return valueOptions.has(val);\n    };\n\n    // Fill current value as option\n    _toConsumableArray(mergedValues).sort(function (a, b) {\n      return a.value < b.value ? -1 : 1;\n    }).forEach(function (item) {\n      var val = item.value;\n      if (!existOptions(val)) {\n        cloneOptions.push(createTagOption(val, item.label));\n      }\n    });\n    return cloneOptions;\n  }, [createTagOption, mergedOptions, valueOptions, mergedValues, mode]);\n  var filteredOptions = useFilterOptions(filledTagOptions, mergedFieldNames, mergedSearchValue, mergedFilterOption, optionFilterProp);\n\n  // Fill options with search value if needed\n  var filledSearchOptions = React.useMemo(function () {\n    if (mode !== 'tags' || !mergedSearchValue || filteredOptions.some(function (item) {\n      return item[optionFilterProp || 'value'] === mergedSearchValue;\n    })) {\n      return filteredOptions;\n    }\n    // ignore when search value equal select input value\n    if (filteredOptions.some(function (item) {\n      return item[mergedFieldNames.value] === mergedSearchValue;\n    })) {\n      return filteredOptions;\n    }\n    // Fill search value as option\n    return [createTagOption(mergedSearchValue)].concat(_toConsumableArray(filteredOptions));\n  }, [createTagOption, optionFilterProp, mode, filteredOptions, mergedSearchValue, mergedFieldNames]);\n  var orderedFilteredOptions = React.useMemo(function () {\n    if (!filterSort) {\n      return filledSearchOptions;\n    }\n    return _toConsumableArray(filledSearchOptions).sort(function (a, b) {\n      return filterSort(a, b);\n    });\n  }, [filledSearchOptions, filterSort]);\n  var displayOptions = React.useMemo(function () {\n    return flattenOptions(orderedFilteredOptions, {\n      fieldNames: mergedFieldNames,\n      childrenAsData: childrenAsData\n    });\n  }, [orderedFilteredOptions, mergedFieldNames, childrenAsData]);\n\n  // =========================== Change ===========================\n  var triggerChange = function triggerChange(values) {\n    var labeledValues = convert2LabelValues(values);\n    setInternalValue(labeledValues);\n    if (onChange && (\n    // Trigger event only when value changed\n    labeledValues.length !== mergedValues.length || labeledValues.some(function (newVal, index) {\n      var _mergedValues$index;\n      return ((_mergedValues$index = mergedValues[index]) === null || _mergedValues$index === void 0 ? void 0 : _mergedValues$index.value) !== (newVal === null || newVal === void 0 ? void 0 : newVal.value);\n    }))) {\n      var returnValues = labelInValue ? labeledValues : labeledValues.map(function (v) {\n        return v.value;\n      });\n      var returnOptions = labeledValues.map(function (v) {\n        return injectPropsWithOption(getMixedOption(v.value));\n      });\n      onChange(\n      // Value\n      multiple ? returnValues : returnValues[0],\n      // Option\n      multiple ? returnOptions : returnOptions[0]);\n    }\n  };\n\n  // ======================= Accessibility ========================\n  var _React$useState = React.useState(null),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    activeValue = _React$useState2[0],\n    setActiveValue = _React$useState2[1];\n  var _React$useState3 = React.useState(0),\n    _React$useState4 = _slicedToArray(_React$useState3, 2),\n    accessibilityIndex = _React$useState4[0],\n    setAccessibilityIndex = _React$useState4[1];\n  var mergedDefaultActiveFirstOption = defaultActiveFirstOption !== undefined ? defaultActiveFirstOption : mode !== 'combobox';\n  var onActiveValue = React.useCallback(function (active, index) {\n    var _ref3 = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {},\n      _ref3$source = _ref3.source,\n      source = _ref3$source === void 0 ? 'keyboard' : _ref3$source;\n    setAccessibilityIndex(index);\n    if (backfill && mode === 'combobox' && active !== null && source === 'keyboard') {\n      setActiveValue(String(active));\n    }\n  }, [backfill, mode]);\n\n  // ========================= OptionList =========================\n  var triggerSelect = function triggerSelect(val, selected, type) {\n    var getSelectEnt = function getSelectEnt() {\n      var _option$key2;\n      var option = getMixedOption(val);\n      return [labelInValue ? {\n        label: option === null || option === void 0 ? void 0 : option[mergedFieldNames.label],\n        value: val,\n        key: (_option$key2 = option === null || option === void 0 ? void 0 : option.key) !== null && _option$key2 !== void 0 ? _option$key2 : val\n      } : val, injectPropsWithOption(option)];\n    };\n    if (selected && onSelect) {\n      var _getSelectEnt = getSelectEnt(),\n        _getSelectEnt2 = _slicedToArray(_getSelectEnt, 2),\n        wrappedValue = _getSelectEnt2[0],\n        _option = _getSelectEnt2[1];\n      onSelect(wrappedValue, _option);\n    } else if (!selected && onDeselect && type !== 'clear') {\n      var _getSelectEnt3 = getSelectEnt(),\n        _getSelectEnt4 = _slicedToArray(_getSelectEnt3, 2),\n        _wrappedValue = _getSelectEnt4[0],\n        _option2 = _getSelectEnt4[1];\n      onDeselect(_wrappedValue, _option2);\n    }\n  };\n\n  // Used for OptionList selection\n  var onInternalSelect = useRefFunc(function (val, info) {\n    var cloneValues;\n\n    // Single mode always trigger select only with option list\n    var mergedSelect = multiple ? info.selected : true;\n    if (mergedSelect) {\n      cloneValues = multiple ? [].concat(_toConsumableArray(mergedValues), [val]) : [val];\n    } else {\n      cloneValues = mergedValues.filter(function (v) {\n        return v.value !== val;\n      });\n    }\n    triggerChange(cloneValues);\n    triggerSelect(val, mergedSelect);\n\n    // Clean search value if single or configured\n    if (mode === 'combobox') {\n      // setSearchValue(String(val));\n      setActiveValue('');\n    } else if (!isMultiple || autoClearSearchValue) {\n      setSearchValue('');\n      setActiveValue('');\n    }\n  });\n\n  // ======================= Display Change =======================\n  // BaseSelect display values change\n  var onDisplayValuesChange = function onDisplayValuesChange(nextValues, info) {\n    triggerChange(nextValues);\n    var type = info.type,\n      values = info.values;\n    if (type === 'remove' || type === 'clear') {\n      values.forEach(function (item) {\n        triggerSelect(item.value, false, type);\n      });\n    }\n  };\n\n  // =========================== Search ===========================\n  var onInternalSearch = function onInternalSearch(searchText, info) {\n    setSearchValue(searchText);\n    setActiveValue(null);\n\n    // [Submit] Tag mode should flush input\n    if (info.source === 'submit') {\n      var formatted = (searchText || '').trim();\n      // prevent empty tags from appearing when you click the Enter button\n      if (formatted) {\n        var newRawValues = Array.from(new Set([].concat(_toConsumableArray(rawValues), [formatted])));\n        triggerChange(newRawValues);\n        triggerSelect(formatted, true);\n        setSearchValue('');\n      }\n      return;\n    }\n    if (info.source !== 'blur') {\n      if (mode === 'combobox') {\n        triggerChange(searchText);\n      }\n      onSearch === null || onSearch === void 0 || onSearch(searchText);\n    }\n  };\n  var onInternalSearchSplit = function onInternalSearchSplit(words) {\n    var patchValues = words;\n    if (mode !== 'tags') {\n      patchValues = words.map(function (word) {\n        var opt = labelOptions.get(word);\n        return opt === null || opt === void 0 ? void 0 : opt.value;\n      }).filter(function (val) {\n        return val !== undefined;\n      });\n    }\n    var newRawValues = Array.from(new Set([].concat(_toConsumableArray(rawValues), _toConsumableArray(patchValues))));\n    triggerChange(newRawValues);\n    newRawValues.forEach(function (newRawValue) {\n      triggerSelect(newRawValue, true);\n    });\n  };\n\n  // ========================== Context ===========================\n  var selectContext = React.useMemo(function () {\n    var realVirtual = virtual !== false && dropdownMatchSelectWidth !== false;\n    return _objectSpread(_objectSpread({}, parsedOptions), {}, {\n      flattenOptions: displayOptions,\n      onActiveValue: onActiveValue,\n      defaultActiveFirstOption: mergedDefaultActiveFirstOption,\n      onSelect: onInternalSelect,\n      menuItemSelectedIcon: menuItemSelectedIcon,\n      rawValues: rawValues,\n      fieldNames: mergedFieldNames,\n      virtual: realVirtual,\n      direction: direction,\n      listHeight: listHeight,\n      listItemHeight: listItemHeight,\n      childrenAsData: childrenAsData,\n      maxCount: maxCount,\n      optionRender: optionRender\n    });\n  }, [maxCount, parsedOptions, displayOptions, onActiveValue, mergedDefaultActiveFirstOption, onInternalSelect, menuItemSelectedIcon, rawValues, mergedFieldNames, virtual, dropdownMatchSelectWidth, direction, listHeight, listItemHeight, childrenAsData, optionRender]);\n\n  // ========================== Warning ===========================\n  if (process.env.NODE_ENV !== 'production') {\n    warningProps(props);\n    warningNullOptions(mergedOptions, mergedFieldNames);\n  }\n\n  // ==============================================================\n  // ==                          Render                          ==\n  // ==============================================================\n  return /*#__PURE__*/React.createElement(SelectContext.Provider, {\n    value: selectContext\n  }, /*#__PURE__*/React.createElement(BaseSelect, _extends({}, restProps, {\n    // >>> MISC\n    id: mergedId,\n    prefixCls: prefixCls,\n    ref: ref,\n    omitDomProps: OMIT_DOM_PROPS,\n    mode: mode\n    // >>> Values\n    ,\n    displayValues: displayValues,\n    onDisplayValuesChange: onDisplayValuesChange\n    // >>> Trigger\n    ,\n    direction: direction\n    // >>> Search\n    ,\n    searchValue: mergedSearchValue,\n    onSearch: onInternalSearch,\n    autoClearSearchValue: autoClearSearchValue,\n    onSearchSplit: onInternalSearchSplit,\n    dropdownMatchSelectWidth: dropdownMatchSelectWidth\n    // >>> OptionList\n    ,\n    OptionList: OptionList,\n    emptyOptions: !displayOptions.length\n    // >>> Accessibility\n    ,\n    activeValue: activeValue,\n    activeDescendantId: \"\".concat(mergedId, \"_list_\").concat(accessibilityIndex)\n  })));\n});\nif (process.env.NODE_ENV !== 'production') {\n  Select.displayName = 'Select';\n}\nvar TypedSelect = Select;\nTypedSelect.Option = Option;\nTypedSelect.OptGroup = OptGroup;\nexport default TypedSelect;"],"mappings":"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"},"metadata":{},"sourceType":"module"}