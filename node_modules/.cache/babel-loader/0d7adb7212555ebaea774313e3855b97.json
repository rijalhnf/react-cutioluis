{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar FORMAT_KEYS = ['YYYY', 'MM', 'DD', 'HH', 'mm', 'ss', 'SSS']; // Use Chinese character to avoid conflict with the mask format\n\nvar REPLACE_KEY = '顧';\n\nvar MaskFormat = /*#__PURE__*/function () {\n  function MaskFormat(format) {\n    _classCallCheck(this, MaskFormat);\n\n    _defineProperty(this, \"format\", void 0);\n\n    _defineProperty(this, \"maskFormat\", void 0);\n\n    _defineProperty(this, \"cells\", void 0);\n\n    _defineProperty(this, \"maskCells\", void 0);\n\n    this.format = format; // Generate mask format\n\n    var replaceKeys = FORMAT_KEYS.map(function (key) {\n      return \"(\".concat(key, \")\");\n    }).join('|');\n    var replaceReg = new RegExp(replaceKeys, 'g');\n    this.maskFormat = format.replace(replaceReg, // Use Chinese character to avoid user use it in format\n    function (key) {\n      return REPLACE_KEY.repeat(key.length);\n    }); // Generate cells\n\n    var cellReg = new RegExp(\"(\".concat(FORMAT_KEYS.join('|'), \")\"));\n    var strCells = (format.split(cellReg) || []).filter(function (str) {\n      return str;\n    });\n    var offset = 0;\n    this.cells = strCells.map(function (text) {\n      var mask = FORMAT_KEYS.includes(text);\n      var start = offset;\n      var end = offset + text.length;\n      offset = end;\n      return {\n        text: text,\n        mask: mask,\n        start: start,\n        end: end\n      };\n    }); // Mask cells\n\n    this.maskCells = this.cells.filter(function (cell) {\n      return cell.mask;\n    });\n  }\n\n  _createClass(MaskFormat, [{\n    key: \"getSelection\",\n    value: function getSelection(maskCellIndex) {\n      var _ref = this.maskCells[maskCellIndex] || {},\n          start = _ref.start,\n          end = _ref.end;\n\n      return [start || 0, end || 0];\n    }\n    /** Check given text match format */\n\n  }, {\n    key: \"match\",\n    value: function match(text) {\n      for (var i = 0; i < this.maskFormat.length; i += 1) {\n        var maskChar = this.maskFormat[i];\n        var textChar = text[i];\n\n        if (!textChar || maskChar !== REPLACE_KEY && maskChar !== textChar) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n    /** Get mask cell count */\n\n  }, {\n    key: \"size\",\n    value: function size() {\n      return this.maskCells.length;\n    }\n  }, {\n    key: \"getMaskCellIndex\",\n    value: function getMaskCellIndex(anchorIndex) {\n      var closetDist = Number.MAX_SAFE_INTEGER;\n      var closetIndex = 0;\n\n      for (var i = 0; i < this.maskCells.length; i += 1) {\n        var _this$maskCells$i = this.maskCells[i],\n            start = _this$maskCells$i.start,\n            end = _this$maskCells$i.end;\n\n        if (anchorIndex >= start && anchorIndex <= end) {\n          return i;\n        }\n\n        var dist = Math.min(Math.abs(anchorIndex - start), Math.abs(anchorIndex - end));\n\n        if (dist < closetDist) {\n          closetDist = dist;\n          closetIndex = i;\n        }\n      }\n\n      return closetIndex;\n    }\n  }]);\n\n  return MaskFormat;\n}();\n\nexport { MaskFormat as default };","map":{"version":3,"names":["_classCallCheck","_createClass","_defineProperty","FORMAT_KEYS","REPLACE_KEY","MaskFormat","format","replaceKeys","map","key","concat","join","replaceReg","RegExp","maskFormat","replace","repeat","length","cellReg","strCells","split","filter","str","offset","cells","text","mask","includes","start","end","maskCells","cell","value","getSelection","maskCellIndex","_ref","match","i","maskChar","textChar","size","getMaskCellIndex","anchorIndex","closetDist","Number","MAX_SAFE_INTEGER","closetIndex","_this$maskCells$i","dist","Math","min","abs","default"],"sources":["/Users/joji/Documents/CODE/React/react-cutioluis/node_modules/rc-picker/es/PickerInput/Selector/MaskFormat.js"],"sourcesContent":["import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar FORMAT_KEYS = ['YYYY', 'MM', 'DD', 'HH', 'mm', 'ss', 'SSS'];\n// Use Chinese character to avoid conflict with the mask format\nvar REPLACE_KEY = '顧';\nvar MaskFormat = /*#__PURE__*/function () {\n  function MaskFormat(format) {\n    _classCallCheck(this, MaskFormat);\n    _defineProperty(this, \"format\", void 0);\n    _defineProperty(this, \"maskFormat\", void 0);\n    _defineProperty(this, \"cells\", void 0);\n    _defineProperty(this, \"maskCells\", void 0);\n    this.format = format;\n\n    // Generate mask format\n    var replaceKeys = FORMAT_KEYS.map(function (key) {\n      return \"(\".concat(key, \")\");\n    }).join('|');\n    var replaceReg = new RegExp(replaceKeys, 'g');\n    this.maskFormat = format.replace(replaceReg,\n    // Use Chinese character to avoid user use it in format\n    function (key) {\n      return REPLACE_KEY.repeat(key.length);\n    });\n\n    // Generate cells\n    var cellReg = new RegExp(\"(\".concat(FORMAT_KEYS.join('|'), \")\"));\n    var strCells = (format.split(cellReg) || []).filter(function (str) {\n      return str;\n    });\n    var offset = 0;\n    this.cells = strCells.map(function (text) {\n      var mask = FORMAT_KEYS.includes(text);\n      var start = offset;\n      var end = offset + text.length;\n      offset = end;\n      return {\n        text: text,\n        mask: mask,\n        start: start,\n        end: end\n      };\n    });\n\n    // Mask cells\n    this.maskCells = this.cells.filter(function (cell) {\n      return cell.mask;\n    });\n  }\n  _createClass(MaskFormat, [{\n    key: \"getSelection\",\n    value: function getSelection(maskCellIndex) {\n      var _ref = this.maskCells[maskCellIndex] || {},\n        start = _ref.start,\n        end = _ref.end;\n      return [start || 0, end || 0];\n    }\n\n    /** Check given text match format */\n  }, {\n    key: \"match\",\n    value: function match(text) {\n      for (var i = 0; i < this.maskFormat.length; i += 1) {\n        var maskChar = this.maskFormat[i];\n        var textChar = text[i];\n        if (!textChar || maskChar !== REPLACE_KEY && maskChar !== textChar) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    /** Get mask cell count */\n  }, {\n    key: \"size\",\n    value: function size() {\n      return this.maskCells.length;\n    }\n  }, {\n    key: \"getMaskCellIndex\",\n    value: function getMaskCellIndex(anchorIndex) {\n      var closetDist = Number.MAX_SAFE_INTEGER;\n      var closetIndex = 0;\n      for (var i = 0; i < this.maskCells.length; i += 1) {\n        var _this$maskCells$i = this.maskCells[i],\n          start = _this$maskCells$i.start,\n          end = _this$maskCells$i.end;\n        if (anchorIndex >= start && anchorIndex <= end) {\n          return i;\n        }\n        var dist = Math.min(Math.abs(anchorIndex - start), Math.abs(anchorIndex - end));\n        if (dist < closetDist) {\n          closetDist = dist;\n          closetIndex = i;\n        }\n      }\n      return closetIndex;\n    }\n  }]);\n  return MaskFormat;\n}();\nexport { MaskFormat as default };"],"mappings":"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"},"metadata":{},"sourceType":"module"}