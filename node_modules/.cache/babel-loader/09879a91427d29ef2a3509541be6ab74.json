{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _regeneratorRuntime from \"@babel/runtime/helpers/esm/regeneratorRuntime\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"@babel/runtime/helpers/esm/createSuper\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _excluded = [\"name\"];\nimport toChildrenArray from \"rc-util/es/Children/toArray\";\nimport isEqual from \"rc-util/es/isEqual\";\nimport warning from \"rc-util/es/warning\";\nimport * as React from 'react';\nimport FieldContext, { HOOK_MARK } from \"./FieldContext\";\nimport ListContext from \"./ListContext\";\nimport { toArray } from \"./utils/typeUtil\";\nimport { validateRules } from \"./utils/validateUtil\";\nimport { containsNamePath, defaultGetValueFromEvent, getNamePath, getValue } from \"./utils/valueUtil\";\nvar EMPTY_ERRORS = [];\n\nfunction requireUpdate(shouldUpdate, prev, next, prevValue, nextValue, info) {\n  if (typeof shouldUpdate === 'function') {\n    return shouldUpdate(prev, next, 'source' in info ? {\n      source: info.source\n    } : {});\n  }\n\n  return prevValue !== nextValue;\n} // eslint-disable-next-line @typescript-eslint/consistent-indexed-object-style\n// We use Class instead of Hooks here since it will cost much code by using Hooks.\n\n\nvar Field = /*#__PURE__*/function (_React$Component) {\n  _inherits(Field, _React$Component);\n\n  var _super = _createSuper(Field); // ============================== Subscriptions ==============================\n\n\n  function Field(props) {\n    var _this;\n\n    _classCallCheck(this, Field);\n\n    _this = _super.call(this, props); // Register on init\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      resetCount: 0\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"cancelRegisterFunc\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"mounted\", false);\n    /**\n     * Follow state should not management in State since it will async update by React.\n     * This makes first render of form can not get correct state value.\n     */\n\n\n    _defineProperty(_assertThisInitialized(_this), \"touched\", false);\n    /**\n     * Mark when touched & validated. Currently only used for `dependencies`.\n     * Note that we do not think field with `initialValue` is dirty\n     * but this will be by `isFieldDirty` func.\n     */\n\n\n    _defineProperty(_assertThisInitialized(_this), \"dirty\", false);\n\n    _defineProperty(_assertThisInitialized(_this), \"validatePromise\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"prevValidating\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"errors\", EMPTY_ERRORS);\n\n    _defineProperty(_assertThisInitialized(_this), \"warnings\", EMPTY_ERRORS);\n\n    _defineProperty(_assertThisInitialized(_this), \"cancelRegister\", function () {\n      var _this$props = _this.props,\n          preserve = _this$props.preserve,\n          isListField = _this$props.isListField,\n          name = _this$props.name;\n\n      if (_this.cancelRegisterFunc) {\n        _this.cancelRegisterFunc(isListField, preserve, getNamePath(name));\n      }\n\n      _this.cancelRegisterFunc = null;\n    }); // ================================== Utils ==================================\n\n\n    _defineProperty(_assertThisInitialized(_this), \"getNamePath\", function () {\n      var _this$props2 = _this.props,\n          name = _this$props2.name,\n          fieldContext = _this$props2.fieldContext;\n      var _fieldContext$prefixN = fieldContext.prefixName,\n          prefixName = _fieldContext$prefixN === void 0 ? [] : _fieldContext$prefixN;\n      return name !== undefined ? [].concat(_toConsumableArray(prefixName), _toConsumableArray(name)) : [];\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getRules\", function () {\n      var _this$props3 = _this.props,\n          _this$props3$rules = _this$props3.rules,\n          rules = _this$props3$rules === void 0 ? [] : _this$props3$rules,\n          fieldContext = _this$props3.fieldContext;\n      return rules.map(function (rule) {\n        if (typeof rule === 'function') {\n          return rule(fieldContext);\n        }\n\n        return rule;\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"refresh\", function () {\n      if (!_this.mounted) return;\n      /**\n       * Clean up current node.\n       */\n\n      _this.setState(function (_ref) {\n        var resetCount = _ref.resetCount;\n        return {\n          resetCount: resetCount + 1\n        };\n      });\n    }); // Event should only trigger when meta changed\n\n\n    _defineProperty(_assertThisInitialized(_this), \"metaCache\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"triggerMetaEvent\", function (destroy) {\n      var onMetaChange = _this.props.onMetaChange;\n\n      if (onMetaChange) {\n        var _meta = _objectSpread(_objectSpread({}, _this.getMeta()), {}, {\n          destroy: destroy\n        });\n\n        if (!isEqual(_this.metaCache, _meta)) {\n          onMetaChange(_meta);\n        }\n\n        _this.metaCache = _meta;\n      } else {\n        _this.metaCache = null;\n      }\n    }); // ========================= Field Entity Interfaces =========================\n    // Trigger by store update. Check if need update the component\n\n\n    _defineProperty(_assertThisInitialized(_this), \"onStoreChange\", function (prevStore, namePathList, info) {\n      var _this$props4 = _this.props,\n          shouldUpdate = _this$props4.shouldUpdate,\n          _this$props4$dependen = _this$props4.dependencies,\n          dependencies = _this$props4$dependen === void 0 ? [] : _this$props4$dependen,\n          onReset = _this$props4.onReset;\n      var store = info.store;\n\n      var namePath = _this.getNamePath();\n\n      var prevValue = _this.getValue(prevStore);\n\n      var curValue = _this.getValue(store);\n\n      var namePathMatch = namePathList && containsNamePath(namePathList, namePath); // `setFieldsValue` is a quick access to update related status\n\n      if (info.type === 'valueUpdate' && info.source === 'external' && prevValue !== curValue) {\n        _this.touched = true;\n        _this.dirty = true;\n        _this.validatePromise = null;\n        _this.errors = EMPTY_ERRORS;\n        _this.warnings = EMPTY_ERRORS;\n\n        _this.triggerMetaEvent();\n      }\n\n      switch (info.type) {\n        case 'reset':\n          if (!namePathList || namePathMatch) {\n            // Clean up state\n            _this.touched = false;\n            _this.dirty = false;\n            _this.validatePromise = undefined;\n            _this.errors = EMPTY_ERRORS;\n            _this.warnings = EMPTY_ERRORS;\n\n            _this.triggerMetaEvent();\n\n            onReset === null || onReset === void 0 || onReset();\n\n            _this.refresh();\n\n            return;\n          }\n\n          break;\n\n        /**\n         * In case field with `preserve = false` nest deps like:\n         * - A = 1 => show B\n         * - B = 1 => show C\n         * - Reset A, need clean B, C\n         */\n\n        case 'remove':\n          {\n            if (shouldUpdate) {\n              _this.reRender();\n\n              return;\n            }\n\n            break;\n          }\n\n        case 'setField':\n          {\n            var data = info.data;\n\n            if (namePathMatch) {\n              if ('touched' in data) {\n                _this.touched = data.touched;\n              }\n\n              if ('validating' in data && !('originRCField' in data)) {\n                _this.validatePromise = data.validating ? Promise.resolve([]) : null;\n              }\n\n              if ('errors' in data) {\n                _this.errors = data.errors || EMPTY_ERRORS;\n              }\n\n              if ('warnings' in data) {\n                _this.warnings = data.warnings || EMPTY_ERRORS;\n              }\n\n              _this.dirty = true;\n\n              _this.triggerMetaEvent();\n\n              _this.reRender();\n\n              return;\n            } else if ('value' in data && containsNamePath(namePathList, namePath, true)) {\n              // Contains path with value should also check\n              _this.reRender();\n\n              return;\n            } // Handle update by `setField` with `shouldUpdate`\n\n\n            if (shouldUpdate && !namePath.length && requireUpdate(shouldUpdate, prevStore, store, prevValue, curValue, info)) {\n              _this.reRender();\n\n              return;\n            }\n\n            break;\n          }\n\n        case 'dependenciesUpdate':\n          {\n            /**\n             * Trigger when marked `dependencies` updated. Related fields will all update\n             */\n            var dependencyList = dependencies.map(getNamePath); // No need for `namePathMath` check and `shouldUpdate` check, since `valueUpdate` will be\n            // emitted earlier and they will work there\n            // If set it may cause unnecessary twice rerendering\n\n            if (dependencyList.some(function (dependency) {\n              return containsNamePath(info.relatedFields, dependency);\n            })) {\n              _this.reRender();\n\n              return;\n            }\n\n            break;\n          }\n\n        default:\n          // 1. If `namePath` exists in `namePathList`, means it's related value and should update\n          //      For example <List name=\"list\"><Field name={['list', 0]}></List>\n          //      If `namePathList` is [['list']] (List value update), Field should be updated\n          //      If `namePathList` is [['list', 0]] (Field value update), List shouldn't be updated\n          // 2.\n          //   2.1 If `dependencies` is set, `name` is not set and `shouldUpdate` is not set,\n          //       don't use `shouldUpdate`. `dependencies` is view as a shortcut if `shouldUpdate`\n          //       is not provided\n          //   2.2 If `shouldUpdate` provided, use customize logic to update the field\n          //       else to check if value changed\n          if (namePathMatch || (!dependencies.length || namePath.length || shouldUpdate) && requireUpdate(shouldUpdate, prevStore, store, prevValue, curValue, info)) {\n            _this.reRender();\n\n            return;\n          }\n\n          break;\n      }\n\n      if (shouldUpdate === true) {\n        _this.reRender();\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"validateRules\", function (options) {\n      // We should fixed namePath & value to avoid developer change then by form function\n      var namePath = _this.getNamePath();\n\n      var currentValue = _this.getValue();\n\n      var _ref2 = options || {},\n          triggerName = _ref2.triggerName,\n          _ref2$validateOnly = _ref2.validateOnly,\n          validateOnly = _ref2$validateOnly === void 0 ? false : _ref2$validateOnly; // Force change to async to avoid rule OOD under renderProps field\n\n\n      var rootPromise = Promise.resolve().then( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var _this$props5, _this$props5$validate, validateFirst, messageVariables, validateDebounce, filteredRules, promise;\n\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              if (_this.mounted) {\n                _context.next = 2;\n                break;\n              }\n\n              return _context.abrupt(\"return\", []);\n\n            case 2:\n              _this$props5 = _this.props, _this$props5$validate = _this$props5.validateFirst, validateFirst = _this$props5$validate === void 0 ? false : _this$props5$validate, messageVariables = _this$props5.messageVariables, validateDebounce = _this$props5.validateDebounce; // Start validate\n\n              filteredRules = _this.getRules();\n\n              if (triggerName) {\n                filteredRules = filteredRules.filter(function (rule) {\n                  return rule;\n                }).filter(function (rule) {\n                  var validateTrigger = rule.validateTrigger;\n\n                  if (!validateTrigger) {\n                    return true;\n                  }\n\n                  var triggerList = toArray(validateTrigger);\n                  return triggerList.includes(triggerName);\n                });\n              } // Wait for debounce. Skip if no `triggerName` since its from `validateFields / submit`\n\n\n              if (!(validateDebounce && triggerName)) {\n                _context.next = 10;\n                break;\n              }\n\n              _context.next = 8;\n              return new Promise(function (resolve) {\n                setTimeout(resolve, validateDebounce);\n              });\n\n            case 8:\n              if (!(_this.validatePromise !== rootPromise)) {\n                _context.next = 10;\n                break;\n              }\n\n              return _context.abrupt(\"return\", []);\n\n            case 10:\n              promise = validateRules(namePath, currentValue, filteredRules, options, validateFirst, messageVariables);\n              promise.catch(function (e) {\n                return e;\n              }).then(function () {\n                var ruleErrors = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : EMPTY_ERRORS;\n\n                if (_this.validatePromise === rootPromise) {\n                  var _ruleErrors$forEach;\n\n                  _this.validatePromise = null; // Get errors & warnings\n\n                  var nextErrors = [];\n                  var nextWarnings = [];\n                  (_ruleErrors$forEach = ruleErrors.forEach) === null || _ruleErrors$forEach === void 0 || _ruleErrors$forEach.call(ruleErrors, function (_ref4) {\n                    var warningOnly = _ref4.rule.warningOnly,\n                        _ref4$errors = _ref4.errors,\n                        errors = _ref4$errors === void 0 ? EMPTY_ERRORS : _ref4$errors;\n\n                    if (warningOnly) {\n                      nextWarnings.push.apply(nextWarnings, _toConsumableArray(errors));\n                    } else {\n                      nextErrors.push.apply(nextErrors, _toConsumableArray(errors));\n                    }\n                  });\n                  _this.errors = nextErrors;\n                  _this.warnings = nextWarnings;\n\n                  _this.triggerMetaEvent();\n\n                  _this.reRender();\n                }\n              });\n              return _context.abrupt(\"return\", promise);\n\n            case 13:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee);\n      })));\n\n      if (validateOnly) {\n        return rootPromise;\n      }\n\n      _this.validatePromise = rootPromise;\n      _this.dirty = true;\n      _this.errors = EMPTY_ERRORS;\n      _this.warnings = EMPTY_ERRORS;\n\n      _this.triggerMetaEvent(); // Force trigger re-render since we need sync renderProps with new meta\n\n\n      _this.reRender();\n\n      return rootPromise;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"isFieldValidating\", function () {\n      return !!_this.validatePromise;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"isFieldTouched\", function () {\n      return _this.touched;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"isFieldDirty\", function () {\n      // Touched or validate or has initialValue\n      if (_this.dirty || _this.props.initialValue !== undefined) {\n        return true;\n      } // Form set initialValue\n\n\n      var fieldContext = _this.props.fieldContext;\n\n      var _fieldContext$getInte = fieldContext.getInternalHooks(HOOK_MARK),\n          getInitialValue = _fieldContext$getInte.getInitialValue;\n\n      if (getInitialValue(_this.getNamePath()) !== undefined) {\n        return true;\n      }\n\n      return false;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getErrors\", function () {\n      return _this.errors;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getWarnings\", function () {\n      return _this.warnings;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"isListField\", function () {\n      return _this.props.isListField;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"isList\", function () {\n      return _this.props.isList;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"isPreserve\", function () {\n      return _this.props.preserve;\n    }); // ============================= Child Component =============================\n\n\n    _defineProperty(_assertThisInitialized(_this), \"getMeta\", function () {\n      // Make error & validating in cache to save perf\n      _this.prevValidating = _this.isFieldValidating();\n      var meta = {\n        touched: _this.isFieldTouched(),\n        validating: _this.prevValidating,\n        errors: _this.errors,\n        warnings: _this.warnings,\n        name: _this.getNamePath(),\n        validated: _this.validatePromise === null\n      };\n      return meta;\n    }); // Only return validate child node. If invalidate, will do nothing about field.\n\n\n    _defineProperty(_assertThisInitialized(_this), \"getOnlyChild\", function (children) {\n      // Support render props\n      if (typeof children === 'function') {\n        var _meta2 = _this.getMeta();\n\n        return _objectSpread(_objectSpread({}, _this.getOnlyChild(children(_this.getControlled(), _meta2, _this.props.fieldContext))), {}, {\n          isFunction: true\n        });\n      } // Filed element only\n\n\n      var childList = toChildrenArray(children);\n\n      if (childList.length !== 1 || ! /*#__PURE__*/React.isValidElement(childList[0])) {\n        return {\n          child: childList,\n          isFunction: false\n        };\n      }\n\n      return {\n        child: childList[0],\n        isFunction: false\n      };\n    }); // ============================== Field Control ==============================\n\n\n    _defineProperty(_assertThisInitialized(_this), \"getValue\", function (store) {\n      var getFieldsValue = _this.props.fieldContext.getFieldsValue;\n\n      var namePath = _this.getNamePath();\n\n      return getValue(store || getFieldsValue(true), namePath);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getControlled\", function () {\n      var childProps = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var _this$props6 = _this.props,\n          trigger = _this$props6.trigger,\n          validateTrigger = _this$props6.validateTrigger,\n          getValueFromEvent = _this$props6.getValueFromEvent,\n          normalize = _this$props6.normalize,\n          valuePropName = _this$props6.valuePropName,\n          getValueProps = _this$props6.getValueProps,\n          fieldContext = _this$props6.fieldContext;\n      var mergedValidateTrigger = validateTrigger !== undefined ? validateTrigger : fieldContext.validateTrigger;\n\n      var namePath = _this.getNamePath();\n\n      var getInternalHooks = fieldContext.getInternalHooks,\n          getFieldsValue = fieldContext.getFieldsValue;\n\n      var _getInternalHooks = getInternalHooks(HOOK_MARK),\n          dispatch = _getInternalHooks.dispatch;\n\n      var value = _this.getValue();\n\n      var mergedGetValueProps = getValueProps || function (val) {\n        return _defineProperty({}, valuePropName, val);\n      }; // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n\n      var originTriggerFunc = childProps[trigger];\n      var valueProps = mergedGetValueProps(value); // warning when prop value is function\n\n      if (process.env.NODE_ENV !== 'production') {\n        Object.keys(valueProps).forEach(function (key) {\n          warning(typeof valueProps[key] !== 'function', \"It's not recommended to generate dynamic function prop by `getValueProps`. Please pass it to child component directly (prop: \".concat(key, \")\"));\n        });\n      }\n\n      var control = _objectSpread(_objectSpread({}, childProps), valueProps); // Add trigger\n\n\n      control[trigger] = function () {\n        // Mark as touched\n        _this.touched = true;\n        _this.dirty = true;\n\n        _this.triggerMetaEvent();\n\n        var newValue;\n\n        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n          args[_key] = arguments[_key];\n        }\n\n        if (getValueFromEvent) {\n          newValue = getValueFromEvent.apply(void 0, args);\n        } else {\n          newValue = defaultGetValueFromEvent.apply(void 0, [valuePropName].concat(args));\n        }\n\n        if (normalize) {\n          newValue = normalize(newValue, value, getFieldsValue(true));\n        }\n\n        dispatch({\n          type: 'updateValue',\n          namePath: namePath,\n          value: newValue\n        });\n\n        if (originTriggerFunc) {\n          originTriggerFunc.apply(void 0, args);\n        }\n      }; // Add validateTrigger\n\n\n      var validateTriggerList = toArray(mergedValidateTrigger || []);\n      validateTriggerList.forEach(function (triggerName) {\n        // Wrap additional function of component, so that we can get latest value from store\n        var originTrigger = control[triggerName];\n\n        control[triggerName] = function () {\n          if (originTrigger) {\n            originTrigger.apply(void 0, arguments);\n          } // Always use latest rules\n\n\n          var rules = _this.props.rules;\n\n          if (rules && rules.length) {\n            // We dispatch validate to root,\n            // since it will update related data with other field with same name\n            dispatch({\n              type: 'validateField',\n              namePath: namePath,\n              triggerName: triggerName\n            });\n          }\n        };\n      });\n      return control;\n    });\n\n    if (props.fieldContext) {\n      var getInternalHooks = props.fieldContext.getInternalHooks;\n\n      var _getInternalHooks2 = getInternalHooks(HOOK_MARK),\n          initEntityValue = _getInternalHooks2.initEntityValue;\n\n      initEntityValue(_assertThisInitialized(_this));\n    }\n\n    return _this;\n  }\n\n  _createClass(Field, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props7 = this.props,\n          shouldUpdate = _this$props7.shouldUpdate,\n          fieldContext = _this$props7.fieldContext;\n      this.mounted = true; // Register on init\n\n      if (fieldContext) {\n        var getInternalHooks = fieldContext.getInternalHooks;\n\n        var _getInternalHooks3 = getInternalHooks(HOOK_MARK),\n            registerField = _getInternalHooks3.registerField;\n\n        this.cancelRegisterFunc = registerField(this);\n      } // One more render for component in case fields not ready\n\n\n      if (shouldUpdate === true) {\n        this.reRender();\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.cancelRegister();\n      this.triggerMetaEvent(true);\n      this.mounted = false;\n    }\n  }, {\n    key: \"reRender\",\n    value: function reRender() {\n      if (!this.mounted) return;\n      this.forceUpdate();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var resetCount = this.state.resetCount;\n      var children = this.props.children;\n\n      var _this$getOnlyChild = this.getOnlyChild(children),\n          child = _this$getOnlyChild.child,\n          isFunction = _this$getOnlyChild.isFunction; // Not need to `cloneElement` since user can handle this in render function self\n\n\n      var returnChildNode;\n\n      if (isFunction) {\n        returnChildNode = child;\n      } else if ( /*#__PURE__*/React.isValidElement(child)) {\n        returnChildNode = /*#__PURE__*/React.cloneElement(child, this.getControlled(child.props));\n      } else {\n        warning(!child, '`children` of Field is not validate ReactElement.');\n        returnChildNode = child;\n      }\n\n      return /*#__PURE__*/React.createElement(React.Fragment, {\n        key: resetCount\n      }, returnChildNode);\n    }\n  }]);\n\n  return Field;\n}(React.Component);\n\n_defineProperty(Field, \"contextType\", FieldContext);\n\n_defineProperty(Field, \"defaultProps\", {\n  trigger: 'onChange',\n  valuePropName: 'value'\n});\n\nfunction WrapperField(_ref6) {\n  var name = _ref6.name,\n      restProps = _objectWithoutProperties(_ref6, _excluded);\n\n  var fieldContext = React.useContext(FieldContext);\n  var listContext = React.useContext(ListContext);\n  var namePath = name !== undefined ? getNamePath(name) : undefined;\n  var key = 'keep';\n\n  if (!restProps.isListField) {\n    key = \"_\".concat((namePath || []).join('_'));\n  } // Warning if it's a directly list field.\n  // We can still support multiple level field preserve.\n\n\n  if (process.env.NODE_ENV !== 'production' && restProps.preserve === false && restProps.isListField && namePath.length <= 1) {\n    warning(false, '`preserve` should not apply on Form.List fields.');\n  }\n\n  return /*#__PURE__*/React.createElement(Field, _extends({\n    key: key,\n    name: namePath,\n    isListField: !!listContext\n  }, restProps, {\n    fieldContext: fieldContext\n  }));\n}\n\nexport default WrapperField;","map":{"version":3,"names":["_extends","_objectWithoutProperties","_regeneratorRuntime","_asyncToGenerator","_objectSpread","_toConsumableArray","_classCallCheck","_createClass","_assertThisInitialized","_inherits","_createSuper","_defineProperty","_excluded","toChildrenArray","isEqual","warning","React","FieldContext","HOOK_MARK","ListContext","toArray","validateRules","containsNamePath","defaultGetValueFromEvent","getNamePath","getValue","EMPTY_ERRORS","requireUpdate","shouldUpdate","prev","next","prevValue","nextValue","info","source","Field","_React$Component","_super","props","_this","call","resetCount","_this$props","preserve","isListField","name","cancelRegisterFunc","_this$props2","fieldContext","_fieldContext$prefixN","prefixName","undefined","concat","_this$props3","_this$props3$rules","rules","map","rule","mounted","setState","_ref","destroy","onMetaChange","_meta","getMeta","metaCache","prevStore","namePathList","_this$props4","_this$props4$dependen","dependencies","onReset","store","namePath","curValue","namePathMatch","type","touched","dirty","validatePromise","errors","warnings","triggerMetaEvent","refresh","reRender","data","validating","Promise","resolve","length","dependencyList","some","dependency","relatedFields","options","currentValue","_ref2","triggerName","_ref2$validateOnly","validateOnly","rootPromise","then","mark","_callee","_this$props5","_this$props5$validate","validateFirst","messageVariables","validateDebounce","filteredRules","promise","wrap","_callee$","_context","abrupt","getRules","filter","validateTrigger","triggerList","includes","setTimeout","catch","e","ruleErrors","arguments","_ruleErrors$forEach","nextErrors","nextWarnings","forEach","_ref4","warningOnly","_ref4$errors","push","apply","stop","initialValue","_fieldContext$getInte","getInternalHooks","getInitialValue","isList","prevValidating","isFieldValidating","meta","isFieldTouched","validated","children","_meta2","getOnlyChild","getControlled","isFunction","childList","isValidElement","child","getFieldsValue","childProps","_this$props6","trigger","getValueFromEvent","normalize","valuePropName","getValueProps","mergedValidateTrigger","_getInternalHooks","dispatch","value","mergedGetValueProps","val","originTriggerFunc","valueProps","process","env","NODE_ENV","Object","keys","key","control","newValue","_len","args","Array","_key","validateTriggerList","originTrigger","_getInternalHooks2","initEntityValue","componentDidMount","_this$props7","_getInternalHooks3","registerField","componentWillUnmount","cancelRegister","forceUpdate","render","state","_this$getOnlyChild","returnChildNode","cloneElement","createElement","Fragment","Component","WrapperField","_ref6","restProps","useContext","listContext","join"],"sources":["/Users/joji/Documents/CODE/React/react-cutioluis/node_modules/rc-field-form/es/Field.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _regeneratorRuntime from \"@babel/runtime/helpers/esm/regeneratorRuntime\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"@babel/runtime/helpers/esm/createSuper\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _excluded = [\"name\"];\nimport toChildrenArray from \"rc-util/es/Children/toArray\";\nimport isEqual from \"rc-util/es/isEqual\";\nimport warning from \"rc-util/es/warning\";\nimport * as React from 'react';\nimport FieldContext, { HOOK_MARK } from \"./FieldContext\";\nimport ListContext from \"./ListContext\";\nimport { toArray } from \"./utils/typeUtil\";\nimport { validateRules } from \"./utils/validateUtil\";\nimport { containsNamePath, defaultGetValueFromEvent, getNamePath, getValue } from \"./utils/valueUtil\";\nvar EMPTY_ERRORS = [];\nfunction requireUpdate(shouldUpdate, prev, next, prevValue, nextValue, info) {\n  if (typeof shouldUpdate === 'function') {\n    return shouldUpdate(prev, next, 'source' in info ? {\n      source: info.source\n    } : {});\n  }\n  return prevValue !== nextValue;\n}\n\n// eslint-disable-next-line @typescript-eslint/consistent-indexed-object-style\n// We use Class instead of Hooks here since it will cost much code by using Hooks.\nvar Field = /*#__PURE__*/function (_React$Component) {\n  _inherits(Field, _React$Component);\n  var _super = _createSuper(Field);\n  // ============================== Subscriptions ==============================\n  function Field(props) {\n    var _this;\n    _classCallCheck(this, Field);\n    _this = _super.call(this, props);\n\n    // Register on init\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      resetCount: 0\n    });\n    _defineProperty(_assertThisInitialized(_this), \"cancelRegisterFunc\", null);\n    _defineProperty(_assertThisInitialized(_this), \"mounted\", false);\n    /**\n     * Follow state should not management in State since it will async update by React.\n     * This makes first render of form can not get correct state value.\n     */\n    _defineProperty(_assertThisInitialized(_this), \"touched\", false);\n    /**\n     * Mark when touched & validated. Currently only used for `dependencies`.\n     * Note that we do not think field with `initialValue` is dirty\n     * but this will be by `isFieldDirty` func.\n     */\n    _defineProperty(_assertThisInitialized(_this), \"dirty\", false);\n    _defineProperty(_assertThisInitialized(_this), \"validatePromise\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"prevValidating\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"errors\", EMPTY_ERRORS);\n    _defineProperty(_assertThisInitialized(_this), \"warnings\", EMPTY_ERRORS);\n    _defineProperty(_assertThisInitialized(_this), \"cancelRegister\", function () {\n      var _this$props = _this.props,\n        preserve = _this$props.preserve,\n        isListField = _this$props.isListField,\n        name = _this$props.name;\n      if (_this.cancelRegisterFunc) {\n        _this.cancelRegisterFunc(isListField, preserve, getNamePath(name));\n      }\n      _this.cancelRegisterFunc = null;\n    });\n    // ================================== Utils ==================================\n    _defineProperty(_assertThisInitialized(_this), \"getNamePath\", function () {\n      var _this$props2 = _this.props,\n        name = _this$props2.name,\n        fieldContext = _this$props2.fieldContext;\n      var _fieldContext$prefixN = fieldContext.prefixName,\n        prefixName = _fieldContext$prefixN === void 0 ? [] : _fieldContext$prefixN;\n      return name !== undefined ? [].concat(_toConsumableArray(prefixName), _toConsumableArray(name)) : [];\n    });\n    _defineProperty(_assertThisInitialized(_this), \"getRules\", function () {\n      var _this$props3 = _this.props,\n        _this$props3$rules = _this$props3.rules,\n        rules = _this$props3$rules === void 0 ? [] : _this$props3$rules,\n        fieldContext = _this$props3.fieldContext;\n      return rules.map(function (rule) {\n        if (typeof rule === 'function') {\n          return rule(fieldContext);\n        }\n        return rule;\n      });\n    });\n    _defineProperty(_assertThisInitialized(_this), \"refresh\", function () {\n      if (!_this.mounted) return;\n\n      /**\n       * Clean up current node.\n       */\n      _this.setState(function (_ref) {\n        var resetCount = _ref.resetCount;\n        return {\n          resetCount: resetCount + 1\n        };\n      });\n    });\n    // Event should only trigger when meta changed\n    _defineProperty(_assertThisInitialized(_this), \"metaCache\", null);\n    _defineProperty(_assertThisInitialized(_this), \"triggerMetaEvent\", function (destroy) {\n      var onMetaChange = _this.props.onMetaChange;\n      if (onMetaChange) {\n        var _meta = _objectSpread(_objectSpread({}, _this.getMeta()), {}, {\n          destroy: destroy\n        });\n        if (!isEqual(_this.metaCache, _meta)) {\n          onMetaChange(_meta);\n        }\n        _this.metaCache = _meta;\n      } else {\n        _this.metaCache = null;\n      }\n    });\n    // ========================= Field Entity Interfaces =========================\n    // Trigger by store update. Check if need update the component\n    _defineProperty(_assertThisInitialized(_this), \"onStoreChange\", function (prevStore, namePathList, info) {\n      var _this$props4 = _this.props,\n        shouldUpdate = _this$props4.shouldUpdate,\n        _this$props4$dependen = _this$props4.dependencies,\n        dependencies = _this$props4$dependen === void 0 ? [] : _this$props4$dependen,\n        onReset = _this$props4.onReset;\n      var store = info.store;\n      var namePath = _this.getNamePath();\n      var prevValue = _this.getValue(prevStore);\n      var curValue = _this.getValue(store);\n      var namePathMatch = namePathList && containsNamePath(namePathList, namePath);\n\n      // `setFieldsValue` is a quick access to update related status\n      if (info.type === 'valueUpdate' && info.source === 'external' && prevValue !== curValue) {\n        _this.touched = true;\n        _this.dirty = true;\n        _this.validatePromise = null;\n        _this.errors = EMPTY_ERRORS;\n        _this.warnings = EMPTY_ERRORS;\n        _this.triggerMetaEvent();\n      }\n      switch (info.type) {\n        case 'reset':\n          if (!namePathList || namePathMatch) {\n            // Clean up state\n            _this.touched = false;\n            _this.dirty = false;\n            _this.validatePromise = undefined;\n            _this.errors = EMPTY_ERRORS;\n            _this.warnings = EMPTY_ERRORS;\n            _this.triggerMetaEvent();\n            onReset === null || onReset === void 0 || onReset();\n            _this.refresh();\n            return;\n          }\n          break;\n\n        /**\n         * In case field with `preserve = false` nest deps like:\n         * - A = 1 => show B\n         * - B = 1 => show C\n         * - Reset A, need clean B, C\n         */\n        case 'remove':\n          {\n            if (shouldUpdate) {\n              _this.reRender();\n              return;\n            }\n            break;\n          }\n        case 'setField':\n          {\n            var data = info.data;\n            if (namePathMatch) {\n              if ('touched' in data) {\n                _this.touched = data.touched;\n              }\n              if ('validating' in data && !('originRCField' in data)) {\n                _this.validatePromise = data.validating ? Promise.resolve([]) : null;\n              }\n              if ('errors' in data) {\n                _this.errors = data.errors || EMPTY_ERRORS;\n              }\n              if ('warnings' in data) {\n                _this.warnings = data.warnings || EMPTY_ERRORS;\n              }\n              _this.dirty = true;\n              _this.triggerMetaEvent();\n              _this.reRender();\n              return;\n            } else if ('value' in data && containsNamePath(namePathList, namePath, true)) {\n              // Contains path with value should also check\n              _this.reRender();\n              return;\n            }\n\n            // Handle update by `setField` with `shouldUpdate`\n            if (shouldUpdate && !namePath.length && requireUpdate(shouldUpdate, prevStore, store, prevValue, curValue, info)) {\n              _this.reRender();\n              return;\n            }\n            break;\n          }\n        case 'dependenciesUpdate':\n          {\n            /**\n             * Trigger when marked `dependencies` updated. Related fields will all update\n             */\n            var dependencyList = dependencies.map(getNamePath);\n            // No need for `namePathMath` check and `shouldUpdate` check, since `valueUpdate` will be\n            // emitted earlier and they will work there\n            // If set it may cause unnecessary twice rerendering\n            if (dependencyList.some(function (dependency) {\n              return containsNamePath(info.relatedFields, dependency);\n            })) {\n              _this.reRender();\n              return;\n            }\n            break;\n          }\n        default:\n          // 1. If `namePath` exists in `namePathList`, means it's related value and should update\n          //      For example <List name=\"list\"><Field name={['list', 0]}></List>\n          //      If `namePathList` is [['list']] (List value update), Field should be updated\n          //      If `namePathList` is [['list', 0]] (Field value update), List shouldn't be updated\n          // 2.\n          //   2.1 If `dependencies` is set, `name` is not set and `shouldUpdate` is not set,\n          //       don't use `shouldUpdate`. `dependencies` is view as a shortcut if `shouldUpdate`\n          //       is not provided\n          //   2.2 If `shouldUpdate` provided, use customize logic to update the field\n          //       else to check if value changed\n          if (namePathMatch || (!dependencies.length || namePath.length || shouldUpdate) && requireUpdate(shouldUpdate, prevStore, store, prevValue, curValue, info)) {\n            _this.reRender();\n            return;\n          }\n          break;\n      }\n      if (shouldUpdate === true) {\n        _this.reRender();\n      }\n    });\n    _defineProperty(_assertThisInitialized(_this), \"validateRules\", function (options) {\n      // We should fixed namePath & value to avoid developer change then by form function\n      var namePath = _this.getNamePath();\n      var currentValue = _this.getValue();\n      var _ref2 = options || {},\n        triggerName = _ref2.triggerName,\n        _ref2$validateOnly = _ref2.validateOnly,\n        validateOnly = _ref2$validateOnly === void 0 ? false : _ref2$validateOnly;\n\n      // Force change to async to avoid rule OOD under renderProps field\n      var rootPromise = Promise.resolve().then( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var _this$props5, _this$props5$validate, validateFirst, messageVariables, validateDebounce, filteredRules, promise;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              if (_this.mounted) {\n                _context.next = 2;\n                break;\n              }\n              return _context.abrupt(\"return\", []);\n            case 2:\n              _this$props5 = _this.props, _this$props5$validate = _this$props5.validateFirst, validateFirst = _this$props5$validate === void 0 ? false : _this$props5$validate, messageVariables = _this$props5.messageVariables, validateDebounce = _this$props5.validateDebounce; // Start validate\n              filteredRules = _this.getRules();\n              if (triggerName) {\n                filteredRules = filteredRules.filter(function (rule) {\n                  return rule;\n                }).filter(function (rule) {\n                  var validateTrigger = rule.validateTrigger;\n                  if (!validateTrigger) {\n                    return true;\n                  }\n                  var triggerList = toArray(validateTrigger);\n                  return triggerList.includes(triggerName);\n                });\n              }\n\n              // Wait for debounce. Skip if no `triggerName` since its from `validateFields / submit`\n              if (!(validateDebounce && triggerName)) {\n                _context.next = 10;\n                break;\n              }\n              _context.next = 8;\n              return new Promise(function (resolve) {\n                setTimeout(resolve, validateDebounce);\n              });\n            case 8:\n              if (!(_this.validatePromise !== rootPromise)) {\n                _context.next = 10;\n                break;\n              }\n              return _context.abrupt(\"return\", []);\n            case 10:\n              promise = validateRules(namePath, currentValue, filteredRules, options, validateFirst, messageVariables);\n              promise.catch(function (e) {\n                return e;\n              }).then(function () {\n                var ruleErrors = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : EMPTY_ERRORS;\n                if (_this.validatePromise === rootPromise) {\n                  var _ruleErrors$forEach;\n                  _this.validatePromise = null;\n\n                  // Get errors & warnings\n                  var nextErrors = [];\n                  var nextWarnings = [];\n                  (_ruleErrors$forEach = ruleErrors.forEach) === null || _ruleErrors$forEach === void 0 || _ruleErrors$forEach.call(ruleErrors, function (_ref4) {\n                    var warningOnly = _ref4.rule.warningOnly,\n                      _ref4$errors = _ref4.errors,\n                      errors = _ref4$errors === void 0 ? EMPTY_ERRORS : _ref4$errors;\n                    if (warningOnly) {\n                      nextWarnings.push.apply(nextWarnings, _toConsumableArray(errors));\n                    } else {\n                      nextErrors.push.apply(nextErrors, _toConsumableArray(errors));\n                    }\n                  });\n                  _this.errors = nextErrors;\n                  _this.warnings = nextWarnings;\n                  _this.triggerMetaEvent();\n                  _this.reRender();\n                }\n              });\n              return _context.abrupt(\"return\", promise);\n            case 13:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee);\n      })));\n      if (validateOnly) {\n        return rootPromise;\n      }\n      _this.validatePromise = rootPromise;\n      _this.dirty = true;\n      _this.errors = EMPTY_ERRORS;\n      _this.warnings = EMPTY_ERRORS;\n      _this.triggerMetaEvent();\n\n      // Force trigger re-render since we need sync renderProps with new meta\n      _this.reRender();\n      return rootPromise;\n    });\n    _defineProperty(_assertThisInitialized(_this), \"isFieldValidating\", function () {\n      return !!_this.validatePromise;\n    });\n    _defineProperty(_assertThisInitialized(_this), \"isFieldTouched\", function () {\n      return _this.touched;\n    });\n    _defineProperty(_assertThisInitialized(_this), \"isFieldDirty\", function () {\n      // Touched or validate or has initialValue\n      if (_this.dirty || _this.props.initialValue !== undefined) {\n        return true;\n      }\n\n      // Form set initialValue\n      var fieldContext = _this.props.fieldContext;\n      var _fieldContext$getInte = fieldContext.getInternalHooks(HOOK_MARK),\n        getInitialValue = _fieldContext$getInte.getInitialValue;\n      if (getInitialValue(_this.getNamePath()) !== undefined) {\n        return true;\n      }\n      return false;\n    });\n    _defineProperty(_assertThisInitialized(_this), \"getErrors\", function () {\n      return _this.errors;\n    });\n    _defineProperty(_assertThisInitialized(_this), \"getWarnings\", function () {\n      return _this.warnings;\n    });\n    _defineProperty(_assertThisInitialized(_this), \"isListField\", function () {\n      return _this.props.isListField;\n    });\n    _defineProperty(_assertThisInitialized(_this), \"isList\", function () {\n      return _this.props.isList;\n    });\n    _defineProperty(_assertThisInitialized(_this), \"isPreserve\", function () {\n      return _this.props.preserve;\n    });\n    // ============================= Child Component =============================\n    _defineProperty(_assertThisInitialized(_this), \"getMeta\", function () {\n      // Make error & validating in cache to save perf\n      _this.prevValidating = _this.isFieldValidating();\n      var meta = {\n        touched: _this.isFieldTouched(),\n        validating: _this.prevValidating,\n        errors: _this.errors,\n        warnings: _this.warnings,\n        name: _this.getNamePath(),\n        validated: _this.validatePromise === null\n      };\n      return meta;\n    });\n    // Only return validate child node. If invalidate, will do nothing about field.\n    _defineProperty(_assertThisInitialized(_this), \"getOnlyChild\", function (children) {\n      // Support render props\n      if (typeof children === 'function') {\n        var _meta2 = _this.getMeta();\n        return _objectSpread(_objectSpread({}, _this.getOnlyChild(children(_this.getControlled(), _meta2, _this.props.fieldContext))), {}, {\n          isFunction: true\n        });\n      }\n\n      // Filed element only\n      var childList = toChildrenArray(children);\n      if (childList.length !== 1 || ! /*#__PURE__*/React.isValidElement(childList[0])) {\n        return {\n          child: childList,\n          isFunction: false\n        };\n      }\n      return {\n        child: childList[0],\n        isFunction: false\n      };\n    });\n    // ============================== Field Control ==============================\n    _defineProperty(_assertThisInitialized(_this), \"getValue\", function (store) {\n      var getFieldsValue = _this.props.fieldContext.getFieldsValue;\n      var namePath = _this.getNamePath();\n      return getValue(store || getFieldsValue(true), namePath);\n    });\n    _defineProperty(_assertThisInitialized(_this), \"getControlled\", function () {\n      var childProps = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var _this$props6 = _this.props,\n        trigger = _this$props6.trigger,\n        validateTrigger = _this$props6.validateTrigger,\n        getValueFromEvent = _this$props6.getValueFromEvent,\n        normalize = _this$props6.normalize,\n        valuePropName = _this$props6.valuePropName,\n        getValueProps = _this$props6.getValueProps,\n        fieldContext = _this$props6.fieldContext;\n      var mergedValidateTrigger = validateTrigger !== undefined ? validateTrigger : fieldContext.validateTrigger;\n      var namePath = _this.getNamePath();\n      var getInternalHooks = fieldContext.getInternalHooks,\n        getFieldsValue = fieldContext.getFieldsValue;\n      var _getInternalHooks = getInternalHooks(HOOK_MARK),\n        dispatch = _getInternalHooks.dispatch;\n      var value = _this.getValue();\n      var mergedGetValueProps = getValueProps || function (val) {\n        return _defineProperty({}, valuePropName, val);\n      };\n\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      var originTriggerFunc = childProps[trigger];\n      var valueProps = mergedGetValueProps(value);\n\n      // warning when prop value is function\n      if (process.env.NODE_ENV !== 'production') {\n        Object.keys(valueProps).forEach(function (key) {\n          warning(typeof valueProps[key] !== 'function', \"It's not recommended to generate dynamic function prop by `getValueProps`. Please pass it to child component directly (prop: \".concat(key, \")\"));\n        });\n      }\n      var control = _objectSpread(_objectSpread({}, childProps), valueProps);\n\n      // Add trigger\n      control[trigger] = function () {\n        // Mark as touched\n        _this.touched = true;\n        _this.dirty = true;\n        _this.triggerMetaEvent();\n        var newValue;\n        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n          args[_key] = arguments[_key];\n        }\n        if (getValueFromEvent) {\n          newValue = getValueFromEvent.apply(void 0, args);\n        } else {\n          newValue = defaultGetValueFromEvent.apply(void 0, [valuePropName].concat(args));\n        }\n        if (normalize) {\n          newValue = normalize(newValue, value, getFieldsValue(true));\n        }\n        dispatch({\n          type: 'updateValue',\n          namePath: namePath,\n          value: newValue\n        });\n        if (originTriggerFunc) {\n          originTriggerFunc.apply(void 0, args);\n        }\n      };\n\n      // Add validateTrigger\n      var validateTriggerList = toArray(mergedValidateTrigger || []);\n      validateTriggerList.forEach(function (triggerName) {\n        // Wrap additional function of component, so that we can get latest value from store\n        var originTrigger = control[triggerName];\n        control[triggerName] = function () {\n          if (originTrigger) {\n            originTrigger.apply(void 0, arguments);\n          }\n\n          // Always use latest rules\n          var rules = _this.props.rules;\n          if (rules && rules.length) {\n            // We dispatch validate to root,\n            // since it will update related data with other field with same name\n            dispatch({\n              type: 'validateField',\n              namePath: namePath,\n              triggerName: triggerName\n            });\n          }\n        };\n      });\n      return control;\n    });\n    if (props.fieldContext) {\n      var getInternalHooks = props.fieldContext.getInternalHooks;\n      var _getInternalHooks2 = getInternalHooks(HOOK_MARK),\n        initEntityValue = _getInternalHooks2.initEntityValue;\n      initEntityValue(_assertThisInitialized(_this));\n    }\n    return _this;\n  }\n  _createClass(Field, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props7 = this.props,\n        shouldUpdate = _this$props7.shouldUpdate,\n        fieldContext = _this$props7.fieldContext;\n      this.mounted = true;\n\n      // Register on init\n      if (fieldContext) {\n        var getInternalHooks = fieldContext.getInternalHooks;\n        var _getInternalHooks3 = getInternalHooks(HOOK_MARK),\n          registerField = _getInternalHooks3.registerField;\n        this.cancelRegisterFunc = registerField(this);\n      }\n\n      // One more render for component in case fields not ready\n      if (shouldUpdate === true) {\n        this.reRender();\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.cancelRegister();\n      this.triggerMetaEvent(true);\n      this.mounted = false;\n    }\n  }, {\n    key: \"reRender\",\n    value: function reRender() {\n      if (!this.mounted) return;\n      this.forceUpdate();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var resetCount = this.state.resetCount;\n      var children = this.props.children;\n      var _this$getOnlyChild = this.getOnlyChild(children),\n        child = _this$getOnlyChild.child,\n        isFunction = _this$getOnlyChild.isFunction;\n\n      // Not need to `cloneElement` since user can handle this in render function self\n      var returnChildNode;\n      if (isFunction) {\n        returnChildNode = child;\n      } else if ( /*#__PURE__*/React.isValidElement(child)) {\n        returnChildNode = /*#__PURE__*/React.cloneElement(child, this.getControlled(child.props));\n      } else {\n        warning(!child, '`children` of Field is not validate ReactElement.');\n        returnChildNode = child;\n      }\n      return /*#__PURE__*/React.createElement(React.Fragment, {\n        key: resetCount\n      }, returnChildNode);\n    }\n  }]);\n  return Field;\n}(React.Component);\n_defineProperty(Field, \"contextType\", FieldContext);\n_defineProperty(Field, \"defaultProps\", {\n  trigger: 'onChange',\n  valuePropName: 'value'\n});\nfunction WrapperField(_ref6) {\n  var name = _ref6.name,\n    restProps = _objectWithoutProperties(_ref6, _excluded);\n  var fieldContext = React.useContext(FieldContext);\n  var listContext = React.useContext(ListContext);\n  var namePath = name !== undefined ? getNamePath(name) : undefined;\n  var key = 'keep';\n  if (!restProps.isListField) {\n    key = \"_\".concat((namePath || []).join('_'));\n  }\n\n  // Warning if it's a directly list field.\n  // We can still support multiple level field preserve.\n  if (process.env.NODE_ENV !== 'production' && restProps.preserve === false && restProps.isListField && namePath.length <= 1) {\n    warning(false, '`preserve` should not apply on Form.List fields.');\n  }\n  return /*#__PURE__*/React.createElement(Field, _extends({\n    key: key,\n    name: namePath,\n    isListField: !!listContext\n  }, restProps, {\n    fieldContext: fieldContext\n  }));\n}\nexport default WrapperField;"],"mappings":"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"},"metadata":{},"sourceType":"module"}