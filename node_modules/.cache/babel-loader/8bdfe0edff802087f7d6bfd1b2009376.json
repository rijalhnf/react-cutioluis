{"ast":null,"code":"import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport { isSame } from \"../../utils/dateUtil\";\n/**\n * RangePicker need additional logic to handle the `disabled` case. e.g.\n * [disabled, enabled] should end date not before start date\n */\n\nexport default function useRangeDisabledDate(values, disabled, activeIndexList, generateConfig, locale, disabledDate) {\n  var activeIndex = activeIndexList[activeIndexList.length - 1];\n  var firstValuedIndex = activeIndexList.find(function (index) {\n    return values[index];\n  });\n\n  var rangeDisabledDate = function rangeDisabledDate(date, info) {\n    var _values = _slicedToArray(values, 2),\n        start = _values[0],\n        end = _values[1];\n\n    var mergedInfo = _objectSpread(_objectSpread({}, info), {}, {\n      from: activeIndex !== firstValuedIndex ? values[firstValuedIndex] : undefined\n    }); // ============================ Disabled ============================\n    // Should not select days before the start date\n\n\n    if (activeIndex === 1 && disabled[0] && start && // Same date isOK\n    !isSame(generateConfig, locale, start, date, mergedInfo.type) && // Before start date\n    generateConfig.isAfter(start, date)) {\n      return true;\n    } // Should not select days after the end date\n\n\n    if (activeIndex === 0 && disabled[1] && end && // Same date isOK\n    !isSame(generateConfig, locale, end, date, mergedInfo.type) && // After end date\n    generateConfig.isAfter(date, end)) {\n      return true;\n    } // ============================= Origin =============================\n\n\n    return disabledDate === null || disabledDate === void 0 ? void 0 : disabledDate(date, mergedInfo);\n  };\n\n  return rangeDisabledDate;\n}","map":{"version":3,"names":["_objectSpread","_slicedToArray","isSame","useRangeDisabledDate","values","disabled","activeIndexList","generateConfig","locale","disabledDate","activeIndex","length","firstValuedIndex","find","index","rangeDisabledDate","date","info","_values","start","end","mergedInfo","from","undefined","type","isAfter"],"sources":["/Users/joji/Documents/CODE/React/react-cutioluis/node_modules/rc-picker/es/PickerInput/hooks/useRangeDisabledDate.js"],"sourcesContent":["import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport { isSame } from \"../../utils/dateUtil\";\n/**\n * RangePicker need additional logic to handle the `disabled` case. e.g.\n * [disabled, enabled] should end date not before start date\n */\nexport default function useRangeDisabledDate(values, disabled, activeIndexList, generateConfig, locale, disabledDate) {\n  var activeIndex = activeIndexList[activeIndexList.length - 1];\n  var firstValuedIndex = activeIndexList.find(function (index) {\n    return values[index];\n  });\n  var rangeDisabledDate = function rangeDisabledDate(date, info) {\n    var _values = _slicedToArray(values, 2),\n      start = _values[0],\n      end = _values[1];\n    var mergedInfo = _objectSpread(_objectSpread({}, info), {}, {\n      from: activeIndex !== firstValuedIndex ? values[firstValuedIndex] : undefined\n    });\n\n    // ============================ Disabled ============================\n    // Should not select days before the start date\n    if (activeIndex === 1 && disabled[0] && start &&\n    // Same date isOK\n    !isSame(generateConfig, locale, start, date, mergedInfo.type) &&\n    // Before start date\n    generateConfig.isAfter(start, date)) {\n      return true;\n    }\n\n    // Should not select days after the end date\n    if (activeIndex === 0 && disabled[1] && end &&\n    // Same date isOK\n    !isSame(generateConfig, locale, end, date, mergedInfo.type) &&\n    // After end date\n    generateConfig.isAfter(date, end)) {\n      return true;\n    }\n\n    // ============================= Origin =============================\n    return disabledDate === null || disabledDate === void 0 ? void 0 : disabledDate(date, mergedInfo);\n  };\n  return rangeDisabledDate;\n}"],"mappings":"AAAA,OAAOA,aAAP,MAA0B,0CAA1B;AACA,OAAOC,cAAP,MAA2B,0CAA3B;AACA,SAASC,MAAT,QAAuB,sBAAvB;AACA;AACA;AACA;AACA;;AACA,eAAe,SAASC,oBAAT,CAA8BC,MAA9B,EAAsCC,QAAtC,EAAgDC,eAAhD,EAAiEC,cAAjE,EAAiFC,MAAjF,EAAyFC,YAAzF,EAAuG;EACpH,IAAIC,WAAW,GAAGJ,eAAe,CAACA,eAAe,CAACK,MAAhB,GAAyB,CAA1B,CAAjC;EACA,IAAIC,gBAAgB,GAAGN,eAAe,CAACO,IAAhB,CAAqB,UAAUC,KAAV,EAAiB;IAC3D,OAAOV,MAAM,CAACU,KAAD,CAAb;EACD,CAFsB,CAAvB;;EAGA,IAAIC,iBAAiB,GAAG,SAASA,iBAAT,CAA2BC,IAA3B,EAAiCC,IAAjC,EAAuC;IAC7D,IAAIC,OAAO,GAAGjB,cAAc,CAACG,MAAD,EAAS,CAAT,CAA5B;IAAA,IACEe,KAAK,GAAGD,OAAO,CAAC,CAAD,CADjB;IAAA,IAEEE,GAAG,GAAGF,OAAO,CAAC,CAAD,CAFf;;IAGA,IAAIG,UAAU,GAAGrB,aAAa,CAACA,aAAa,CAAC,EAAD,EAAKiB,IAAL,CAAd,EAA0B,EAA1B,EAA8B;MAC1DK,IAAI,EAAEZ,WAAW,KAAKE,gBAAhB,GAAmCR,MAAM,CAACQ,gBAAD,CAAzC,GAA8DW;IADV,CAA9B,CAA9B,CAJ6D,CAQ7D;IACA;;;IACA,IAAIb,WAAW,KAAK,CAAhB,IAAqBL,QAAQ,CAAC,CAAD,CAA7B,IAAoCc,KAApC,IACJ;IACA,CAACjB,MAAM,CAACK,cAAD,EAAiBC,MAAjB,EAAyBW,KAAzB,EAAgCH,IAAhC,EAAsCK,UAAU,CAACG,IAAjD,CAFH,IAGJ;IACAjB,cAAc,CAACkB,OAAf,CAAuBN,KAAvB,EAA8BH,IAA9B,CAJA,EAIqC;MACnC,OAAO,IAAP;IACD,CAhB4D,CAkB7D;;;IACA,IAAIN,WAAW,KAAK,CAAhB,IAAqBL,QAAQ,CAAC,CAAD,CAA7B,IAAoCe,GAApC,IACJ;IACA,CAAClB,MAAM,CAACK,cAAD,EAAiBC,MAAjB,EAAyBY,GAAzB,EAA8BJ,IAA9B,EAAoCK,UAAU,CAACG,IAA/C,CAFH,IAGJ;IACAjB,cAAc,CAACkB,OAAf,CAAuBT,IAAvB,EAA6BI,GAA7B,CAJA,EAImC;MACjC,OAAO,IAAP;IACD,CAzB4D,CA2B7D;;;IACA,OAAOX,YAAY,KAAK,IAAjB,IAAyBA,YAAY,KAAK,KAAK,CAA/C,GAAmD,KAAK,CAAxD,GAA4DA,YAAY,CAACO,IAAD,EAAOK,UAAP,CAA/E;EACD,CA7BD;;EA8BA,OAAON,iBAAP;AACD"},"metadata":{},"sourceType":"module"}