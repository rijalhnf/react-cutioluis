{"ast":null,"code":"import { Keyframes, unit } from '@ant-design/cssinjs';\nimport { genStyleHooks, mergeToken } from '../../theme/internal';\nconst skeletonClsLoading = new Keyframes(`ant-skeleton-loading`, {\n  '0%': {\n    backgroundPosition: '100% 50%'\n  },\n  '100%': {\n    backgroundPosition: '0 50%'\n  }\n});\n\nconst genSkeletonElementCommonSize = size => ({\n  height: size,\n  lineHeight: unit(size)\n});\n\nconst genSkeletonElementAvatarSize = size => Object.assign({\n  width: size\n}, genSkeletonElementCommonSize(size));\n\nconst genSkeletonColor = token => ({\n  background: token.skeletonLoadingBackground,\n  backgroundSize: '400% 100%',\n  animationName: skeletonClsLoading,\n  animationDuration: token.skeletonLoadingMotionDuration,\n  animationTimingFunction: 'ease',\n  animationIterationCount: 'infinite'\n});\n\nconst genSkeletonElementInputSize = (size, calc) => Object.assign({\n  width: calc(size).mul(5).equal(),\n  minWidth: calc(size).mul(5).equal()\n}, genSkeletonElementCommonSize(size));\n\nconst genSkeletonElementAvatar = token => {\n  const {\n    skeletonAvatarCls,\n    gradientFromColor,\n    controlHeight,\n    controlHeightLG,\n    controlHeightSM\n  } = token;\n  return {\n    [`${skeletonAvatarCls}`]: Object.assign({\n      display: 'inline-block',\n      verticalAlign: 'top',\n      background: gradientFromColor\n    }, genSkeletonElementAvatarSize(controlHeight)),\n    [`${skeletonAvatarCls}${skeletonAvatarCls}-circle`]: {\n      borderRadius: '50%'\n    },\n    [`${skeletonAvatarCls}${skeletonAvatarCls}-lg`]: Object.assign({}, genSkeletonElementAvatarSize(controlHeightLG)),\n    [`${skeletonAvatarCls}${skeletonAvatarCls}-sm`]: Object.assign({}, genSkeletonElementAvatarSize(controlHeightSM))\n  };\n};\n\nconst genSkeletonElementInput = token => {\n  const {\n    controlHeight,\n    borderRadiusSM,\n    skeletonInputCls,\n    controlHeightLG,\n    controlHeightSM,\n    gradientFromColor,\n    calc\n  } = token;\n  return {\n    [`${skeletonInputCls}`]: Object.assign({\n      display: 'inline-block',\n      verticalAlign: 'top',\n      background: gradientFromColor,\n      borderRadius: borderRadiusSM\n    }, genSkeletonElementInputSize(controlHeight, calc)),\n    [`${skeletonInputCls}-lg`]: Object.assign({}, genSkeletonElementInputSize(controlHeightLG, calc)),\n    [`${skeletonInputCls}-sm`]: Object.assign({}, genSkeletonElementInputSize(controlHeightSM, calc))\n  };\n};\n\nconst genSkeletonElementImageSize = size => Object.assign({\n  width: size\n}, genSkeletonElementCommonSize(size));\n\nconst genSkeletonElementImage = token => {\n  const {\n    skeletonImageCls,\n    imageSizeBase,\n    gradientFromColor,\n    borderRadiusSM,\n    calc\n  } = token;\n  return {\n    [`${skeletonImageCls}`]: Object.assign(Object.assign({\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      verticalAlign: 'top',\n      background: gradientFromColor,\n      borderRadius: borderRadiusSM\n    }, genSkeletonElementImageSize(calc(imageSizeBase).mul(2).equal())), {\n      [`${skeletonImageCls}-path`]: {\n        fill: '#bfbfbf'\n      },\n      [`${skeletonImageCls}-svg`]: Object.assign(Object.assign({}, genSkeletonElementImageSize(imageSizeBase)), {\n        maxWidth: calc(imageSizeBase).mul(4).equal(),\n        maxHeight: calc(imageSizeBase).mul(4).equal()\n      }),\n      [`${skeletonImageCls}-svg${skeletonImageCls}-svg-circle`]: {\n        borderRadius: '50%'\n      }\n    }),\n    [`${skeletonImageCls}${skeletonImageCls}-circle`]: {\n      borderRadius: '50%'\n    }\n  };\n};\n\nconst genSkeletonElementButtonShape = (token, size, buttonCls) => {\n  const {\n    skeletonButtonCls\n  } = token;\n  return {\n    [`${buttonCls}${skeletonButtonCls}-circle`]: {\n      width: size,\n      minWidth: size,\n      borderRadius: '50%'\n    },\n    [`${buttonCls}${skeletonButtonCls}-round`]: {\n      borderRadius: size\n    }\n  };\n};\n\nconst genSkeletonElementButtonSize = (size, calc) => Object.assign({\n  width: calc(size).mul(2).equal(),\n  minWidth: calc(size).mul(2).equal()\n}, genSkeletonElementCommonSize(size));\n\nconst genSkeletonElementButton = token => {\n  const {\n    borderRadiusSM,\n    skeletonButtonCls,\n    controlHeight,\n    controlHeightLG,\n    controlHeightSM,\n    gradientFromColor,\n    calc\n  } = token;\n  return Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({\n    [`${skeletonButtonCls}`]: Object.assign({\n      display: 'inline-block',\n      verticalAlign: 'top',\n      background: gradientFromColor,\n      borderRadius: borderRadiusSM,\n      width: calc(controlHeight).mul(2).equal(),\n      minWidth: calc(controlHeight).mul(2).equal()\n    }, genSkeletonElementButtonSize(controlHeight, calc))\n  }, genSkeletonElementButtonShape(token, controlHeight, skeletonButtonCls)), {\n    [`${skeletonButtonCls}-lg`]: Object.assign({}, genSkeletonElementButtonSize(controlHeightLG, calc))\n  }), genSkeletonElementButtonShape(token, controlHeightLG, `${skeletonButtonCls}-lg`)), {\n    [`${skeletonButtonCls}-sm`]: Object.assign({}, genSkeletonElementButtonSize(controlHeightSM, calc))\n  }), genSkeletonElementButtonShape(token, controlHeightSM, `${skeletonButtonCls}-sm`));\n}; // =============================== Base ===============================\n\n\nconst genBaseStyle = token => {\n  const {\n    componentCls,\n    skeletonAvatarCls,\n    skeletonTitleCls,\n    skeletonParagraphCls,\n    skeletonButtonCls,\n    skeletonInputCls,\n    skeletonImageCls,\n    controlHeight,\n    controlHeightLG,\n    controlHeightSM,\n    gradientFromColor,\n    padding,\n    marginSM,\n    borderRadius,\n    titleHeight,\n    blockRadius,\n    paragraphLiHeight,\n    controlHeightXS,\n    paragraphMarginTop\n  } = token;\n  return {\n    [`${componentCls}`]: {\n      display: 'table',\n      width: '100%',\n      [`${componentCls}-header`]: {\n        display: 'table-cell',\n        paddingInlineEnd: padding,\n        verticalAlign: 'top',\n        // Avatar\n        [`${skeletonAvatarCls}`]: Object.assign({\n          display: 'inline-block',\n          verticalAlign: 'top',\n          background: gradientFromColor\n        }, genSkeletonElementAvatarSize(controlHeight)),\n        [`${skeletonAvatarCls}-circle`]: {\n          borderRadius: '50%'\n        },\n        [`${skeletonAvatarCls}-lg`]: Object.assign({}, genSkeletonElementAvatarSize(controlHeightLG)),\n        [`${skeletonAvatarCls}-sm`]: Object.assign({}, genSkeletonElementAvatarSize(controlHeightSM))\n      },\n      [`${componentCls}-content`]: {\n        display: 'table-cell',\n        width: '100%',\n        verticalAlign: 'top',\n        // Title\n        [`${skeletonTitleCls}`]: {\n          width: '100%',\n          height: titleHeight,\n          background: gradientFromColor,\n          borderRadius: blockRadius,\n          [`+ ${skeletonParagraphCls}`]: {\n            marginBlockStart: controlHeightSM\n          }\n        },\n        // paragraph\n        [`${skeletonParagraphCls}`]: {\n          padding: 0,\n          '> li': {\n            width: '100%',\n            height: paragraphLiHeight,\n            listStyle: 'none',\n            background: gradientFromColor,\n            borderRadius: blockRadius,\n            '+ li': {\n              marginBlockStart: controlHeightXS\n            }\n          }\n        },\n        [`${skeletonParagraphCls}> li:last-child:not(:first-child):not(:nth-child(2))`]: {\n          width: '61%'\n        }\n      },\n      [`&-round ${componentCls}-content`]: {\n        [`${skeletonTitleCls}, ${skeletonParagraphCls} > li`]: {\n          borderRadius\n        }\n      }\n    },\n    [`${componentCls}-with-avatar ${componentCls}-content`]: {\n      // Title\n      [`${skeletonTitleCls}`]: {\n        marginBlockStart: marginSM,\n        [`+ ${skeletonParagraphCls}`]: {\n          marginBlockStart: paragraphMarginTop\n        }\n      }\n    },\n    // Skeleton element\n    [`${componentCls}${componentCls}-element`]: Object.assign(Object.assign(Object.assign(Object.assign({\n      display: 'inline-block',\n      width: 'auto'\n    }, genSkeletonElementButton(token)), genSkeletonElementAvatar(token)), genSkeletonElementInput(token)), genSkeletonElementImage(token)),\n    // Skeleton Block Button, Input\n    [`${componentCls}${componentCls}-block`]: {\n      width: '100%',\n      [`${skeletonButtonCls}`]: {\n        width: '100%'\n      },\n      [`${skeletonInputCls}`]: {\n        width: '100%'\n      }\n    },\n    // With active animation\n    [`${componentCls}${componentCls}-active`]: {\n      [`\n        ${skeletonTitleCls},\n        ${skeletonParagraphCls} > li,\n        ${skeletonAvatarCls},\n        ${skeletonButtonCls},\n        ${skeletonInputCls},\n        ${skeletonImageCls}\n      `]: Object.assign({}, genSkeletonColor(token))\n    }\n  };\n}; // ============================== Export ==============================\n\n\nexport const prepareComponentToken = token => {\n  const {\n    colorFillContent,\n    colorFill\n  } = token;\n  const gradientFromColor = colorFillContent;\n  const gradientToColor = colorFill;\n  return {\n    color: gradientFromColor,\n    colorGradientEnd: gradientToColor,\n    gradientFromColor,\n    gradientToColor,\n    titleHeight: token.controlHeight / 2,\n    blockRadius: token.borderRadiusSM,\n    paragraphMarginTop: token.marginLG + token.marginXXS,\n    paragraphLiHeight: token.controlHeight / 2\n  };\n};\nexport default genStyleHooks('Skeleton', token => {\n  const {\n    componentCls,\n    calc\n  } = token;\n  const skeletonToken = mergeToken(token, {\n    skeletonAvatarCls: `${componentCls}-avatar`,\n    skeletonTitleCls: `${componentCls}-title`,\n    skeletonParagraphCls: `${componentCls}-paragraph`,\n    skeletonButtonCls: `${componentCls}-button`,\n    skeletonInputCls: `${componentCls}-input`,\n    skeletonImageCls: `${componentCls}-image`,\n    imageSizeBase: calc(token.controlHeight).mul(1.5).equal(),\n    borderRadius: 100,\n    // Large number to make capsule shape\n    skeletonLoadingBackground: `linear-gradient(90deg, ${token.gradientFromColor} 25%, ${token.gradientToColor} 37%, ${token.gradientFromColor} 63%)`,\n    skeletonLoadingMotionDuration: '1.4s'\n  });\n  return [genBaseStyle(skeletonToken)];\n}, prepareComponentToken, {\n  deprecatedTokens: [['color', 'gradientFromColor'], ['colorGradientEnd', 'gradientToColor']]\n});","map":{"version":3,"names":["Keyframes","unit","genStyleHooks","mergeToken","skeletonClsLoading","backgroundPosition","genSkeletonElementCommonSize","size","height","lineHeight","genSkeletonElementAvatarSize","Object","assign","width","genSkeletonColor","token","background","skeletonLoadingBackground","backgroundSize","animationName","animationDuration","skeletonLoadingMotionDuration","animationTimingFunction","animationIterationCount","genSkeletonElementInputSize","calc","mul","equal","minWidth","genSkeletonElementAvatar","skeletonAvatarCls","gradientFromColor","controlHeight","controlHeightLG","controlHeightSM","display","verticalAlign","borderRadius","genSkeletonElementInput","borderRadiusSM","skeletonInputCls","genSkeletonElementImageSize","genSkeletonElementImage","skeletonImageCls","imageSizeBase","alignItems","justifyContent","fill","maxWidth","maxHeight","genSkeletonElementButtonShape","buttonCls","skeletonButtonCls","genSkeletonElementButtonSize","genSkeletonElementButton","genBaseStyle","componentCls","skeletonTitleCls","skeletonParagraphCls","padding","marginSM","titleHeight","blockRadius","paragraphLiHeight","controlHeightXS","paragraphMarginTop","paddingInlineEnd","marginBlockStart","listStyle","prepareComponentToken","colorFillContent","colorFill","gradientToColor","color","colorGradientEnd","marginLG","marginXXS","skeletonToken","deprecatedTokens"],"sources":["/Users/joji/Documents/CODE/React/react-cutioluis/node_modules/antd/es/skeleton/style/index.js"],"sourcesContent":["import { Keyframes, unit } from '@ant-design/cssinjs';\nimport { genStyleHooks, mergeToken } from '../../theme/internal';\nconst skeletonClsLoading = new Keyframes(`ant-skeleton-loading`, {\n  '0%': {\n    backgroundPosition: '100% 50%'\n  },\n  '100%': {\n    backgroundPosition: '0 50%'\n  }\n});\nconst genSkeletonElementCommonSize = size => ({\n  height: size,\n  lineHeight: unit(size)\n});\nconst genSkeletonElementAvatarSize = size => Object.assign({\n  width: size\n}, genSkeletonElementCommonSize(size));\nconst genSkeletonColor = token => ({\n  background: token.skeletonLoadingBackground,\n  backgroundSize: '400% 100%',\n  animationName: skeletonClsLoading,\n  animationDuration: token.skeletonLoadingMotionDuration,\n  animationTimingFunction: 'ease',\n  animationIterationCount: 'infinite'\n});\nconst genSkeletonElementInputSize = (size, calc) => Object.assign({\n  width: calc(size).mul(5).equal(),\n  minWidth: calc(size).mul(5).equal()\n}, genSkeletonElementCommonSize(size));\nconst genSkeletonElementAvatar = token => {\n  const {\n    skeletonAvatarCls,\n    gradientFromColor,\n    controlHeight,\n    controlHeightLG,\n    controlHeightSM\n  } = token;\n  return {\n    [`${skeletonAvatarCls}`]: Object.assign({\n      display: 'inline-block',\n      verticalAlign: 'top',\n      background: gradientFromColor\n    }, genSkeletonElementAvatarSize(controlHeight)),\n    [`${skeletonAvatarCls}${skeletonAvatarCls}-circle`]: {\n      borderRadius: '50%'\n    },\n    [`${skeletonAvatarCls}${skeletonAvatarCls}-lg`]: Object.assign({}, genSkeletonElementAvatarSize(controlHeightLG)),\n    [`${skeletonAvatarCls}${skeletonAvatarCls}-sm`]: Object.assign({}, genSkeletonElementAvatarSize(controlHeightSM))\n  };\n};\nconst genSkeletonElementInput = token => {\n  const {\n    controlHeight,\n    borderRadiusSM,\n    skeletonInputCls,\n    controlHeightLG,\n    controlHeightSM,\n    gradientFromColor,\n    calc\n  } = token;\n  return {\n    [`${skeletonInputCls}`]: Object.assign({\n      display: 'inline-block',\n      verticalAlign: 'top',\n      background: gradientFromColor,\n      borderRadius: borderRadiusSM\n    }, genSkeletonElementInputSize(controlHeight, calc)),\n    [`${skeletonInputCls}-lg`]: Object.assign({}, genSkeletonElementInputSize(controlHeightLG, calc)),\n    [`${skeletonInputCls}-sm`]: Object.assign({}, genSkeletonElementInputSize(controlHeightSM, calc))\n  };\n};\nconst genSkeletonElementImageSize = size => Object.assign({\n  width: size\n}, genSkeletonElementCommonSize(size));\nconst genSkeletonElementImage = token => {\n  const {\n    skeletonImageCls,\n    imageSizeBase,\n    gradientFromColor,\n    borderRadiusSM,\n    calc\n  } = token;\n  return {\n    [`${skeletonImageCls}`]: Object.assign(Object.assign({\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      verticalAlign: 'top',\n      background: gradientFromColor,\n      borderRadius: borderRadiusSM\n    }, genSkeletonElementImageSize(calc(imageSizeBase).mul(2).equal())), {\n      [`${skeletonImageCls}-path`]: {\n        fill: '#bfbfbf'\n      },\n      [`${skeletonImageCls}-svg`]: Object.assign(Object.assign({}, genSkeletonElementImageSize(imageSizeBase)), {\n        maxWidth: calc(imageSizeBase).mul(4).equal(),\n        maxHeight: calc(imageSizeBase).mul(4).equal()\n      }),\n      [`${skeletonImageCls}-svg${skeletonImageCls}-svg-circle`]: {\n        borderRadius: '50%'\n      }\n    }),\n    [`${skeletonImageCls}${skeletonImageCls}-circle`]: {\n      borderRadius: '50%'\n    }\n  };\n};\nconst genSkeletonElementButtonShape = (token, size, buttonCls) => {\n  const {\n    skeletonButtonCls\n  } = token;\n  return {\n    [`${buttonCls}${skeletonButtonCls}-circle`]: {\n      width: size,\n      minWidth: size,\n      borderRadius: '50%'\n    },\n    [`${buttonCls}${skeletonButtonCls}-round`]: {\n      borderRadius: size\n    }\n  };\n};\nconst genSkeletonElementButtonSize = (size, calc) => Object.assign({\n  width: calc(size).mul(2).equal(),\n  minWidth: calc(size).mul(2).equal()\n}, genSkeletonElementCommonSize(size));\nconst genSkeletonElementButton = token => {\n  const {\n    borderRadiusSM,\n    skeletonButtonCls,\n    controlHeight,\n    controlHeightLG,\n    controlHeightSM,\n    gradientFromColor,\n    calc\n  } = token;\n  return Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({\n    [`${skeletonButtonCls}`]: Object.assign({\n      display: 'inline-block',\n      verticalAlign: 'top',\n      background: gradientFromColor,\n      borderRadius: borderRadiusSM,\n      width: calc(controlHeight).mul(2).equal(),\n      minWidth: calc(controlHeight).mul(2).equal()\n    }, genSkeletonElementButtonSize(controlHeight, calc))\n  }, genSkeletonElementButtonShape(token, controlHeight, skeletonButtonCls)), {\n    [`${skeletonButtonCls}-lg`]: Object.assign({}, genSkeletonElementButtonSize(controlHeightLG, calc))\n  }), genSkeletonElementButtonShape(token, controlHeightLG, `${skeletonButtonCls}-lg`)), {\n    [`${skeletonButtonCls}-sm`]: Object.assign({}, genSkeletonElementButtonSize(controlHeightSM, calc))\n  }), genSkeletonElementButtonShape(token, controlHeightSM, `${skeletonButtonCls}-sm`));\n};\n// =============================== Base ===============================\nconst genBaseStyle = token => {\n  const {\n    componentCls,\n    skeletonAvatarCls,\n    skeletonTitleCls,\n    skeletonParagraphCls,\n    skeletonButtonCls,\n    skeletonInputCls,\n    skeletonImageCls,\n    controlHeight,\n    controlHeightLG,\n    controlHeightSM,\n    gradientFromColor,\n    padding,\n    marginSM,\n    borderRadius,\n    titleHeight,\n    blockRadius,\n    paragraphLiHeight,\n    controlHeightXS,\n    paragraphMarginTop\n  } = token;\n  return {\n    [`${componentCls}`]: {\n      display: 'table',\n      width: '100%',\n      [`${componentCls}-header`]: {\n        display: 'table-cell',\n        paddingInlineEnd: padding,\n        verticalAlign: 'top',\n        // Avatar\n        [`${skeletonAvatarCls}`]: Object.assign({\n          display: 'inline-block',\n          verticalAlign: 'top',\n          background: gradientFromColor\n        }, genSkeletonElementAvatarSize(controlHeight)),\n        [`${skeletonAvatarCls}-circle`]: {\n          borderRadius: '50%'\n        },\n        [`${skeletonAvatarCls}-lg`]: Object.assign({}, genSkeletonElementAvatarSize(controlHeightLG)),\n        [`${skeletonAvatarCls}-sm`]: Object.assign({}, genSkeletonElementAvatarSize(controlHeightSM))\n      },\n      [`${componentCls}-content`]: {\n        display: 'table-cell',\n        width: '100%',\n        verticalAlign: 'top',\n        // Title\n        [`${skeletonTitleCls}`]: {\n          width: '100%',\n          height: titleHeight,\n          background: gradientFromColor,\n          borderRadius: blockRadius,\n          [`+ ${skeletonParagraphCls}`]: {\n            marginBlockStart: controlHeightSM\n          }\n        },\n        // paragraph\n        [`${skeletonParagraphCls}`]: {\n          padding: 0,\n          '> li': {\n            width: '100%',\n            height: paragraphLiHeight,\n            listStyle: 'none',\n            background: gradientFromColor,\n            borderRadius: blockRadius,\n            '+ li': {\n              marginBlockStart: controlHeightXS\n            }\n          }\n        },\n        [`${skeletonParagraphCls}> li:last-child:not(:first-child):not(:nth-child(2))`]: {\n          width: '61%'\n        }\n      },\n      [`&-round ${componentCls}-content`]: {\n        [`${skeletonTitleCls}, ${skeletonParagraphCls} > li`]: {\n          borderRadius\n        }\n      }\n    },\n    [`${componentCls}-with-avatar ${componentCls}-content`]: {\n      // Title\n      [`${skeletonTitleCls}`]: {\n        marginBlockStart: marginSM,\n        [`+ ${skeletonParagraphCls}`]: {\n          marginBlockStart: paragraphMarginTop\n        }\n      }\n    },\n    // Skeleton element\n    [`${componentCls}${componentCls}-element`]: Object.assign(Object.assign(Object.assign(Object.assign({\n      display: 'inline-block',\n      width: 'auto'\n    }, genSkeletonElementButton(token)), genSkeletonElementAvatar(token)), genSkeletonElementInput(token)), genSkeletonElementImage(token)),\n    // Skeleton Block Button, Input\n    [`${componentCls}${componentCls}-block`]: {\n      width: '100%',\n      [`${skeletonButtonCls}`]: {\n        width: '100%'\n      },\n      [`${skeletonInputCls}`]: {\n        width: '100%'\n      }\n    },\n    // With active animation\n    [`${componentCls}${componentCls}-active`]: {\n      [`\n        ${skeletonTitleCls},\n        ${skeletonParagraphCls} > li,\n        ${skeletonAvatarCls},\n        ${skeletonButtonCls},\n        ${skeletonInputCls},\n        ${skeletonImageCls}\n      `]: Object.assign({}, genSkeletonColor(token))\n    }\n  };\n};\n// ============================== Export ==============================\nexport const prepareComponentToken = token => {\n  const {\n    colorFillContent,\n    colorFill\n  } = token;\n  const gradientFromColor = colorFillContent;\n  const gradientToColor = colorFill;\n  return {\n    color: gradientFromColor,\n    colorGradientEnd: gradientToColor,\n    gradientFromColor,\n    gradientToColor,\n    titleHeight: token.controlHeight / 2,\n    blockRadius: token.borderRadiusSM,\n    paragraphMarginTop: token.marginLG + token.marginXXS,\n    paragraphLiHeight: token.controlHeight / 2\n  };\n};\nexport default genStyleHooks('Skeleton', token => {\n  const {\n    componentCls,\n    calc\n  } = token;\n  const skeletonToken = mergeToken(token, {\n    skeletonAvatarCls: `${componentCls}-avatar`,\n    skeletonTitleCls: `${componentCls}-title`,\n    skeletonParagraphCls: `${componentCls}-paragraph`,\n    skeletonButtonCls: `${componentCls}-button`,\n    skeletonInputCls: `${componentCls}-input`,\n    skeletonImageCls: `${componentCls}-image`,\n    imageSizeBase: calc(token.controlHeight).mul(1.5).equal(),\n    borderRadius: 100,\n    // Large number to make capsule shape\n    skeletonLoadingBackground: `linear-gradient(90deg, ${token.gradientFromColor} 25%, ${token.gradientToColor} 37%, ${token.gradientFromColor} 63%)`,\n    skeletonLoadingMotionDuration: '1.4s'\n  });\n  return [genBaseStyle(skeletonToken)];\n}, prepareComponentToken, {\n  deprecatedTokens: [['color', 'gradientFromColor'], ['colorGradientEnd', 'gradientToColor']]\n});"],"mappings":"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"},"metadata":{},"sourceType":"module"}