{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport * as React from 'react';\n/**\n * Size info need loop query for the `heights` which will has the perf issue.\n * Let cache result for each render phase.\n */\n\nexport function useGetSize(mergedData, getKey, heights, itemHeight) {\n  var _React$useMemo = React.useMemo(function () {\n    return [new Map(), []];\n  }, [mergedData, heights.id, itemHeight]),\n      _React$useMemo2 = _slicedToArray(_React$useMemo, 2),\n      key2Index = _React$useMemo2[0],\n      bottomList = _React$useMemo2[1];\n\n  var getSize = function getSize(startKey) {\n    var endKey = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : startKey; // Get from cache first\n\n    var startIndex = key2Index.get(startKey);\n    var endIndex = key2Index.get(endKey); // Loop to fill the cache\n\n    if (startIndex === undefined || endIndex === undefined) {\n      var dataLen = mergedData.length;\n\n      for (var i = bottomList.length; i < dataLen; i += 1) {\n        var _heights$get;\n\n        var item = mergedData[i];\n        var key = getKey(item);\n        key2Index.set(key, i);\n        var cacheHeight = (_heights$get = heights.get(key)) !== null && _heights$get !== void 0 ? _heights$get : itemHeight;\n        bottomList[i] = (bottomList[i - 1] || 0) + cacheHeight;\n\n        if (key === startKey) {\n          startIndex = i;\n        }\n\n        if (key === endKey) {\n          endIndex = i;\n        }\n\n        if (startIndex !== undefined && endIndex !== undefined) {\n          break;\n        }\n      }\n    }\n\n    return {\n      top: bottomList[startIndex - 1] || 0,\n      bottom: bottomList[endIndex]\n    };\n  };\n\n  return getSize;\n}","map":{"version":3,"names":["_slicedToArray","React","useGetSize","mergedData","getKey","heights","itemHeight","_React$useMemo","useMemo","Map","id","_React$useMemo2","key2Index","bottomList","getSize","startKey","endKey","arguments","length","undefined","startIndex","get","endIndex","dataLen","i","_heights$get","item","key","set","cacheHeight","top","bottom"],"sources":["/Users/joji/Documents/CODE/React/react-cutioluis/node_modules/rc-virtual-list/es/hooks/useGetSize.js"],"sourcesContent":["import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport * as React from 'react';\n\n/**\n * Size info need loop query for the `heights` which will has the perf issue.\n * Let cache result for each render phase.\n */\nexport function useGetSize(mergedData, getKey, heights, itemHeight) {\n  var _React$useMemo = React.useMemo(function () {\n      return [new Map(), []];\n    }, [mergedData, heights.id, itemHeight]),\n    _React$useMemo2 = _slicedToArray(_React$useMemo, 2),\n    key2Index = _React$useMemo2[0],\n    bottomList = _React$useMemo2[1];\n  var getSize = function getSize(startKey) {\n    var endKey = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : startKey;\n    // Get from cache first\n    var startIndex = key2Index.get(startKey);\n    var endIndex = key2Index.get(endKey);\n\n    // Loop to fill the cache\n    if (startIndex === undefined || endIndex === undefined) {\n      var dataLen = mergedData.length;\n      for (var i = bottomList.length; i < dataLen; i += 1) {\n        var _heights$get;\n        var item = mergedData[i];\n        var key = getKey(item);\n        key2Index.set(key, i);\n        var cacheHeight = (_heights$get = heights.get(key)) !== null && _heights$get !== void 0 ? _heights$get : itemHeight;\n        bottomList[i] = (bottomList[i - 1] || 0) + cacheHeight;\n        if (key === startKey) {\n          startIndex = i;\n        }\n        if (key === endKey) {\n          endIndex = i;\n        }\n        if (startIndex !== undefined && endIndex !== undefined) {\n          break;\n        }\n      }\n    }\n    return {\n      top: bottomList[startIndex - 1] || 0,\n      bottom: bottomList[endIndex]\n    };\n  };\n  return getSize;\n}"],"mappings":"AAAA,OAAOA,cAAP,MAA2B,0CAA3B;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AAEA;AACA;AACA;AACA;;AACA,OAAO,SAASC,UAAT,CAAoBC,UAApB,EAAgCC,MAAhC,EAAwCC,OAAxC,EAAiDC,UAAjD,EAA6D;EAClE,IAAIC,cAAc,GAAGN,KAAK,CAACO,OAAN,CAAc,YAAY;IAC3C,OAAO,CAAC,IAAIC,GAAJ,EAAD,EAAY,EAAZ,CAAP;EACD,CAFkB,EAEhB,CAACN,UAAD,EAAaE,OAAO,CAACK,EAArB,EAAyBJ,UAAzB,CAFgB,CAArB;EAAA,IAGEK,eAAe,GAAGX,cAAc,CAACO,cAAD,EAAiB,CAAjB,CAHlC;EAAA,IAIEK,SAAS,GAAGD,eAAe,CAAC,CAAD,CAJ7B;EAAA,IAKEE,UAAU,GAAGF,eAAe,CAAC,CAAD,CAL9B;;EAMA,IAAIG,OAAO,GAAG,SAASA,OAAT,CAAiBC,QAAjB,EAA2B;IACvC,IAAIC,MAAM,GAAGC,SAAS,CAACC,MAAV,GAAmB,CAAnB,IAAwBD,SAAS,CAAC,CAAD,CAAT,KAAiBE,SAAzC,GAAqDF,SAAS,CAAC,CAAD,CAA9D,GAAoEF,QAAjF,CADuC,CAEvC;;IACA,IAAIK,UAAU,GAAGR,SAAS,CAACS,GAAV,CAAcN,QAAd,CAAjB;IACA,IAAIO,QAAQ,GAAGV,SAAS,CAACS,GAAV,CAAcL,MAAd,CAAf,CAJuC,CAMvC;;IACA,IAAII,UAAU,KAAKD,SAAf,IAA4BG,QAAQ,KAAKH,SAA7C,EAAwD;MACtD,IAAII,OAAO,GAAGpB,UAAU,CAACe,MAAzB;;MACA,KAAK,IAAIM,CAAC,GAAGX,UAAU,CAACK,MAAxB,EAAgCM,CAAC,GAAGD,OAApC,EAA6CC,CAAC,IAAI,CAAlD,EAAqD;QACnD,IAAIC,YAAJ;;QACA,IAAIC,IAAI,GAAGvB,UAAU,CAACqB,CAAD,CAArB;QACA,IAAIG,GAAG,GAAGvB,MAAM,CAACsB,IAAD,CAAhB;QACAd,SAAS,CAACgB,GAAV,CAAcD,GAAd,EAAmBH,CAAnB;QACA,IAAIK,WAAW,GAAG,CAACJ,YAAY,GAAGpB,OAAO,CAACgB,GAAR,CAAYM,GAAZ,CAAhB,MAAsC,IAAtC,IAA8CF,YAAY,KAAK,KAAK,CAApE,GAAwEA,YAAxE,GAAuFnB,UAAzG;QACAO,UAAU,CAACW,CAAD,CAAV,GAAgB,CAACX,UAAU,CAACW,CAAC,GAAG,CAAL,CAAV,IAAqB,CAAtB,IAA2BK,WAA3C;;QACA,IAAIF,GAAG,KAAKZ,QAAZ,EAAsB;UACpBK,UAAU,GAAGI,CAAb;QACD;;QACD,IAAIG,GAAG,KAAKX,MAAZ,EAAoB;UAClBM,QAAQ,GAAGE,CAAX;QACD;;QACD,IAAIJ,UAAU,KAAKD,SAAf,IAA4BG,QAAQ,KAAKH,SAA7C,EAAwD;UACtD;QACD;MACF;IACF;;IACD,OAAO;MACLW,GAAG,EAAEjB,UAAU,CAACO,UAAU,GAAG,CAAd,CAAV,IAA8B,CAD9B;MAELW,MAAM,EAAElB,UAAU,CAACS,QAAD;IAFb,CAAP;EAID,CA/BD;;EAgCA,OAAOR,OAAP;AACD"},"metadata":{},"sourceType":"module"}