{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport hash from '@emotion/hash';\nimport { updateCSS } from \"rc-util/es/Dom/dynamicCSS\";\nimport { useContext } from 'react';\nimport StyleContext, { ATTR_MARK, ATTR_TOKEN, CSS_IN_JS_INSTANCE } from \"../StyleContext\";\nimport { flattenToken, memoResult, token2key, toStyleStr } from \"../util\";\nimport { transformToken } from \"../util/css-variables\";\nimport useGlobalCache from \"./useGlobalCache\";\nvar EMPTY_OVERRIDE = {}; // Generate different prefix to make user selector break in production env.\n// This helps developer not to do style override directly on the hash id.\n\nvar hashPrefix = process.env.NODE_ENV !== 'production' ? 'css-dev-only-do-not-override' : 'css';\nvar tokenKeys = new Map();\n\nfunction recordCleanToken(tokenKey) {\n  tokenKeys.set(tokenKey, (tokenKeys.get(tokenKey) || 0) + 1);\n}\n\nfunction removeStyleTags(key, instanceId) {\n  if (typeof document !== 'undefined') {\n    var styles = document.querySelectorAll(\"style[\".concat(ATTR_TOKEN, \"=\\\"\").concat(key, \"\\\"]\"));\n    styles.forEach(function (style) {\n      if (style[CSS_IN_JS_INSTANCE] === instanceId) {\n        var _style$parentNode;\n\n        (_style$parentNode = style.parentNode) === null || _style$parentNode === void 0 || _style$parentNode.removeChild(style);\n      }\n    });\n  }\n}\n\nvar TOKEN_THRESHOLD = 0; // Remove will check current keys first\n\nfunction cleanTokenStyle(tokenKey, instanceId) {\n  tokenKeys.set(tokenKey, (tokenKeys.get(tokenKey) || 0) - 1);\n  var tokenKeyList = Array.from(tokenKeys.keys());\n  var cleanableKeyList = tokenKeyList.filter(function (key) {\n    var count = tokenKeys.get(key) || 0;\n    return count <= 0;\n  }); // Should keep tokens under threshold for not to insert style too often\n\n  if (tokenKeyList.length - cleanableKeyList.length > TOKEN_THRESHOLD) {\n    cleanableKeyList.forEach(function (key) {\n      removeStyleTags(key, instanceId);\n      tokenKeys.delete(key);\n    });\n  }\n}\n\nexport var getComputedToken = function getComputedToken(originToken, overrideToken, theme, format) {\n  var derivativeToken = theme.getDerivativeToken(originToken); // Merge with override\n\n  var mergedDerivativeToken = _objectSpread(_objectSpread({}, derivativeToken), overrideToken); // Format if needed\n\n\n  if (format) {\n    mergedDerivativeToken = format(mergedDerivativeToken);\n  }\n\n  return mergedDerivativeToken;\n};\nexport var TOKEN_PREFIX = 'token';\n/**\n * Cache theme derivative token as global shared one\n * @param theme Theme entity\n * @param tokens List of tokens, used for cache. Please do not dynamic generate object directly\n * @param option Additional config\n * @returns Call Theme.getDerivativeToken(tokenObject) to get token\n */\n\nexport default function useCacheToken(theme, tokens) {\n  var option = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n  var _useContext = useContext(StyleContext),\n      instanceId = _useContext.cache.instanceId,\n      container = _useContext.container;\n\n  var _option$salt = option.salt,\n      salt = _option$salt === void 0 ? '' : _option$salt,\n      _option$override = option.override,\n      override = _option$override === void 0 ? EMPTY_OVERRIDE : _option$override,\n      formatToken = option.formatToken,\n      compute = option.getComputedToken,\n      cssVar = option.cssVar; // Basic - We do basic cache here\n\n  var mergedToken = memoResult(function () {\n    return Object.assign.apply(Object, [{}].concat(_toConsumableArray(tokens)));\n  }, tokens);\n  var tokenStr = flattenToken(mergedToken);\n  var overrideTokenStr = flattenToken(override);\n  var cssVarStr = cssVar ? flattenToken(cssVar) : '';\n  var cachedToken = useGlobalCache(TOKEN_PREFIX, [salt, theme.id, tokenStr, overrideTokenStr, cssVarStr], function () {\n    var _cssVar$key;\n\n    var mergedDerivativeToken = compute ? compute(mergedToken, override, theme) : getComputedToken(mergedToken, override, theme, formatToken); // Replace token value with css variables\n\n    var actualToken = _objectSpread({}, mergedDerivativeToken);\n\n    var cssVarsStr = '';\n\n    if (!!cssVar) {\n      var _transformToken = transformToken(mergedDerivativeToken, cssVar.key, {\n        prefix: cssVar.prefix,\n        ignore: cssVar.ignore,\n        unitless: cssVar.unitless,\n        preserve: cssVar.preserve\n      });\n\n      var _transformToken2 = _slicedToArray(_transformToken, 2);\n\n      mergedDerivativeToken = _transformToken2[0];\n      cssVarsStr = _transformToken2[1];\n    } // Optimize for `useStyleRegister` performance\n\n\n    var tokenKey = token2key(mergedDerivativeToken, salt);\n    mergedDerivativeToken._tokenKey = tokenKey;\n    actualToken._tokenKey = token2key(actualToken, salt);\n    var themeKey = (_cssVar$key = cssVar === null || cssVar === void 0 ? void 0 : cssVar.key) !== null && _cssVar$key !== void 0 ? _cssVar$key : tokenKey;\n    mergedDerivativeToken._themeKey = themeKey;\n    recordCleanToken(themeKey);\n    var hashId = \"\".concat(hashPrefix, \"-\").concat(hash(tokenKey));\n    mergedDerivativeToken._hashId = hashId; // Not used\n\n    return [mergedDerivativeToken, hashId, actualToken, cssVarsStr, (cssVar === null || cssVar === void 0 ? void 0 : cssVar.key) || ''];\n  }, function (cache) {\n    // Remove token will remove all related style\n    cleanTokenStyle(cache[0]._themeKey, instanceId);\n  }, function (_ref) {\n    var _ref2 = _slicedToArray(_ref, 4),\n        token = _ref2[0],\n        cssVarsStr = _ref2[3];\n\n    if (cssVar && cssVarsStr) {\n      var style = updateCSS(cssVarsStr, hash(\"css-variables-\".concat(token._themeKey)), {\n        mark: ATTR_MARK,\n        prepend: 'queue',\n        attachTo: container,\n        priority: -999\n      });\n      style[CSS_IN_JS_INSTANCE] = instanceId; // Used for `useCacheToken` to remove on batch when token removed\n\n      style.setAttribute(ATTR_TOKEN, token._themeKey);\n    }\n  });\n  return cachedToken;\n}\nexport var extract = function extract(cache, effectStyles, options) {\n  var _cache = _slicedToArray(cache, 5),\n      realToken = _cache[2],\n      styleStr = _cache[3],\n      cssVarKey = _cache[4];\n\n  var _ref3 = options || {},\n      plain = _ref3.plain;\n\n  if (!styleStr) {\n    return null;\n  }\n\n  var styleId = realToken._tokenKey;\n  var order = -999; // ====================== Style ======================\n  // Used for rc-util\n\n  var sharedAttrs = {\n    'data-rc-order': 'prependQueue',\n    'data-rc-priority': \"\".concat(order)\n  };\n  var styleText = toStyleStr(styleStr, cssVarKey, styleId, sharedAttrs, plain);\n  return [order, styleId, styleText];\n};","map":{"version":3,"names":["_slicedToArray","_toConsumableArray","_objectSpread","hash","updateCSS","useContext","StyleContext","ATTR_MARK","ATTR_TOKEN","CSS_IN_JS_INSTANCE","flattenToken","memoResult","token2key","toStyleStr","transformToken","useGlobalCache","EMPTY_OVERRIDE","hashPrefix","process","env","NODE_ENV","tokenKeys","Map","recordCleanToken","tokenKey","set","get","removeStyleTags","key","instanceId","document","styles","querySelectorAll","concat","forEach","style","_style$parentNode","parentNode","removeChild","TOKEN_THRESHOLD","cleanTokenStyle","tokenKeyList","Array","from","keys","cleanableKeyList","filter","count","length","delete","getComputedToken","originToken","overrideToken","theme","format","derivativeToken","getDerivativeToken","mergedDerivativeToken","TOKEN_PREFIX","useCacheToken","tokens","option","arguments","undefined","_useContext","cache","container","_option$salt","salt","_option$override","override","formatToken","compute","cssVar","mergedToken","Object","assign","apply","tokenStr","overrideTokenStr","cssVarStr","cachedToken","id","_cssVar$key","actualToken","cssVarsStr","_transformToken","prefix","ignore","unitless","preserve","_transformToken2","_tokenKey","themeKey","_themeKey","hashId","_hashId","_ref","_ref2","token","mark","prepend","attachTo","priority","setAttribute","extract","effectStyles","options","_cache","realToken","styleStr","cssVarKey","_ref3","plain","styleId","order","sharedAttrs","styleText"],"sources":["/Users/joji/Documents/CODE/React/react-cutioluis/node_modules/@ant-design/cssinjs/es/hooks/useCacheToken.js"],"sourcesContent":["import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport hash from '@emotion/hash';\nimport { updateCSS } from \"rc-util/es/Dom/dynamicCSS\";\nimport { useContext } from 'react';\nimport StyleContext, { ATTR_MARK, ATTR_TOKEN, CSS_IN_JS_INSTANCE } from \"../StyleContext\";\nimport { flattenToken, memoResult, token2key, toStyleStr } from \"../util\";\nimport { transformToken } from \"../util/css-variables\";\nimport useGlobalCache from \"./useGlobalCache\";\nvar EMPTY_OVERRIDE = {};\n\n// Generate different prefix to make user selector break in production env.\n// This helps developer not to do style override directly on the hash id.\nvar hashPrefix = process.env.NODE_ENV !== 'production' ? 'css-dev-only-do-not-override' : 'css';\nvar tokenKeys = new Map();\nfunction recordCleanToken(tokenKey) {\n  tokenKeys.set(tokenKey, (tokenKeys.get(tokenKey) || 0) + 1);\n}\nfunction removeStyleTags(key, instanceId) {\n  if (typeof document !== 'undefined') {\n    var styles = document.querySelectorAll(\"style[\".concat(ATTR_TOKEN, \"=\\\"\").concat(key, \"\\\"]\"));\n    styles.forEach(function (style) {\n      if (style[CSS_IN_JS_INSTANCE] === instanceId) {\n        var _style$parentNode;\n        (_style$parentNode = style.parentNode) === null || _style$parentNode === void 0 || _style$parentNode.removeChild(style);\n      }\n    });\n  }\n}\nvar TOKEN_THRESHOLD = 0;\n\n// Remove will check current keys first\nfunction cleanTokenStyle(tokenKey, instanceId) {\n  tokenKeys.set(tokenKey, (tokenKeys.get(tokenKey) || 0) - 1);\n  var tokenKeyList = Array.from(tokenKeys.keys());\n  var cleanableKeyList = tokenKeyList.filter(function (key) {\n    var count = tokenKeys.get(key) || 0;\n    return count <= 0;\n  });\n\n  // Should keep tokens under threshold for not to insert style too often\n  if (tokenKeyList.length - cleanableKeyList.length > TOKEN_THRESHOLD) {\n    cleanableKeyList.forEach(function (key) {\n      removeStyleTags(key, instanceId);\n      tokenKeys.delete(key);\n    });\n  }\n}\nexport var getComputedToken = function getComputedToken(originToken, overrideToken, theme, format) {\n  var derivativeToken = theme.getDerivativeToken(originToken);\n\n  // Merge with override\n  var mergedDerivativeToken = _objectSpread(_objectSpread({}, derivativeToken), overrideToken);\n\n  // Format if needed\n  if (format) {\n    mergedDerivativeToken = format(mergedDerivativeToken);\n  }\n  return mergedDerivativeToken;\n};\nexport var TOKEN_PREFIX = 'token';\n/**\n * Cache theme derivative token as global shared one\n * @param theme Theme entity\n * @param tokens List of tokens, used for cache. Please do not dynamic generate object directly\n * @param option Additional config\n * @returns Call Theme.getDerivativeToken(tokenObject) to get token\n */\nexport default function useCacheToken(theme, tokens) {\n  var option = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var _useContext = useContext(StyleContext),\n    instanceId = _useContext.cache.instanceId,\n    container = _useContext.container;\n  var _option$salt = option.salt,\n    salt = _option$salt === void 0 ? '' : _option$salt,\n    _option$override = option.override,\n    override = _option$override === void 0 ? EMPTY_OVERRIDE : _option$override,\n    formatToken = option.formatToken,\n    compute = option.getComputedToken,\n    cssVar = option.cssVar;\n\n  // Basic - We do basic cache here\n  var mergedToken = memoResult(function () {\n    return Object.assign.apply(Object, [{}].concat(_toConsumableArray(tokens)));\n  }, tokens);\n  var tokenStr = flattenToken(mergedToken);\n  var overrideTokenStr = flattenToken(override);\n  var cssVarStr = cssVar ? flattenToken(cssVar) : '';\n  var cachedToken = useGlobalCache(TOKEN_PREFIX, [salt, theme.id, tokenStr, overrideTokenStr, cssVarStr], function () {\n    var _cssVar$key;\n    var mergedDerivativeToken = compute ? compute(mergedToken, override, theme) : getComputedToken(mergedToken, override, theme, formatToken);\n\n    // Replace token value with css variables\n    var actualToken = _objectSpread({}, mergedDerivativeToken);\n    var cssVarsStr = '';\n    if (!!cssVar) {\n      var _transformToken = transformToken(mergedDerivativeToken, cssVar.key, {\n        prefix: cssVar.prefix,\n        ignore: cssVar.ignore,\n        unitless: cssVar.unitless,\n        preserve: cssVar.preserve\n      });\n      var _transformToken2 = _slicedToArray(_transformToken, 2);\n      mergedDerivativeToken = _transformToken2[0];\n      cssVarsStr = _transformToken2[1];\n    }\n\n    // Optimize for `useStyleRegister` performance\n    var tokenKey = token2key(mergedDerivativeToken, salt);\n    mergedDerivativeToken._tokenKey = tokenKey;\n    actualToken._tokenKey = token2key(actualToken, salt);\n    var themeKey = (_cssVar$key = cssVar === null || cssVar === void 0 ? void 0 : cssVar.key) !== null && _cssVar$key !== void 0 ? _cssVar$key : tokenKey;\n    mergedDerivativeToken._themeKey = themeKey;\n    recordCleanToken(themeKey);\n    var hashId = \"\".concat(hashPrefix, \"-\").concat(hash(tokenKey));\n    mergedDerivativeToken._hashId = hashId; // Not used\n\n    return [mergedDerivativeToken, hashId, actualToken, cssVarsStr, (cssVar === null || cssVar === void 0 ? void 0 : cssVar.key) || ''];\n  }, function (cache) {\n    // Remove token will remove all related style\n    cleanTokenStyle(cache[0]._themeKey, instanceId);\n  }, function (_ref) {\n    var _ref2 = _slicedToArray(_ref, 4),\n      token = _ref2[0],\n      cssVarsStr = _ref2[3];\n    if (cssVar && cssVarsStr) {\n      var style = updateCSS(cssVarsStr, hash(\"css-variables-\".concat(token._themeKey)), {\n        mark: ATTR_MARK,\n        prepend: 'queue',\n        attachTo: container,\n        priority: -999\n      });\n      style[CSS_IN_JS_INSTANCE] = instanceId;\n\n      // Used for `useCacheToken` to remove on batch when token removed\n      style.setAttribute(ATTR_TOKEN, token._themeKey);\n    }\n  });\n  return cachedToken;\n}\nexport var extract = function extract(cache, effectStyles, options) {\n  var _cache = _slicedToArray(cache, 5),\n    realToken = _cache[2],\n    styleStr = _cache[3],\n    cssVarKey = _cache[4];\n  var _ref3 = options || {},\n    plain = _ref3.plain;\n  if (!styleStr) {\n    return null;\n  }\n  var styleId = realToken._tokenKey;\n  var order = -999;\n\n  // ====================== Style ======================\n  // Used for rc-util\n  var sharedAttrs = {\n    'data-rc-order': 'prependQueue',\n    'data-rc-priority': \"\".concat(order)\n  };\n  var styleText = toStyleStr(styleStr, cssVarKey, styleId, sharedAttrs, plain);\n  return [order, styleId, styleText];\n};"],"mappings":"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"},"metadata":{},"sourceType":"module"}