{"ast":null,"code":"import { unit } from '@ant-design/cssinjs';\nimport { getStyle as getCheckboxStyle } from '../../checkbox/style';\nimport { genStyleHooks, mergeToken } from '../../theme/internal';\nimport { genTreeStyle, initComponentToken } from '../../tree/style'; // =============================== Base ===============================\n\nconst genBaseStyle = token => {\n  const {\n    componentCls,\n    treePrefixCls,\n    colorBgElevated\n  } = token;\n  const treeCls = `.${treePrefixCls}`;\n  return [// ======================================================\n  // ==                     Dropdown                     ==\n  // ======================================================\n  {\n    [`${componentCls}-dropdown`]: [{\n      padding: `${unit(token.paddingXS)} ${unit(token.calc(token.paddingXS).div(2).equal())}`\n    }, // ====================== Tree ======================\n    genTreeStyle(treePrefixCls, mergeToken(token, {\n      colorBgContainer: colorBgElevated\n    })), {\n      [treeCls]: {\n        borderRadius: 0,\n        [`${treeCls}-list-holder-inner`]: {\n          alignItems: 'stretch',\n          [`${treeCls}-treenode`]: {\n            [`${treeCls}-node-content-wrapper`]: {\n              flex: 'auto'\n            }\n          }\n        }\n      }\n    }, // ==================== Checkbox ====================\n    getCheckboxStyle(`${treePrefixCls}-checkbox`, token), // ====================== RTL =======================\n    {\n      '&-rtl': {\n        direction: 'rtl',\n        [`${treeCls}-switcher${treeCls}-switcher_close`]: {\n          [`${treeCls}-switcher-icon svg`]: {\n            transform: 'rotate(90deg)'\n          }\n        }\n      }\n    }]\n  }];\n};\n\nexport const prepareComponentToken = initComponentToken; // ============================== Export ==============================\n\nexport default function useTreeSelectStyle(prefixCls, treePrefixCls, rootCls) {\n  return genStyleHooks('TreeSelect', token => {\n    const treeSelectToken = mergeToken(token, {\n      treePrefixCls\n    });\n    return [genBaseStyle(treeSelectToken)];\n  }, initComponentToken)(prefixCls, rootCls);\n}","map":{"version":3,"names":["unit","getStyle","getCheckboxStyle","genStyleHooks","mergeToken","genTreeStyle","initComponentToken","genBaseStyle","token","componentCls","treePrefixCls","colorBgElevated","treeCls","padding","paddingXS","calc","div","equal","colorBgContainer","borderRadius","alignItems","flex","direction","transform","prepareComponentToken","useTreeSelectStyle","prefixCls","rootCls","treeSelectToken"],"sources":["/Users/joji/Documents/CODE/React/react-cutioluis/node_modules/antd/es/tree-select/style/index.js"],"sourcesContent":["import { unit } from '@ant-design/cssinjs';\nimport { getStyle as getCheckboxStyle } from '../../checkbox/style';\nimport { genStyleHooks, mergeToken } from '../../theme/internal';\nimport { genTreeStyle, initComponentToken } from '../../tree/style';\n// =============================== Base ===============================\nconst genBaseStyle = token => {\n  const {\n    componentCls,\n    treePrefixCls,\n    colorBgElevated\n  } = token;\n  const treeCls = `.${treePrefixCls}`;\n  return [\n  // ======================================================\n  // ==                     Dropdown                     ==\n  // ======================================================\n  {\n    [`${componentCls}-dropdown`]: [{\n      padding: `${unit(token.paddingXS)} ${unit(token.calc(token.paddingXS).div(2).equal())}`\n    },\n    // ====================== Tree ======================\n    genTreeStyle(treePrefixCls, mergeToken(token, {\n      colorBgContainer: colorBgElevated\n    })), {\n      [treeCls]: {\n        borderRadius: 0,\n        [`${treeCls}-list-holder-inner`]: {\n          alignItems: 'stretch',\n          [`${treeCls}-treenode`]: {\n            [`${treeCls}-node-content-wrapper`]: {\n              flex: 'auto'\n            }\n          }\n        }\n      }\n    },\n    // ==================== Checkbox ====================\n    getCheckboxStyle(`${treePrefixCls}-checkbox`, token),\n    // ====================== RTL =======================\n    {\n      '&-rtl': {\n        direction: 'rtl',\n        [`${treeCls}-switcher${treeCls}-switcher_close`]: {\n          [`${treeCls}-switcher-icon svg`]: {\n            transform: 'rotate(90deg)'\n          }\n        }\n      }\n    }]\n  }];\n};\nexport const prepareComponentToken = initComponentToken;\n// ============================== Export ==============================\nexport default function useTreeSelectStyle(prefixCls, treePrefixCls, rootCls) {\n  return genStyleHooks('TreeSelect', token => {\n    const treeSelectToken = mergeToken(token, {\n      treePrefixCls\n    });\n    return [genBaseStyle(treeSelectToken)];\n  }, initComponentToken)(prefixCls, rootCls);\n}"],"mappings":"AAAA,SAASA,IAAT,QAAqB,qBAArB;AACA,SAASC,QAAQ,IAAIC,gBAArB,QAA6C,sBAA7C;AACA,SAASC,aAAT,EAAwBC,UAAxB,QAA0C,sBAA1C;AACA,SAASC,YAAT,EAAuBC,kBAAvB,QAAiD,kBAAjD,C,CACA;;AACA,MAAMC,YAAY,GAAGC,KAAK,IAAI;EAC5B,MAAM;IACJC,YADI;IAEJC,aAFI;IAGJC;EAHI,IAIFH,KAJJ;EAKA,MAAMI,OAAO,GAAI,IAAGF,aAAc,EAAlC;EACA,OAAO,CACP;EACA;EACA;EACA;IACE,CAAE,GAAED,YAAa,WAAjB,GAA8B,CAAC;MAC7BI,OAAO,EAAG,GAAEb,IAAI,CAACQ,KAAK,CAACM,SAAP,CAAkB,IAAGd,IAAI,CAACQ,KAAK,CAACO,IAAN,CAAWP,KAAK,CAACM,SAAjB,EAA4BE,GAA5B,CAAgC,CAAhC,EAAmCC,KAAnC,EAAD,CAA6C;IADzD,CAAD,EAG9B;IACAZ,YAAY,CAACK,aAAD,EAAgBN,UAAU,CAACI,KAAD,EAAQ;MAC5CU,gBAAgB,EAAEP;IAD0B,CAAR,CAA1B,CAJkB,EAMzB;MACH,CAACC,OAAD,GAAW;QACTO,YAAY,EAAE,CADL;QAET,CAAE,GAAEP,OAAQ,oBAAZ,GAAkC;UAChCQ,UAAU,EAAE,SADoB;UAEhC,CAAE,GAAER,OAAQ,WAAZ,GAAyB;YACvB,CAAE,GAAEA,OAAQ,uBAAZ,GAAqC;cACnCS,IAAI,EAAE;YAD6B;UADd;QAFO;MAFzB;IADR,CANyB,EAmB9B;IACAnB,gBAAgB,CAAE,GAAEQ,aAAc,WAAlB,EAA8BF,KAA9B,CApBc,EAqB9B;IACA;MACE,SAAS;QACPc,SAAS,EAAE,KADJ;QAEP,CAAE,GAAEV,OAAQ,YAAWA,OAAQ,iBAA/B,GAAkD;UAChD,CAAE,GAAEA,OAAQ,oBAAZ,GAAkC;YAChCW,SAAS,EAAE;UADqB;QADc;MAF3C;IADX,CAtB8B;EADhC,CAJO,CAAP;AAsCD,CA7CD;;AA8CA,OAAO,MAAMC,qBAAqB,GAAGlB,kBAA9B,C,CACP;;AACA,eAAe,SAASmB,kBAAT,CAA4BC,SAA5B,EAAuChB,aAAvC,EAAsDiB,OAAtD,EAA+D;EAC5E,OAAOxB,aAAa,CAAC,YAAD,EAAeK,KAAK,IAAI;IAC1C,MAAMoB,eAAe,GAAGxB,UAAU,CAACI,KAAD,EAAQ;MACxCE;IADwC,CAAR,CAAlC;IAGA,OAAO,CAACH,YAAY,CAACqB,eAAD,CAAb,CAAP;EACD,CALmB,EAKjBtB,kBALiB,CAAb,CAKgBoB,SALhB,EAK2BC,OAL3B,CAAP;AAMD"},"metadata":{},"sourceType":"module"}