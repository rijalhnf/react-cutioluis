{"ast":null,"code":"import _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _excluded = [\"id\", \"prefixCls\", \"className\", \"showSearch\", \"tagRender\", \"direction\", \"omitDomProps\", \"displayValues\", \"onDisplayValuesChange\", \"emptyOptions\", \"notFoundContent\", \"onClear\", \"mode\", \"disabled\", \"loading\", \"getInputElement\", \"getRawInputElement\", \"open\", \"defaultOpen\", \"onDropdownVisibleChange\", \"activeValue\", \"onActiveValueChange\", \"activeDescendantId\", \"searchValue\", \"autoClearSearchValue\", \"onSearch\", \"onSearchSplit\", \"tokenSeparators\", \"allowClear\", \"suffixIcon\", \"clearIcon\", \"OptionList\", \"animation\", \"transitionName\", \"dropdownStyle\", \"dropdownClassName\", \"dropdownMatchSelectWidth\", \"dropdownRender\", \"dropdownAlign\", \"placement\", \"builtinPlacements\", \"getPopupContainer\", \"showAction\", \"onFocus\", \"onBlur\", \"onKeyUp\", \"onKeyDown\", \"onMouseDown\"];\nimport classNames from 'classnames';\nimport useLayoutEffect from \"rc-util/es/hooks/useLayoutEffect\";\nimport useMergedState from \"rc-util/es/hooks/useMergedState\";\nimport isMobile from \"rc-util/es/isMobile\";\nimport KeyCode from \"rc-util/es/KeyCode\";\nimport { useComposeRef } from \"rc-util/es/ref\";\nimport * as React from 'react';\nimport { useAllowClear } from \"./hooks/useAllowClear\";\nimport { BaseSelectContext } from \"./hooks/useBaseProps\";\nimport useDelayReset from \"./hooks/useDelayReset\";\nimport useLock from \"./hooks/useLock\";\nimport useSelectTriggerControl from \"./hooks/useSelectTriggerControl\";\nimport Selector from \"./Selector\";\nimport SelectTrigger from \"./SelectTrigger\";\nimport TransBtn from \"./TransBtn\";\nimport { getSeparatedContent, isValidCount } from \"./utils/valueUtil\";\nimport SelectContext from \"./SelectContext\";\nvar DEFAULT_OMIT_PROPS = ['value', 'onChange', 'removeIcon', 'placeholder', 'autoFocus', 'maxTagCount', 'maxTagTextLength', 'maxTagPlaceholder', 'choiceTransitionName', 'onInputKeyDown', 'onPopupScroll', 'tabIndex'];\nexport var isMultiple = function isMultiple(mode) {\n  return mode === 'tags' || mode === 'multiple';\n};\nvar BaseSelect = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var _customizeRawInputEle;\n\n  var id = props.id,\n      prefixCls = props.prefixCls,\n      className = props.className,\n      showSearch = props.showSearch,\n      tagRender = props.tagRender,\n      direction = props.direction,\n      omitDomProps = props.omitDomProps,\n      displayValues = props.displayValues,\n      onDisplayValuesChange = props.onDisplayValuesChange,\n      emptyOptions = props.emptyOptions,\n      _props$notFoundConten = props.notFoundContent,\n      notFoundContent = _props$notFoundConten === void 0 ? 'Not Found' : _props$notFoundConten,\n      onClear = props.onClear,\n      mode = props.mode,\n      disabled = props.disabled,\n      loading = props.loading,\n      getInputElement = props.getInputElement,\n      getRawInputElement = props.getRawInputElement,\n      open = props.open,\n      defaultOpen = props.defaultOpen,\n      onDropdownVisibleChange = props.onDropdownVisibleChange,\n      activeValue = props.activeValue,\n      onActiveValueChange = props.onActiveValueChange,\n      activeDescendantId = props.activeDescendantId,\n      searchValue = props.searchValue,\n      autoClearSearchValue = props.autoClearSearchValue,\n      onSearch = props.onSearch,\n      onSearchSplit = props.onSearchSplit,\n      tokenSeparators = props.tokenSeparators,\n      allowClear = props.allowClear,\n      suffixIcon = props.suffixIcon,\n      clearIcon = props.clearIcon,\n      OptionList = props.OptionList,\n      animation = props.animation,\n      transitionName = props.transitionName,\n      dropdownStyle = props.dropdownStyle,\n      dropdownClassName = props.dropdownClassName,\n      dropdownMatchSelectWidth = props.dropdownMatchSelectWidth,\n      dropdownRender = props.dropdownRender,\n      dropdownAlign = props.dropdownAlign,\n      placement = props.placement,\n      builtinPlacements = props.builtinPlacements,\n      getPopupContainer = props.getPopupContainer,\n      _props$showAction = props.showAction,\n      showAction = _props$showAction === void 0 ? [] : _props$showAction,\n      onFocus = props.onFocus,\n      onBlur = props.onBlur,\n      onKeyUp = props.onKeyUp,\n      onKeyDown = props.onKeyDown,\n      onMouseDown = props.onMouseDown,\n      restProps = _objectWithoutProperties(props, _excluded); // ============================== MISC ==============================\n\n\n  var multiple = isMultiple(mode);\n  var mergedShowSearch = (showSearch !== undefined ? showSearch : multiple) || mode === 'combobox';\n\n  var domProps = _objectSpread({}, restProps);\n\n  DEFAULT_OMIT_PROPS.forEach(function (propName) {\n    delete domProps[propName];\n  });\n  omitDomProps === null || omitDomProps === void 0 || omitDomProps.forEach(function (propName) {\n    delete domProps[propName];\n  }); // ============================= Mobile =============================\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      mobile = _React$useState2[0],\n      setMobile = _React$useState2[1];\n\n  React.useEffect(function () {\n    // Only update on the client side\n    setMobile(isMobile());\n  }, []); // ============================== Refs ==============================\n\n  var containerRef = React.useRef(null);\n  var selectorDomRef = React.useRef(null);\n  var triggerRef = React.useRef(null);\n  var selectorRef = React.useRef(null);\n  var listRef = React.useRef(null);\n  var blurRef = React.useRef(false);\n  /** Used for component focused management */\n\n  var _useDelayReset = useDelayReset(),\n      _useDelayReset2 = _slicedToArray(_useDelayReset, 3),\n      mockFocused = _useDelayReset2[0],\n      setMockFocused = _useDelayReset2[1],\n      cancelSetMockFocused = _useDelayReset2[2]; // =========================== Imperative ===========================\n\n\n  React.useImperativeHandle(ref, function () {\n    var _selectorRef$current, _selectorRef$current2;\n\n    return {\n      focus: (_selectorRef$current = selectorRef.current) === null || _selectorRef$current === void 0 ? void 0 : _selectorRef$current.focus,\n      blur: (_selectorRef$current2 = selectorRef.current) === null || _selectorRef$current2 === void 0 ? void 0 : _selectorRef$current2.blur,\n      scrollTo: function scrollTo(arg) {\n        var _listRef$current;\n\n        return (_listRef$current = listRef.current) === null || _listRef$current === void 0 ? void 0 : _listRef$current.scrollTo(arg);\n      }\n    };\n  }); // ========================== Search Value ==========================\n\n  var mergedSearchValue = React.useMemo(function () {\n    var _displayValues$;\n\n    if (mode !== 'combobox') {\n      return searchValue;\n    }\n\n    var val = (_displayValues$ = displayValues[0]) === null || _displayValues$ === void 0 ? void 0 : _displayValues$.value;\n    return typeof val === 'string' || typeof val === 'number' ? String(val) : '';\n  }, [searchValue, mode, displayValues]); // ========================== Custom Input ==========================\n  // Only works in `combobox`\n\n  var customizeInputElement = mode === 'combobox' && typeof getInputElement === 'function' && getInputElement() || null; // Used for customize replacement for `rc-cascader`\n\n  var customizeRawInputElement = typeof getRawInputElement === 'function' && getRawInputElement();\n  var customizeRawInputRef = useComposeRef(selectorDomRef, customizeRawInputElement === null || customizeRawInputElement === void 0 || (_customizeRawInputEle = customizeRawInputElement.props) === null || _customizeRawInputEle === void 0 ? void 0 : _customizeRawInputEle.ref); // ============================== Open ==============================\n  // SSR not support Portal which means we need delay `open` for the first time render\n\n  var _React$useState3 = React.useState(false),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      rendered = _React$useState4[0],\n      setRendered = _React$useState4[1];\n\n  useLayoutEffect(function () {\n    setRendered(true);\n  }, []);\n\n  var _useMergedState = useMergedState(false, {\n    defaultValue: defaultOpen,\n    value: open\n  }),\n      _useMergedState2 = _slicedToArray(_useMergedState, 2),\n      innerOpen = _useMergedState2[0],\n      setInnerOpen = _useMergedState2[1];\n\n  var mergedOpen = rendered ? innerOpen : false; // Not trigger `open` in `combobox` when `notFoundContent` is empty\n\n  var emptyListContent = !notFoundContent && emptyOptions;\n\n  if (disabled || emptyListContent && mergedOpen && mode === 'combobox') {\n    mergedOpen = false;\n  }\n\n  var triggerOpen = emptyListContent ? false : mergedOpen;\n  var onToggleOpen = React.useCallback(function (newOpen) {\n    var nextOpen = newOpen !== undefined ? newOpen : !mergedOpen;\n\n    if (!disabled) {\n      setInnerOpen(nextOpen);\n\n      if (mergedOpen !== nextOpen) {\n        onDropdownVisibleChange === null || onDropdownVisibleChange === void 0 || onDropdownVisibleChange(nextOpen);\n      }\n    }\n  }, [disabled, mergedOpen, setInnerOpen, onDropdownVisibleChange]); // ============================= Search =============================\n\n  var tokenWithEnter = React.useMemo(function () {\n    return (tokenSeparators || []).some(function (tokenSeparator) {\n      return ['\\n', '\\r\\n'].includes(tokenSeparator);\n    });\n  }, [tokenSeparators]);\n\n  var _ref = React.useContext(SelectContext) || {},\n      maxCount = _ref.maxCount,\n      rawValues = _ref.rawValues;\n\n  var onInternalSearch = function onInternalSearch(searchText, fromTyping, isCompositing) {\n    if (isValidCount(maxCount) && (rawValues === null || rawValues === void 0 ? void 0 : rawValues.size) >= maxCount) {\n      return;\n    }\n\n    var ret = true;\n    var newSearchText = searchText;\n    onActiveValueChange === null || onActiveValueChange === void 0 || onActiveValueChange(null);\n    var separatedList = getSeparatedContent(searchText, tokenSeparators, isValidCount(maxCount) ? maxCount - rawValues.size : undefined); // Check if match the `tokenSeparators`\n\n    var patchLabels = isCompositing ? null : separatedList; // Ignore combobox since it's not split-able\n\n    if (mode !== 'combobox' && patchLabels) {\n      newSearchText = '';\n      onSearchSplit === null || onSearchSplit === void 0 || onSearchSplit(patchLabels); // Should close when paste finish\n\n      onToggleOpen(false); // Tell Selector that break next actions\n\n      ret = false;\n    }\n\n    if (onSearch && mergedSearchValue !== newSearchText) {\n      onSearch(newSearchText, {\n        source: fromTyping ? 'typing' : 'effect'\n      });\n    }\n\n    return ret;\n  }; // Only triggered when menu is closed & mode is tags\n  // If menu is open, OptionList will take charge\n  // If mode isn't tags, press enter is not meaningful when you can't see any option\n\n\n  var onInternalSearchSubmit = function onInternalSearchSubmit(searchText) {\n    // prevent empty tags from appearing when you click the Enter button\n    if (!searchText || !searchText.trim()) {\n      return;\n    }\n\n    onSearch(searchText, {\n      source: 'submit'\n    });\n  }; // Close will clean up single mode search text\n\n\n  React.useEffect(function () {\n    if (!mergedOpen && !multiple && mode !== 'combobox') {\n      onInternalSearch('', false, false);\n    }\n  }, [mergedOpen]); // ============================ Disabled ============================\n  // Close dropdown & remove focus state when disabled change\n\n  React.useEffect(function () {\n    if (innerOpen && disabled) {\n      setInnerOpen(false);\n    } // After onBlur is triggered, the focused does not need to be reset\n\n\n    if (disabled && !blurRef.current) {\n      setMockFocused(false);\n    }\n  }, [disabled]); // ============================ Keyboard ============================\n\n  /**\n   * We record input value here to check if can press to clean up by backspace\n   * - null: Key is not down, this is reset by key up\n   * - true: Search text is empty when first time backspace down\n   * - false: Search text is not empty when first time backspace down\n   */\n\n  var _useLock = useLock(),\n      _useLock2 = _slicedToArray(_useLock, 2),\n      getClearLock = _useLock2[0],\n      setClearLock = _useLock2[1]; // KeyDown\n\n\n  var onInternalKeyDown = function onInternalKeyDown(event) {\n    var clearLock = getClearLock();\n    var which = event.which;\n\n    if (which === KeyCode.ENTER) {\n      // Do not submit form when type in the input\n      if (mode !== 'combobox') {\n        event.preventDefault();\n      } // We only manage open state here, close logic should handle by list component\n\n\n      if (!mergedOpen) {\n        onToggleOpen(true);\n      }\n    }\n\n    setClearLock(!!mergedSearchValue); // Remove value by `backspace`\n\n    if (which === KeyCode.BACKSPACE && !clearLock && multiple && !mergedSearchValue && displayValues.length) {\n      var cloneDisplayValues = _toConsumableArray(displayValues);\n\n      var removedDisplayValue = null;\n\n      for (var i = cloneDisplayValues.length - 1; i >= 0; i -= 1) {\n        var current = cloneDisplayValues[i];\n\n        if (!current.disabled) {\n          cloneDisplayValues.splice(i, 1);\n          removedDisplayValue = current;\n          break;\n        }\n      }\n\n      if (removedDisplayValue) {\n        onDisplayValuesChange(cloneDisplayValues, {\n          type: 'remove',\n          values: [removedDisplayValue]\n        });\n      }\n    }\n\n    for (var _len = arguments.length, rest = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      rest[_key - 1] = arguments[_key];\n    }\n\n    if (mergedOpen) {\n      var _listRef$current2;\n\n      (_listRef$current2 = listRef.current) === null || _listRef$current2 === void 0 || _listRef$current2.onKeyDown.apply(_listRef$current2, [event].concat(rest));\n    }\n\n    onKeyDown === null || onKeyDown === void 0 || onKeyDown.apply(void 0, [event].concat(rest));\n  }; // KeyUp\n\n\n  var onInternalKeyUp = function onInternalKeyUp(event) {\n    for (var _len2 = arguments.length, rest = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n      rest[_key2 - 1] = arguments[_key2];\n    }\n\n    if (mergedOpen) {\n      var _listRef$current3;\n\n      (_listRef$current3 = listRef.current) === null || _listRef$current3 === void 0 || _listRef$current3.onKeyUp.apply(_listRef$current3, [event].concat(rest));\n    }\n\n    onKeyUp === null || onKeyUp === void 0 || onKeyUp.apply(void 0, [event].concat(rest));\n  }; // ============================ Selector ============================\n\n\n  var onSelectorRemove = function onSelectorRemove(val) {\n    var newValues = displayValues.filter(function (i) {\n      return i !== val;\n    });\n    onDisplayValuesChange(newValues, {\n      type: 'remove',\n      values: [val]\n    });\n  }; // ========================== Focus / Blur ==========================\n\n  /** Record real focus status */\n\n\n  var focusRef = React.useRef(false);\n\n  var onContainerFocus = function onContainerFocus() {\n    setMockFocused(true);\n\n    if (!disabled) {\n      if (onFocus && !focusRef.current) {\n        onFocus.apply(void 0, arguments);\n      } // `showAction` should handle `focus` if set\n\n\n      if (showAction.includes('focus')) {\n        onToggleOpen(true);\n      }\n    }\n\n    focusRef.current = true;\n  };\n\n  var onContainerBlur = function onContainerBlur() {\n    blurRef.current = true;\n    setMockFocused(false, function () {\n      focusRef.current = false;\n      blurRef.current = false;\n      onToggleOpen(false);\n    });\n\n    if (disabled) {\n      return;\n    }\n\n    if (mergedSearchValue) {\n      // `tags` mode should move `searchValue` into values\n      if (mode === 'tags') {\n        onSearch(mergedSearchValue, {\n          source: 'submit'\n        });\n      } else if (mode === 'multiple') {\n        // `multiple` mode only clean the search value but not trigger event\n        onSearch('', {\n          source: 'blur'\n        });\n      }\n    }\n\n    if (onBlur) {\n      onBlur.apply(void 0, arguments);\n    }\n  }; // Give focus back of Select\n\n\n  var activeTimeoutIds = [];\n  React.useEffect(function () {\n    return function () {\n      activeTimeoutIds.forEach(function (timeoutId) {\n        return clearTimeout(timeoutId);\n      });\n      activeTimeoutIds.splice(0, activeTimeoutIds.length);\n    };\n  }, []);\n\n  var onInternalMouseDown = function onInternalMouseDown(event) {\n    var _triggerRef$current;\n\n    var target = event.target;\n    var popupElement = (_triggerRef$current = triggerRef.current) === null || _triggerRef$current === void 0 ? void 0 : _triggerRef$current.getPopupElement(); // We should give focus back to selector if clicked item is not focusable\n\n    if (popupElement && popupElement.contains(target)) {\n      var timeoutId = setTimeout(function () {\n        var index = activeTimeoutIds.indexOf(timeoutId);\n\n        if (index !== -1) {\n          activeTimeoutIds.splice(index, 1);\n        }\n\n        cancelSetMockFocused();\n\n        if (!mobile && !popupElement.contains(document.activeElement)) {\n          var _selectorRef$current3;\n\n          (_selectorRef$current3 = selectorRef.current) === null || _selectorRef$current3 === void 0 || _selectorRef$current3.focus();\n        }\n      });\n      activeTimeoutIds.push(timeoutId);\n    }\n\n    for (var _len3 = arguments.length, restArgs = new Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {\n      restArgs[_key3 - 1] = arguments[_key3];\n    }\n\n    onMouseDown === null || onMouseDown === void 0 || onMouseDown.apply(void 0, [event].concat(restArgs));\n  }; // ============================ Dropdown ============================\n\n\n  var _React$useState5 = React.useState({}),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      forceUpdate = _React$useState6[1]; // We need force update here since popup dom is render async\n\n\n  function onPopupMouseEnter() {\n    forceUpdate({});\n  } // Used for raw custom input trigger\n\n\n  var onTriggerVisibleChange;\n\n  if (customizeRawInputElement) {\n    onTriggerVisibleChange = function onTriggerVisibleChange(newOpen) {\n      onToggleOpen(newOpen);\n    };\n  } // Close when click on non-select element\n\n\n  useSelectTriggerControl(function () {\n    var _triggerRef$current2;\n\n    return [containerRef.current, (_triggerRef$current2 = triggerRef.current) === null || _triggerRef$current2 === void 0 ? void 0 : _triggerRef$current2.getPopupElement()];\n  }, triggerOpen, onToggleOpen, !!customizeRawInputElement); // ============================ Context =============================\n\n  var baseSelectContext = React.useMemo(function () {\n    return _objectSpread(_objectSpread({}, props), {}, {\n      notFoundContent: notFoundContent,\n      open: mergedOpen,\n      triggerOpen: triggerOpen,\n      id: id,\n      showSearch: mergedShowSearch,\n      multiple: multiple,\n      toggleOpen: onToggleOpen\n    });\n  }, [props, notFoundContent, triggerOpen, mergedOpen, id, mergedShowSearch, multiple, onToggleOpen]); // ==================================================================\n  // ==                            Render                            ==\n  // ==================================================================\n  // ============================= Arrow ==============================\n\n  var showSuffixIcon = !!suffixIcon || loading;\n  var arrowNode;\n\n  if (showSuffixIcon) {\n    arrowNode = /*#__PURE__*/React.createElement(TransBtn, {\n      className: classNames(\"\".concat(prefixCls, \"-arrow\"), _defineProperty({}, \"\".concat(prefixCls, \"-arrow-loading\"), loading)),\n      customizeIcon: suffixIcon,\n      customizeIconProps: {\n        loading: loading,\n        searchValue: mergedSearchValue,\n        open: mergedOpen,\n        focused: mockFocused,\n        showSearch: mergedShowSearch\n      }\n    });\n  } // ============================= Clear ==============================\n\n\n  var onClearMouseDown = function onClearMouseDown() {\n    var _selectorRef$current4;\n\n    onClear === null || onClear === void 0 || onClear();\n    (_selectorRef$current4 = selectorRef.current) === null || _selectorRef$current4 === void 0 || _selectorRef$current4.focus();\n    onDisplayValuesChange([], {\n      type: 'clear',\n      values: displayValues\n    });\n    onInternalSearch('', false, false);\n  };\n\n  var _useAllowClear = useAllowClear(prefixCls, onClearMouseDown, displayValues, allowClear, clearIcon, disabled, mergedSearchValue, mode),\n      mergedAllowClear = _useAllowClear.allowClear,\n      clearNode = _useAllowClear.clearIcon; // =========================== OptionList ===========================\n\n\n  var optionList = /*#__PURE__*/React.createElement(OptionList, {\n    ref: listRef\n  }); // ============================= Select =============================\n\n  var mergedClassName = classNames(prefixCls, className, _defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty({}, \"\".concat(prefixCls, \"-focused\"), mockFocused), \"\".concat(prefixCls, \"-multiple\"), multiple), \"\".concat(prefixCls, \"-single\"), !multiple), \"\".concat(prefixCls, \"-allow-clear\"), allowClear), \"\".concat(prefixCls, \"-show-arrow\"), showSuffixIcon), \"\".concat(prefixCls, \"-disabled\"), disabled), \"\".concat(prefixCls, \"-loading\"), loading), \"\".concat(prefixCls, \"-open\"), mergedOpen), \"\".concat(prefixCls, \"-customize-input\"), customizeInputElement), \"\".concat(prefixCls, \"-show-search\"), mergedShowSearch)); // >>> Selector\n\n  var selectorNode = /*#__PURE__*/React.createElement(SelectTrigger, {\n    ref: triggerRef,\n    disabled: disabled,\n    prefixCls: prefixCls,\n    visible: triggerOpen,\n    popupElement: optionList,\n    animation: animation,\n    transitionName: transitionName,\n    dropdownStyle: dropdownStyle,\n    dropdownClassName: dropdownClassName,\n    direction: direction,\n    dropdownMatchSelectWidth: dropdownMatchSelectWidth,\n    dropdownRender: dropdownRender,\n    dropdownAlign: dropdownAlign,\n    placement: placement,\n    builtinPlacements: builtinPlacements,\n    getPopupContainer: getPopupContainer,\n    empty: emptyOptions,\n    getTriggerDOMNode: function getTriggerDOMNode() {\n      return selectorDomRef.current;\n    },\n    onPopupVisibleChange: onTriggerVisibleChange,\n    onPopupMouseEnter: onPopupMouseEnter\n  }, customizeRawInputElement ? /*#__PURE__*/React.cloneElement(customizeRawInputElement, {\n    ref: customizeRawInputRef\n  }) : /*#__PURE__*/React.createElement(Selector, _extends({}, props, {\n    domRef: selectorDomRef,\n    prefixCls: prefixCls,\n    inputElement: customizeInputElement,\n    ref: selectorRef,\n    id: id,\n    showSearch: mergedShowSearch,\n    autoClearSearchValue: autoClearSearchValue,\n    mode: mode,\n    activeDescendantId: activeDescendantId,\n    tagRender: tagRender,\n    values: displayValues,\n    open: mergedOpen,\n    onToggleOpen: onToggleOpen,\n    activeValue: activeValue,\n    searchValue: mergedSearchValue,\n    onSearch: onInternalSearch,\n    onSearchSubmit: onInternalSearchSubmit,\n    onRemove: onSelectorRemove,\n    tokenWithEnter: tokenWithEnter\n  }))); // >>> Render\n\n  var renderNode; // Render raw\n\n  if (customizeRawInputElement) {\n    renderNode = selectorNode;\n  } else {\n    renderNode = /*#__PURE__*/React.createElement(\"div\", _extends({\n      className: mergedClassName\n    }, domProps, {\n      ref: containerRef,\n      onMouseDown: onInternalMouseDown,\n      onKeyDown: onInternalKeyDown,\n      onKeyUp: onInternalKeyUp,\n      onFocus: onContainerFocus,\n      onBlur: onContainerBlur\n    }), mockFocused && !mergedOpen && /*#__PURE__*/React.createElement(\"span\", {\n      \"aria-live\": \"polite\",\n      style: {\n        width: 0,\n        height: 0,\n        position: 'absolute',\n        overflow: 'hidden',\n        opacity: 0\n      }\n    }, \"\".concat(displayValues.map(function (_ref2) {\n      var label = _ref2.label,\n          value = _ref2.value;\n      return ['number', 'string'].includes(_typeof(label)) ? label : value;\n    }).join(', '))), selectorNode, arrowNode, mergedAllowClear && clearNode);\n  }\n\n  return /*#__PURE__*/React.createElement(BaseSelectContext.Provider, {\n    value: baseSelectContext\n  }, renderNode);\n}); // Set display name for dev\n\nif (process.env.NODE_ENV !== 'production') {\n  BaseSelect.displayName = 'BaseSelect';\n}\n\nexport default BaseSelect;","map":{"version":3,"names":["_typeof","_extends","_defineProperty","_toConsumableArray","_slicedToArray","_objectSpread","_objectWithoutProperties","_excluded","classNames","useLayoutEffect","useMergedState","isMobile","KeyCode","useComposeRef","React","useAllowClear","BaseSelectContext","useDelayReset","useLock","useSelectTriggerControl","Selector","SelectTrigger","TransBtn","getSeparatedContent","isValidCount","SelectContext","DEFAULT_OMIT_PROPS","isMultiple","mode","BaseSelect","forwardRef","props","ref","_customizeRawInputEle","id","prefixCls","className","showSearch","tagRender","direction","omitDomProps","displayValues","onDisplayValuesChange","emptyOptions","_props$notFoundConten","notFoundContent","onClear","disabled","loading","getInputElement","getRawInputElement","open","defaultOpen","onDropdownVisibleChange","activeValue","onActiveValueChange","activeDescendantId","searchValue","autoClearSearchValue","onSearch","onSearchSplit","tokenSeparators","allowClear","suffixIcon","clearIcon","OptionList","animation","transitionName","dropdownStyle","dropdownClassName","dropdownMatchSelectWidth","dropdownRender","dropdownAlign","placement","builtinPlacements","getPopupContainer","_props$showAction","showAction","onFocus","onBlur","onKeyUp","onKeyDown","onMouseDown","restProps","multiple","mergedShowSearch","undefined","domProps","forEach","propName","_React$useState","useState","_React$useState2","mobile","setMobile","useEffect","containerRef","useRef","selectorDomRef","triggerRef","selectorRef","listRef","blurRef","_useDelayReset","_useDelayReset2","mockFocused","setMockFocused","cancelSetMockFocused","useImperativeHandle","_selectorRef$current","_selectorRef$current2","focus","current","blur","scrollTo","arg","_listRef$current","mergedSearchValue","useMemo","_displayValues$","val","value","String","customizeInputElement","customizeRawInputElement","customizeRawInputRef","_React$useState3","_React$useState4","rendered","setRendered","_useMergedState","defaultValue","_useMergedState2","innerOpen","setInnerOpen","mergedOpen","emptyListContent","triggerOpen","onToggleOpen","useCallback","newOpen","nextOpen","tokenWithEnter","some","tokenSeparator","includes","_ref","useContext","maxCount","rawValues","onInternalSearch","searchText","fromTyping","isCompositing","size","ret","newSearchText","separatedList","patchLabels","source","onInternalSearchSubmit","trim","_useLock","_useLock2","getClearLock","setClearLock","onInternalKeyDown","event","clearLock","which","ENTER","preventDefault","BACKSPACE","length","cloneDisplayValues","removedDisplayValue","i","splice","type","values","_len","arguments","rest","Array","_key","_listRef$current2","apply","concat","onInternalKeyUp","_len2","_key2","_listRef$current3","onSelectorRemove","newValues","filter","focusRef","onContainerFocus","onContainerBlur","activeTimeoutIds","timeoutId","clearTimeout","onInternalMouseDown","_triggerRef$current","target","popupElement","getPopupElement","contains","setTimeout","index","indexOf","document","activeElement","_selectorRef$current3","push","_len3","restArgs","_key3","_React$useState5","_React$useState6","forceUpdate","onPopupMouseEnter","onTriggerVisibleChange","_triggerRef$current2","baseSelectContext","toggleOpen","showSuffixIcon","arrowNode","createElement","customizeIcon","customizeIconProps","focused","onClearMouseDown","_selectorRef$current4","_useAllowClear","mergedAllowClear","clearNode","optionList","mergedClassName","selectorNode","visible","empty","getTriggerDOMNode","onPopupVisibleChange","cloneElement","domRef","inputElement","onSearchSubmit","onRemove","renderNode","style","width","height","position","overflow","opacity","map","_ref2","label","join","Provider","process","env","NODE_ENV","displayName"],"sources":["/Users/joji/Documents/CODE/React/react-cutioluis/node_modules/rc-select/es/BaseSelect.js"],"sourcesContent":["import _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _excluded = [\"id\", \"prefixCls\", \"className\", \"showSearch\", \"tagRender\", \"direction\", \"omitDomProps\", \"displayValues\", \"onDisplayValuesChange\", \"emptyOptions\", \"notFoundContent\", \"onClear\", \"mode\", \"disabled\", \"loading\", \"getInputElement\", \"getRawInputElement\", \"open\", \"defaultOpen\", \"onDropdownVisibleChange\", \"activeValue\", \"onActiveValueChange\", \"activeDescendantId\", \"searchValue\", \"autoClearSearchValue\", \"onSearch\", \"onSearchSplit\", \"tokenSeparators\", \"allowClear\", \"suffixIcon\", \"clearIcon\", \"OptionList\", \"animation\", \"transitionName\", \"dropdownStyle\", \"dropdownClassName\", \"dropdownMatchSelectWidth\", \"dropdownRender\", \"dropdownAlign\", \"placement\", \"builtinPlacements\", \"getPopupContainer\", \"showAction\", \"onFocus\", \"onBlur\", \"onKeyUp\", \"onKeyDown\", \"onMouseDown\"];\nimport classNames from 'classnames';\nimport useLayoutEffect from \"rc-util/es/hooks/useLayoutEffect\";\nimport useMergedState from \"rc-util/es/hooks/useMergedState\";\nimport isMobile from \"rc-util/es/isMobile\";\nimport KeyCode from \"rc-util/es/KeyCode\";\nimport { useComposeRef } from \"rc-util/es/ref\";\nimport * as React from 'react';\nimport { useAllowClear } from \"./hooks/useAllowClear\";\nimport { BaseSelectContext } from \"./hooks/useBaseProps\";\nimport useDelayReset from \"./hooks/useDelayReset\";\nimport useLock from \"./hooks/useLock\";\nimport useSelectTriggerControl from \"./hooks/useSelectTriggerControl\";\nimport Selector from \"./Selector\";\nimport SelectTrigger from \"./SelectTrigger\";\nimport TransBtn from \"./TransBtn\";\nimport { getSeparatedContent, isValidCount } from \"./utils/valueUtil\";\nimport SelectContext from \"./SelectContext\";\nvar DEFAULT_OMIT_PROPS = ['value', 'onChange', 'removeIcon', 'placeholder', 'autoFocus', 'maxTagCount', 'maxTagTextLength', 'maxTagPlaceholder', 'choiceTransitionName', 'onInputKeyDown', 'onPopupScroll', 'tabIndex'];\nexport var isMultiple = function isMultiple(mode) {\n  return mode === 'tags' || mode === 'multiple';\n};\nvar BaseSelect = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var _customizeRawInputEle;\n  var id = props.id,\n    prefixCls = props.prefixCls,\n    className = props.className,\n    showSearch = props.showSearch,\n    tagRender = props.tagRender,\n    direction = props.direction,\n    omitDomProps = props.omitDomProps,\n    displayValues = props.displayValues,\n    onDisplayValuesChange = props.onDisplayValuesChange,\n    emptyOptions = props.emptyOptions,\n    _props$notFoundConten = props.notFoundContent,\n    notFoundContent = _props$notFoundConten === void 0 ? 'Not Found' : _props$notFoundConten,\n    onClear = props.onClear,\n    mode = props.mode,\n    disabled = props.disabled,\n    loading = props.loading,\n    getInputElement = props.getInputElement,\n    getRawInputElement = props.getRawInputElement,\n    open = props.open,\n    defaultOpen = props.defaultOpen,\n    onDropdownVisibleChange = props.onDropdownVisibleChange,\n    activeValue = props.activeValue,\n    onActiveValueChange = props.onActiveValueChange,\n    activeDescendantId = props.activeDescendantId,\n    searchValue = props.searchValue,\n    autoClearSearchValue = props.autoClearSearchValue,\n    onSearch = props.onSearch,\n    onSearchSplit = props.onSearchSplit,\n    tokenSeparators = props.tokenSeparators,\n    allowClear = props.allowClear,\n    suffixIcon = props.suffixIcon,\n    clearIcon = props.clearIcon,\n    OptionList = props.OptionList,\n    animation = props.animation,\n    transitionName = props.transitionName,\n    dropdownStyle = props.dropdownStyle,\n    dropdownClassName = props.dropdownClassName,\n    dropdownMatchSelectWidth = props.dropdownMatchSelectWidth,\n    dropdownRender = props.dropdownRender,\n    dropdownAlign = props.dropdownAlign,\n    placement = props.placement,\n    builtinPlacements = props.builtinPlacements,\n    getPopupContainer = props.getPopupContainer,\n    _props$showAction = props.showAction,\n    showAction = _props$showAction === void 0 ? [] : _props$showAction,\n    onFocus = props.onFocus,\n    onBlur = props.onBlur,\n    onKeyUp = props.onKeyUp,\n    onKeyDown = props.onKeyDown,\n    onMouseDown = props.onMouseDown,\n    restProps = _objectWithoutProperties(props, _excluded);\n\n  // ============================== MISC ==============================\n  var multiple = isMultiple(mode);\n  var mergedShowSearch = (showSearch !== undefined ? showSearch : multiple) || mode === 'combobox';\n  var domProps = _objectSpread({}, restProps);\n  DEFAULT_OMIT_PROPS.forEach(function (propName) {\n    delete domProps[propName];\n  });\n  omitDomProps === null || omitDomProps === void 0 || omitDomProps.forEach(function (propName) {\n    delete domProps[propName];\n  });\n\n  // ============================= Mobile =============================\n  var _React$useState = React.useState(false),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    mobile = _React$useState2[0],\n    setMobile = _React$useState2[1];\n  React.useEffect(function () {\n    // Only update on the client side\n    setMobile(isMobile());\n  }, []);\n\n  // ============================== Refs ==============================\n  var containerRef = React.useRef(null);\n  var selectorDomRef = React.useRef(null);\n  var triggerRef = React.useRef(null);\n  var selectorRef = React.useRef(null);\n  var listRef = React.useRef(null);\n  var blurRef = React.useRef(false);\n\n  /** Used for component focused management */\n  var _useDelayReset = useDelayReset(),\n    _useDelayReset2 = _slicedToArray(_useDelayReset, 3),\n    mockFocused = _useDelayReset2[0],\n    setMockFocused = _useDelayReset2[1],\n    cancelSetMockFocused = _useDelayReset2[2];\n\n  // =========================== Imperative ===========================\n  React.useImperativeHandle(ref, function () {\n    var _selectorRef$current, _selectorRef$current2;\n    return {\n      focus: (_selectorRef$current = selectorRef.current) === null || _selectorRef$current === void 0 ? void 0 : _selectorRef$current.focus,\n      blur: (_selectorRef$current2 = selectorRef.current) === null || _selectorRef$current2 === void 0 ? void 0 : _selectorRef$current2.blur,\n      scrollTo: function scrollTo(arg) {\n        var _listRef$current;\n        return (_listRef$current = listRef.current) === null || _listRef$current === void 0 ? void 0 : _listRef$current.scrollTo(arg);\n      }\n    };\n  });\n\n  // ========================== Search Value ==========================\n  var mergedSearchValue = React.useMemo(function () {\n    var _displayValues$;\n    if (mode !== 'combobox') {\n      return searchValue;\n    }\n    var val = (_displayValues$ = displayValues[0]) === null || _displayValues$ === void 0 ? void 0 : _displayValues$.value;\n    return typeof val === 'string' || typeof val === 'number' ? String(val) : '';\n  }, [searchValue, mode, displayValues]);\n\n  // ========================== Custom Input ==========================\n  // Only works in `combobox`\n  var customizeInputElement = mode === 'combobox' && typeof getInputElement === 'function' && getInputElement() || null;\n\n  // Used for customize replacement for `rc-cascader`\n  var customizeRawInputElement = typeof getRawInputElement === 'function' && getRawInputElement();\n  var customizeRawInputRef = useComposeRef(selectorDomRef, customizeRawInputElement === null || customizeRawInputElement === void 0 || (_customizeRawInputEle = customizeRawInputElement.props) === null || _customizeRawInputEle === void 0 ? void 0 : _customizeRawInputEle.ref);\n\n  // ============================== Open ==============================\n  // SSR not support Portal which means we need delay `open` for the first time render\n  var _React$useState3 = React.useState(false),\n    _React$useState4 = _slicedToArray(_React$useState3, 2),\n    rendered = _React$useState4[0],\n    setRendered = _React$useState4[1];\n  useLayoutEffect(function () {\n    setRendered(true);\n  }, []);\n  var _useMergedState = useMergedState(false, {\n      defaultValue: defaultOpen,\n      value: open\n    }),\n    _useMergedState2 = _slicedToArray(_useMergedState, 2),\n    innerOpen = _useMergedState2[0],\n    setInnerOpen = _useMergedState2[1];\n  var mergedOpen = rendered ? innerOpen : false;\n\n  // Not trigger `open` in `combobox` when `notFoundContent` is empty\n  var emptyListContent = !notFoundContent && emptyOptions;\n  if (disabled || emptyListContent && mergedOpen && mode === 'combobox') {\n    mergedOpen = false;\n  }\n  var triggerOpen = emptyListContent ? false : mergedOpen;\n  var onToggleOpen = React.useCallback(function (newOpen) {\n    var nextOpen = newOpen !== undefined ? newOpen : !mergedOpen;\n    if (!disabled) {\n      setInnerOpen(nextOpen);\n      if (mergedOpen !== nextOpen) {\n        onDropdownVisibleChange === null || onDropdownVisibleChange === void 0 || onDropdownVisibleChange(nextOpen);\n      }\n    }\n  }, [disabled, mergedOpen, setInnerOpen, onDropdownVisibleChange]);\n\n  // ============================= Search =============================\n  var tokenWithEnter = React.useMemo(function () {\n    return (tokenSeparators || []).some(function (tokenSeparator) {\n      return ['\\n', '\\r\\n'].includes(tokenSeparator);\n    });\n  }, [tokenSeparators]);\n  var _ref = React.useContext(SelectContext) || {},\n    maxCount = _ref.maxCount,\n    rawValues = _ref.rawValues;\n  var onInternalSearch = function onInternalSearch(searchText, fromTyping, isCompositing) {\n    if (isValidCount(maxCount) && (rawValues === null || rawValues === void 0 ? void 0 : rawValues.size) >= maxCount) {\n      return;\n    }\n    var ret = true;\n    var newSearchText = searchText;\n    onActiveValueChange === null || onActiveValueChange === void 0 || onActiveValueChange(null);\n    var separatedList = getSeparatedContent(searchText, tokenSeparators, isValidCount(maxCount) ? maxCount - rawValues.size : undefined);\n\n    // Check if match the `tokenSeparators`\n    var patchLabels = isCompositing ? null : separatedList;\n\n    // Ignore combobox since it's not split-able\n    if (mode !== 'combobox' && patchLabels) {\n      newSearchText = '';\n      onSearchSplit === null || onSearchSplit === void 0 || onSearchSplit(patchLabels);\n\n      // Should close when paste finish\n      onToggleOpen(false);\n\n      // Tell Selector that break next actions\n      ret = false;\n    }\n    if (onSearch && mergedSearchValue !== newSearchText) {\n      onSearch(newSearchText, {\n        source: fromTyping ? 'typing' : 'effect'\n      });\n    }\n    return ret;\n  };\n\n  // Only triggered when menu is closed & mode is tags\n  // If menu is open, OptionList will take charge\n  // If mode isn't tags, press enter is not meaningful when you can't see any option\n  var onInternalSearchSubmit = function onInternalSearchSubmit(searchText) {\n    // prevent empty tags from appearing when you click the Enter button\n    if (!searchText || !searchText.trim()) {\n      return;\n    }\n    onSearch(searchText, {\n      source: 'submit'\n    });\n  };\n\n  // Close will clean up single mode search text\n  React.useEffect(function () {\n    if (!mergedOpen && !multiple && mode !== 'combobox') {\n      onInternalSearch('', false, false);\n    }\n  }, [mergedOpen]);\n\n  // ============================ Disabled ============================\n  // Close dropdown & remove focus state when disabled change\n  React.useEffect(function () {\n    if (innerOpen && disabled) {\n      setInnerOpen(false);\n    }\n\n    // After onBlur is triggered, the focused does not need to be reset\n    if (disabled && !blurRef.current) {\n      setMockFocused(false);\n    }\n  }, [disabled]);\n\n  // ============================ Keyboard ============================\n  /**\n   * We record input value here to check if can press to clean up by backspace\n   * - null: Key is not down, this is reset by key up\n   * - true: Search text is empty when first time backspace down\n   * - false: Search text is not empty when first time backspace down\n   */\n  var _useLock = useLock(),\n    _useLock2 = _slicedToArray(_useLock, 2),\n    getClearLock = _useLock2[0],\n    setClearLock = _useLock2[1];\n\n  // KeyDown\n  var onInternalKeyDown = function onInternalKeyDown(event) {\n    var clearLock = getClearLock();\n    var which = event.which;\n    if (which === KeyCode.ENTER) {\n      // Do not submit form when type in the input\n      if (mode !== 'combobox') {\n        event.preventDefault();\n      }\n\n      // We only manage open state here, close logic should handle by list component\n      if (!mergedOpen) {\n        onToggleOpen(true);\n      }\n    }\n    setClearLock(!!mergedSearchValue);\n\n    // Remove value by `backspace`\n    if (which === KeyCode.BACKSPACE && !clearLock && multiple && !mergedSearchValue && displayValues.length) {\n      var cloneDisplayValues = _toConsumableArray(displayValues);\n      var removedDisplayValue = null;\n      for (var i = cloneDisplayValues.length - 1; i >= 0; i -= 1) {\n        var current = cloneDisplayValues[i];\n        if (!current.disabled) {\n          cloneDisplayValues.splice(i, 1);\n          removedDisplayValue = current;\n          break;\n        }\n      }\n      if (removedDisplayValue) {\n        onDisplayValuesChange(cloneDisplayValues, {\n          type: 'remove',\n          values: [removedDisplayValue]\n        });\n      }\n    }\n    for (var _len = arguments.length, rest = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      rest[_key - 1] = arguments[_key];\n    }\n    if (mergedOpen) {\n      var _listRef$current2;\n      (_listRef$current2 = listRef.current) === null || _listRef$current2 === void 0 || _listRef$current2.onKeyDown.apply(_listRef$current2, [event].concat(rest));\n    }\n    onKeyDown === null || onKeyDown === void 0 || onKeyDown.apply(void 0, [event].concat(rest));\n  };\n\n  // KeyUp\n  var onInternalKeyUp = function onInternalKeyUp(event) {\n    for (var _len2 = arguments.length, rest = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n      rest[_key2 - 1] = arguments[_key2];\n    }\n    if (mergedOpen) {\n      var _listRef$current3;\n      (_listRef$current3 = listRef.current) === null || _listRef$current3 === void 0 || _listRef$current3.onKeyUp.apply(_listRef$current3, [event].concat(rest));\n    }\n    onKeyUp === null || onKeyUp === void 0 || onKeyUp.apply(void 0, [event].concat(rest));\n  };\n\n  // ============================ Selector ============================\n  var onSelectorRemove = function onSelectorRemove(val) {\n    var newValues = displayValues.filter(function (i) {\n      return i !== val;\n    });\n    onDisplayValuesChange(newValues, {\n      type: 'remove',\n      values: [val]\n    });\n  };\n\n  // ========================== Focus / Blur ==========================\n  /** Record real focus status */\n  var focusRef = React.useRef(false);\n  var onContainerFocus = function onContainerFocus() {\n    setMockFocused(true);\n    if (!disabled) {\n      if (onFocus && !focusRef.current) {\n        onFocus.apply(void 0, arguments);\n      }\n\n      // `showAction` should handle `focus` if set\n      if (showAction.includes('focus')) {\n        onToggleOpen(true);\n      }\n    }\n    focusRef.current = true;\n  };\n  var onContainerBlur = function onContainerBlur() {\n    blurRef.current = true;\n    setMockFocused(false, function () {\n      focusRef.current = false;\n      blurRef.current = false;\n      onToggleOpen(false);\n    });\n    if (disabled) {\n      return;\n    }\n    if (mergedSearchValue) {\n      // `tags` mode should move `searchValue` into values\n      if (mode === 'tags') {\n        onSearch(mergedSearchValue, {\n          source: 'submit'\n        });\n      } else if (mode === 'multiple') {\n        // `multiple` mode only clean the search value but not trigger event\n        onSearch('', {\n          source: 'blur'\n        });\n      }\n    }\n    if (onBlur) {\n      onBlur.apply(void 0, arguments);\n    }\n  };\n\n  // Give focus back of Select\n  var activeTimeoutIds = [];\n  React.useEffect(function () {\n    return function () {\n      activeTimeoutIds.forEach(function (timeoutId) {\n        return clearTimeout(timeoutId);\n      });\n      activeTimeoutIds.splice(0, activeTimeoutIds.length);\n    };\n  }, []);\n  var onInternalMouseDown = function onInternalMouseDown(event) {\n    var _triggerRef$current;\n    var target = event.target;\n    var popupElement = (_triggerRef$current = triggerRef.current) === null || _triggerRef$current === void 0 ? void 0 : _triggerRef$current.getPopupElement();\n\n    // We should give focus back to selector if clicked item is not focusable\n    if (popupElement && popupElement.contains(target)) {\n      var timeoutId = setTimeout(function () {\n        var index = activeTimeoutIds.indexOf(timeoutId);\n        if (index !== -1) {\n          activeTimeoutIds.splice(index, 1);\n        }\n        cancelSetMockFocused();\n        if (!mobile && !popupElement.contains(document.activeElement)) {\n          var _selectorRef$current3;\n          (_selectorRef$current3 = selectorRef.current) === null || _selectorRef$current3 === void 0 || _selectorRef$current3.focus();\n        }\n      });\n      activeTimeoutIds.push(timeoutId);\n    }\n    for (var _len3 = arguments.length, restArgs = new Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {\n      restArgs[_key3 - 1] = arguments[_key3];\n    }\n    onMouseDown === null || onMouseDown === void 0 || onMouseDown.apply(void 0, [event].concat(restArgs));\n  };\n\n  // ============================ Dropdown ============================\n  var _React$useState5 = React.useState({}),\n    _React$useState6 = _slicedToArray(_React$useState5, 2),\n    forceUpdate = _React$useState6[1];\n  // We need force update here since popup dom is render async\n  function onPopupMouseEnter() {\n    forceUpdate({});\n  }\n\n  // Used for raw custom input trigger\n  var onTriggerVisibleChange;\n  if (customizeRawInputElement) {\n    onTriggerVisibleChange = function onTriggerVisibleChange(newOpen) {\n      onToggleOpen(newOpen);\n    };\n  }\n\n  // Close when click on non-select element\n  useSelectTriggerControl(function () {\n    var _triggerRef$current2;\n    return [containerRef.current, (_triggerRef$current2 = triggerRef.current) === null || _triggerRef$current2 === void 0 ? void 0 : _triggerRef$current2.getPopupElement()];\n  }, triggerOpen, onToggleOpen, !!customizeRawInputElement);\n\n  // ============================ Context =============================\n  var baseSelectContext = React.useMemo(function () {\n    return _objectSpread(_objectSpread({}, props), {}, {\n      notFoundContent: notFoundContent,\n      open: mergedOpen,\n      triggerOpen: triggerOpen,\n      id: id,\n      showSearch: mergedShowSearch,\n      multiple: multiple,\n      toggleOpen: onToggleOpen\n    });\n  }, [props, notFoundContent, triggerOpen, mergedOpen, id, mergedShowSearch, multiple, onToggleOpen]);\n\n  // ==================================================================\n  // ==                            Render                            ==\n  // ==================================================================\n\n  // ============================= Arrow ==============================\n  var showSuffixIcon = !!suffixIcon || loading;\n  var arrowNode;\n  if (showSuffixIcon) {\n    arrowNode = /*#__PURE__*/React.createElement(TransBtn, {\n      className: classNames(\"\".concat(prefixCls, \"-arrow\"), _defineProperty({}, \"\".concat(prefixCls, \"-arrow-loading\"), loading)),\n      customizeIcon: suffixIcon,\n      customizeIconProps: {\n        loading: loading,\n        searchValue: mergedSearchValue,\n        open: mergedOpen,\n        focused: mockFocused,\n        showSearch: mergedShowSearch\n      }\n    });\n  }\n\n  // ============================= Clear ==============================\n  var onClearMouseDown = function onClearMouseDown() {\n    var _selectorRef$current4;\n    onClear === null || onClear === void 0 || onClear();\n    (_selectorRef$current4 = selectorRef.current) === null || _selectorRef$current4 === void 0 || _selectorRef$current4.focus();\n    onDisplayValuesChange([], {\n      type: 'clear',\n      values: displayValues\n    });\n    onInternalSearch('', false, false);\n  };\n  var _useAllowClear = useAllowClear(prefixCls, onClearMouseDown, displayValues, allowClear, clearIcon, disabled, mergedSearchValue, mode),\n    mergedAllowClear = _useAllowClear.allowClear,\n    clearNode = _useAllowClear.clearIcon;\n\n  // =========================== OptionList ===========================\n  var optionList = /*#__PURE__*/React.createElement(OptionList, {\n    ref: listRef\n  });\n\n  // ============================= Select =============================\n  var mergedClassName = classNames(prefixCls, className, _defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty({}, \"\".concat(prefixCls, \"-focused\"), mockFocused), \"\".concat(prefixCls, \"-multiple\"), multiple), \"\".concat(prefixCls, \"-single\"), !multiple), \"\".concat(prefixCls, \"-allow-clear\"), allowClear), \"\".concat(prefixCls, \"-show-arrow\"), showSuffixIcon), \"\".concat(prefixCls, \"-disabled\"), disabled), \"\".concat(prefixCls, \"-loading\"), loading), \"\".concat(prefixCls, \"-open\"), mergedOpen), \"\".concat(prefixCls, \"-customize-input\"), customizeInputElement), \"\".concat(prefixCls, \"-show-search\"), mergedShowSearch));\n\n  // >>> Selector\n  var selectorNode = /*#__PURE__*/React.createElement(SelectTrigger, {\n    ref: triggerRef,\n    disabled: disabled,\n    prefixCls: prefixCls,\n    visible: triggerOpen,\n    popupElement: optionList,\n    animation: animation,\n    transitionName: transitionName,\n    dropdownStyle: dropdownStyle,\n    dropdownClassName: dropdownClassName,\n    direction: direction,\n    dropdownMatchSelectWidth: dropdownMatchSelectWidth,\n    dropdownRender: dropdownRender,\n    dropdownAlign: dropdownAlign,\n    placement: placement,\n    builtinPlacements: builtinPlacements,\n    getPopupContainer: getPopupContainer,\n    empty: emptyOptions,\n    getTriggerDOMNode: function getTriggerDOMNode() {\n      return selectorDomRef.current;\n    },\n    onPopupVisibleChange: onTriggerVisibleChange,\n    onPopupMouseEnter: onPopupMouseEnter\n  }, customizeRawInputElement ? ( /*#__PURE__*/React.cloneElement(customizeRawInputElement, {\n    ref: customizeRawInputRef\n  })) : /*#__PURE__*/React.createElement(Selector, _extends({}, props, {\n    domRef: selectorDomRef,\n    prefixCls: prefixCls,\n    inputElement: customizeInputElement,\n    ref: selectorRef,\n    id: id,\n    showSearch: mergedShowSearch,\n    autoClearSearchValue: autoClearSearchValue,\n    mode: mode,\n    activeDescendantId: activeDescendantId,\n    tagRender: tagRender,\n    values: displayValues,\n    open: mergedOpen,\n    onToggleOpen: onToggleOpen,\n    activeValue: activeValue,\n    searchValue: mergedSearchValue,\n    onSearch: onInternalSearch,\n    onSearchSubmit: onInternalSearchSubmit,\n    onRemove: onSelectorRemove,\n    tokenWithEnter: tokenWithEnter\n  })));\n\n  // >>> Render\n  var renderNode;\n\n  // Render raw\n  if (customizeRawInputElement) {\n    renderNode = selectorNode;\n  } else {\n    renderNode = /*#__PURE__*/React.createElement(\"div\", _extends({\n      className: mergedClassName\n    }, domProps, {\n      ref: containerRef,\n      onMouseDown: onInternalMouseDown,\n      onKeyDown: onInternalKeyDown,\n      onKeyUp: onInternalKeyUp,\n      onFocus: onContainerFocus,\n      onBlur: onContainerBlur\n    }), mockFocused && !mergedOpen && /*#__PURE__*/React.createElement(\"span\", {\n      \"aria-live\": \"polite\",\n      style: {\n        width: 0,\n        height: 0,\n        position: 'absolute',\n        overflow: 'hidden',\n        opacity: 0\n      }\n    }, \"\".concat(displayValues.map(function (_ref2) {\n      var label = _ref2.label,\n        value = _ref2.value;\n      return ['number', 'string'].includes(_typeof(label)) ? label : value;\n    }).join(', '))), selectorNode, arrowNode, mergedAllowClear && clearNode);\n  }\n  return /*#__PURE__*/React.createElement(BaseSelectContext.Provider, {\n    value: baseSelectContext\n  }, renderNode);\n});\n\n// Set display name for dev\nif (process.env.NODE_ENV !== 'production') {\n  BaseSelect.displayName = 'BaseSelect';\n}\nexport default BaseSelect;"],"mappings":"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"},"metadata":{},"sourceType":"module"}