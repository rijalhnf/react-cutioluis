{"ast":null,"code":"\"use client\";\n\nimport React, { useContext } from 'react';\nimport classNames from 'classnames';\nimport { ConfigContext } from '../config-provider';\nimport useMessage from '../message/useMessage';\nimport useModal from '../modal/useModal';\nimport useNotification from '../notification/useNotification';\nimport AppContext, { AppConfigContext } from './context';\nimport useStyle from './style';\n\nconst useApp = () => React.useContext(AppContext);\n\nconst App = props => {\n  const {\n    prefixCls: customizePrefixCls,\n    children,\n    className,\n    rootClassName,\n    message,\n    notification,\n    style,\n    component = 'div'\n  } = props;\n  const {\n    getPrefixCls\n  } = useContext(ConfigContext);\n  const prefixCls = getPrefixCls('app', customizePrefixCls);\n  const [wrapCSSVar, hashId, cssVarCls] = useStyle(prefixCls);\n  const customClassName = classNames(hashId, prefixCls, className, rootClassName, cssVarCls);\n  const appConfig = useContext(AppConfigContext);\n  const mergedAppConfig = React.useMemo(() => ({\n    message: Object.assign(Object.assign({}, appConfig.message), message),\n    notification: Object.assign(Object.assign({}, appConfig.notification), notification)\n  }), [message, notification, appConfig.message, appConfig.notification]);\n  const [messageApi, messageContextHolder] = useMessage(mergedAppConfig.message);\n  const [notificationApi, notificationContextHolder] = useNotification(mergedAppConfig.notification);\n  const [ModalApi, ModalContextHolder] = useModal();\n  const memoizedContextValue = React.useMemo(() => ({\n    message: messageApi,\n    notification: notificationApi,\n    modal: ModalApi\n  }), [messageApi, notificationApi, ModalApi]); // ============================ Render ============================\n\n  const Component = component === false ? React.Fragment : component;\n  const rootProps = {\n    className: customClassName,\n    style\n  };\n  return wrapCSSVar( /*#__PURE__*/React.createElement(AppContext.Provider, {\n    value: memoizedContextValue\n  }, /*#__PURE__*/React.createElement(AppConfigContext.Provider, {\n    value: mergedAppConfig\n  }, /*#__PURE__*/React.createElement(Component, Object.assign({}, component === false ? undefined : rootProps), ModalContextHolder, messageContextHolder, notificationContextHolder, children))));\n};\n\nif (process.env.NODE_ENV !== 'production') {\n  App.displayName = 'App';\n}\n\nApp.useApp = useApp;\nexport default App;","map":{"version":3,"names":["React","useContext","classNames","ConfigContext","useMessage","useModal","useNotification","AppContext","AppConfigContext","useStyle","useApp","App","props","prefixCls","customizePrefixCls","children","className","rootClassName","message","notification","style","component","getPrefixCls","wrapCSSVar","hashId","cssVarCls","customClassName","appConfig","mergedAppConfig","useMemo","Object","assign","messageApi","messageContextHolder","notificationApi","notificationContextHolder","ModalApi","ModalContextHolder","memoizedContextValue","modal","Component","Fragment","rootProps","createElement","Provider","value","undefined","process","env","NODE_ENV","displayName"],"sources":["/Users/joji/Downloads/react-cutioluis-main copy/node_modules/antd/es/app/index.js"],"sourcesContent":["\"use client\";\n\nimport React, { useContext } from 'react';\nimport classNames from 'classnames';\nimport { ConfigContext } from '../config-provider';\nimport useMessage from '../message/useMessage';\nimport useModal from '../modal/useModal';\nimport useNotification from '../notification/useNotification';\nimport AppContext, { AppConfigContext } from './context';\nimport useStyle from './style';\nconst useApp = () => React.useContext(AppContext);\nconst App = props => {\n  const {\n    prefixCls: customizePrefixCls,\n    children,\n    className,\n    rootClassName,\n    message,\n    notification,\n    style,\n    component = 'div'\n  } = props;\n  const {\n    getPrefixCls\n  } = useContext(ConfigContext);\n  const prefixCls = getPrefixCls('app', customizePrefixCls);\n  const [wrapCSSVar, hashId, cssVarCls] = useStyle(prefixCls);\n  const customClassName = classNames(hashId, prefixCls, className, rootClassName, cssVarCls);\n  const appConfig = useContext(AppConfigContext);\n  const mergedAppConfig = React.useMemo(() => ({\n    message: Object.assign(Object.assign({}, appConfig.message), message),\n    notification: Object.assign(Object.assign({}, appConfig.notification), notification)\n  }), [message, notification, appConfig.message, appConfig.notification]);\n  const [messageApi, messageContextHolder] = useMessage(mergedAppConfig.message);\n  const [notificationApi, notificationContextHolder] = useNotification(mergedAppConfig.notification);\n  const [ModalApi, ModalContextHolder] = useModal();\n  const memoizedContextValue = React.useMemo(() => ({\n    message: messageApi,\n    notification: notificationApi,\n    modal: ModalApi\n  }), [messageApi, notificationApi, ModalApi]);\n  // ============================ Render ============================\n  const Component = component === false ? React.Fragment : component;\n  const rootProps = {\n    className: customClassName,\n    style\n  };\n  return wrapCSSVar( /*#__PURE__*/React.createElement(AppContext.Provider, {\n    value: memoizedContextValue\n  }, /*#__PURE__*/React.createElement(AppConfigContext.Provider, {\n    value: mergedAppConfig\n  }, /*#__PURE__*/React.createElement(Component, Object.assign({}, component === false ? undefined : rootProps), ModalContextHolder, messageContextHolder, notificationContextHolder, children))));\n};\nif (process.env.NODE_ENV !== 'production') {\n  App.displayName = 'App';\n}\nApp.useApp = useApp;\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module"}