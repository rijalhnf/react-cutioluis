{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport { useMergedState } from 'rc-util';\nimport useLayoutEffect from \"rc-util/es/hooks/useLayoutEffect\";\nimport * as React from 'react';\nimport { fillTime, isSame } from \"../../utils/dateUtil\";\nexport function offsetPanelDate(generateConfig, picker, date, offset) {\n  switch (picker) {\n    case 'date':\n    case 'week':\n      return generateConfig.addMonth(date, offset);\n\n    case 'month':\n    case 'quarter':\n      return generateConfig.addYear(date, offset);\n\n    case 'year':\n      return generateConfig.addYear(date, offset * 10);\n\n    case 'decade':\n      return generateConfig.addYear(date, offset * 100);\n\n    default:\n      return date;\n  }\n}\nvar EMPTY_LIST = [];\nexport default function useRangePickerValue(generateConfig, locale, calendarValue, modes, open, activeIndex, pickerMode, multiplePanel) {\n  var defaultPickerValue = arguments.length > 8 && arguments[8] !== undefined ? arguments[8] : EMPTY_LIST;\n  var pickerValue = arguments.length > 9 && arguments[9] !== undefined ? arguments[9] : EMPTY_LIST;\n  var timeDefaultValue = arguments.length > 10 && arguments[10] !== undefined ? arguments[10] : EMPTY_LIST;\n  var onPickerValueChange = arguments.length > 11 ? arguments[11] : undefined;\n  var minDate = arguments.length > 12 ? arguments[12] : undefined;\n  var maxDate = arguments.length > 13 ? arguments[13] : undefined;\n  var isTimePicker = pickerMode === 'time'; // ======================== Active ========================\n  // `activeIndex` must be valid to avoid getting empty `pickerValue`\n\n  var mergedActiveIndex = activeIndex || 0; // ===================== Picker Value =====================\n\n  var getDefaultPickerValue = function getDefaultPickerValue(index) {\n    var now = generateConfig.getNow();\n\n    if (isTimePicker) {\n      now = fillTime(generateConfig, now);\n    }\n\n    return defaultPickerValue[index] || calendarValue[index] || now;\n  }; // Align `pickerValue` with `showTime.defaultValue`\n\n\n  var _pickerValue = _slicedToArray(pickerValue, 2),\n      startPickerValue = _pickerValue[0],\n      endPickerValue = _pickerValue[1]; // PickerValue state\n\n\n  var _useMergedState = useMergedState(function () {\n    return getDefaultPickerValue(0);\n  }, {\n    value: startPickerValue\n  }),\n      _useMergedState2 = _slicedToArray(_useMergedState, 2),\n      mergedStartPickerValue = _useMergedState2[0],\n      setStartPickerValue = _useMergedState2[1];\n\n  var _useMergedState3 = useMergedState(function () {\n    return getDefaultPickerValue(1);\n  }, {\n    value: endPickerValue\n  }),\n      _useMergedState4 = _slicedToArray(_useMergedState3, 2),\n      mergedEndPickerValue = _useMergedState4[0],\n      setEndPickerValue = _useMergedState4[1]; // Current PickerValue\n\n\n  var currentPickerValue = React.useMemo(function () {\n    var current = [mergedStartPickerValue, mergedEndPickerValue][mergedActiveIndex]; // Merge the `showTime.defaultValue` into `pickerValue`\n\n    return isTimePicker ? current : fillTime(generateConfig, current, timeDefaultValue[mergedActiveIndex]);\n  }, [isTimePicker, mergedStartPickerValue, mergedEndPickerValue, mergedActiveIndex, generateConfig, timeDefaultValue]);\n\n  var setCurrentPickerValue = function setCurrentPickerValue(nextPickerValue) {\n    var source = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'panel';\n    var updater = [setStartPickerValue, setEndPickerValue][mergedActiveIndex];\n    updater(nextPickerValue);\n    var clone = [mergedStartPickerValue, mergedEndPickerValue];\n    clone[mergedActiveIndex] = nextPickerValue;\n\n    if (onPickerValueChange && (!isSame(generateConfig, locale, mergedStartPickerValue, clone[0], pickerMode) || !isSame(generateConfig, locale, mergedEndPickerValue, clone[1], pickerMode))) {\n      onPickerValueChange(clone, {\n        source: source,\n        range: mergedActiveIndex === 1 ? 'end' : 'start',\n        mode: modes\n      });\n    }\n  }; // ======================== Effect ========================\n\n  /**\n   * EndDate pickerValue is little different. It should be:\n   * - If date picker (without time), endDate is not same year & month as startDate\n   *   - pickerValue minus one month\n   * - Else pass directly\n   */\n\n\n  var getEndDatePickerValue = function getEndDatePickerValue(startDate, endDate) {\n    if (multiplePanel) {\n      // Basic offset\n      var SAME_CHECKER = {\n        date: 'month',\n        week: 'month',\n        month: 'year',\n        quarter: 'year'\n      };\n      var mode = SAME_CHECKER[pickerMode];\n\n      if (mode && !isSame(generateConfig, locale, startDate, endDate, mode)) {\n        return offsetPanelDate(generateConfig, pickerMode, endDate, -1);\n      } // Year offset\n\n\n      if (pickerMode === 'year') {\n        var srcYear = Math.floor(generateConfig.getYear(startDate) / 10);\n        var tgtYear = Math.floor(generateConfig.getYear(endDate) / 10);\n\n        if (srcYear !== tgtYear) {\n          return offsetPanelDate(generateConfig, pickerMode, endDate, -1);\n        }\n      }\n    }\n\n    return endDate;\n  }; // >>> When switch field, reset the picker value as prev field picker value\n\n\n  var prevActiveIndexRef = React.useRef(null);\n  useLayoutEffect(function () {\n    if (open) {\n      if (!defaultPickerValue[mergedActiveIndex]) {\n        var nextPickerValue = isTimePicker ? null : generateConfig.getNow();\n        /**\n         * 1. If has prevActiveIndex, use it to avoid panel jump\n         * 2. If current field has value\n         *    - If `activeIndex` is 1 and `calendarValue[0]` is not same panel as `calendarValue[1]`,\n         *      offset `calendarValue[1]` and set it\n         *    - Else use `calendarValue[activeIndex]`\n         * 3. If current field has no value but another field has value, use another field value\n         * 4. Else use now (not any `calendarValue` can ref)\n         */\n\n        if (prevActiveIndexRef.current !== null && prevActiveIndexRef.current !== mergedActiveIndex) {\n          // If from another field, not jump picker value\n          nextPickerValue = [mergedStartPickerValue, mergedEndPickerValue][mergedActiveIndex ^ 1];\n        } else if (calendarValue[mergedActiveIndex]) {\n          // Current field has value\n          nextPickerValue = mergedActiveIndex === 0 ? calendarValue[0] : getEndDatePickerValue(calendarValue[0], calendarValue[1]);\n        } else if (calendarValue[mergedActiveIndex ^ 1]) {\n          // Current field has no value but another field has value\n          nextPickerValue = calendarValue[mergedActiveIndex ^ 1];\n        } // Only sync when has value, this will sync in the `min-max` logic\n\n\n        if (nextPickerValue) {\n          // nextPickerValue < minDate\n          if (minDate && generateConfig.isAfter(minDate, nextPickerValue)) {\n            nextPickerValue = minDate;\n          } // maxDate < nextPickerValue\n\n\n          var offsetPickerValue = multiplePanel ? offsetPanelDate(generateConfig, pickerMode, nextPickerValue, 1) : nextPickerValue;\n\n          if (maxDate && generateConfig.isAfter(offsetPickerValue, maxDate)) {\n            nextPickerValue = multiplePanel ? offsetPanelDate(generateConfig, pickerMode, maxDate, -1) : maxDate;\n          }\n\n          setCurrentPickerValue(nextPickerValue, 'reset');\n        }\n      }\n    }\n  }, [open, mergedActiveIndex, calendarValue[mergedActiveIndex]]); // >>> Reset prevActiveIndex when panel closed\n\n  React.useEffect(function () {\n    if (open) {\n      prevActiveIndexRef.current = mergedActiveIndex;\n    } else {\n      prevActiveIndexRef.current = null;\n    }\n  }, [open, mergedActiveIndex]); // >>> defaultPickerValue: Resync to `defaultPickerValue` for each panel focused\n\n  useLayoutEffect(function () {\n    if (open && defaultPickerValue) {\n      if (defaultPickerValue[mergedActiveIndex]) {\n        setCurrentPickerValue(defaultPickerValue[mergedActiveIndex], 'reset');\n      }\n    }\n  }, [open, mergedActiveIndex]);\n  return [currentPickerValue, setCurrentPickerValue];\n}","map":{"version":3,"names":["_slicedToArray","useMergedState","useLayoutEffect","React","fillTime","isSame","offsetPanelDate","generateConfig","picker","date","offset","addMonth","addYear","EMPTY_LIST","useRangePickerValue","locale","calendarValue","modes","open","activeIndex","pickerMode","multiplePanel","defaultPickerValue","arguments","length","undefined","pickerValue","timeDefaultValue","onPickerValueChange","minDate","maxDate","isTimePicker","mergedActiveIndex","getDefaultPickerValue","index","now","getNow","_pickerValue","startPickerValue","endPickerValue","_useMergedState","value","_useMergedState2","mergedStartPickerValue","setStartPickerValue","_useMergedState3","_useMergedState4","mergedEndPickerValue","setEndPickerValue","currentPickerValue","useMemo","current","setCurrentPickerValue","nextPickerValue","source","updater","clone","range","mode","getEndDatePickerValue","startDate","endDate","SAME_CHECKER","week","month","quarter","srcYear","Math","floor","getYear","tgtYear","prevActiveIndexRef","useRef","isAfter","offsetPickerValue","useEffect"],"sources":["/Users/joji/Documents/CODE/React/react-cutioluis/node_modules/rc-picker/es/PickerInput/hooks/useRangePickerValue.js"],"sourcesContent":["import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport { useMergedState } from 'rc-util';\nimport useLayoutEffect from \"rc-util/es/hooks/useLayoutEffect\";\nimport * as React from 'react';\nimport { fillTime, isSame } from \"../../utils/dateUtil\";\nexport function offsetPanelDate(generateConfig, picker, date, offset) {\n  switch (picker) {\n    case 'date':\n    case 'week':\n      return generateConfig.addMonth(date, offset);\n    case 'month':\n    case 'quarter':\n      return generateConfig.addYear(date, offset);\n    case 'year':\n      return generateConfig.addYear(date, offset * 10);\n    case 'decade':\n      return generateConfig.addYear(date, offset * 100);\n    default:\n      return date;\n  }\n}\nvar EMPTY_LIST = [];\nexport default function useRangePickerValue(generateConfig, locale, calendarValue, modes, open, activeIndex, pickerMode, multiplePanel) {\n  var defaultPickerValue = arguments.length > 8 && arguments[8] !== undefined ? arguments[8] : EMPTY_LIST;\n  var pickerValue = arguments.length > 9 && arguments[9] !== undefined ? arguments[9] : EMPTY_LIST;\n  var timeDefaultValue = arguments.length > 10 && arguments[10] !== undefined ? arguments[10] : EMPTY_LIST;\n  var onPickerValueChange = arguments.length > 11 ? arguments[11] : undefined;\n  var minDate = arguments.length > 12 ? arguments[12] : undefined;\n  var maxDate = arguments.length > 13 ? arguments[13] : undefined;\n  var isTimePicker = pickerMode === 'time';\n\n  // ======================== Active ========================\n  // `activeIndex` must be valid to avoid getting empty `pickerValue`\n  var mergedActiveIndex = activeIndex || 0;\n\n  // ===================== Picker Value =====================\n  var getDefaultPickerValue = function getDefaultPickerValue(index) {\n    var now = generateConfig.getNow();\n    if (isTimePicker) {\n      now = fillTime(generateConfig, now);\n    }\n    return defaultPickerValue[index] || calendarValue[index] || now;\n  };\n\n  // Align `pickerValue` with `showTime.defaultValue`\n  var _pickerValue = _slicedToArray(pickerValue, 2),\n    startPickerValue = _pickerValue[0],\n    endPickerValue = _pickerValue[1];\n\n  // PickerValue state\n  var _useMergedState = useMergedState(function () {\n      return getDefaultPickerValue(0);\n    }, {\n      value: startPickerValue\n    }),\n    _useMergedState2 = _slicedToArray(_useMergedState, 2),\n    mergedStartPickerValue = _useMergedState2[0],\n    setStartPickerValue = _useMergedState2[1];\n  var _useMergedState3 = useMergedState(function () {\n      return getDefaultPickerValue(1);\n    }, {\n      value: endPickerValue\n    }),\n    _useMergedState4 = _slicedToArray(_useMergedState3, 2),\n    mergedEndPickerValue = _useMergedState4[0],\n    setEndPickerValue = _useMergedState4[1];\n\n  // Current PickerValue\n  var currentPickerValue = React.useMemo(function () {\n    var current = [mergedStartPickerValue, mergedEndPickerValue][mergedActiveIndex];\n\n    // Merge the `showTime.defaultValue` into `pickerValue`\n    return isTimePicker ? current : fillTime(generateConfig, current, timeDefaultValue[mergedActiveIndex]);\n  }, [isTimePicker, mergedStartPickerValue, mergedEndPickerValue, mergedActiveIndex, generateConfig, timeDefaultValue]);\n  var setCurrentPickerValue = function setCurrentPickerValue(nextPickerValue) {\n    var source = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'panel';\n    var updater = [setStartPickerValue, setEndPickerValue][mergedActiveIndex];\n    updater(nextPickerValue);\n    var clone = [mergedStartPickerValue, mergedEndPickerValue];\n    clone[mergedActiveIndex] = nextPickerValue;\n    if (onPickerValueChange && (!isSame(generateConfig, locale, mergedStartPickerValue, clone[0], pickerMode) || !isSame(generateConfig, locale, mergedEndPickerValue, clone[1], pickerMode))) {\n      onPickerValueChange(clone, {\n        source: source,\n        range: mergedActiveIndex === 1 ? 'end' : 'start',\n        mode: modes\n      });\n    }\n  };\n\n  // ======================== Effect ========================\n  /**\n   * EndDate pickerValue is little different. It should be:\n   * - If date picker (without time), endDate is not same year & month as startDate\n   *   - pickerValue minus one month\n   * - Else pass directly\n   */\n  var getEndDatePickerValue = function getEndDatePickerValue(startDate, endDate) {\n    if (multiplePanel) {\n      // Basic offset\n      var SAME_CHECKER = {\n        date: 'month',\n        week: 'month',\n        month: 'year',\n        quarter: 'year'\n      };\n      var mode = SAME_CHECKER[pickerMode];\n      if (mode && !isSame(generateConfig, locale, startDate, endDate, mode)) {\n        return offsetPanelDate(generateConfig, pickerMode, endDate, -1);\n      }\n\n      // Year offset\n      if (pickerMode === 'year') {\n        var srcYear = Math.floor(generateConfig.getYear(startDate) / 10);\n        var tgtYear = Math.floor(generateConfig.getYear(endDate) / 10);\n        if (srcYear !== tgtYear) {\n          return offsetPanelDate(generateConfig, pickerMode, endDate, -1);\n        }\n      }\n    }\n    return endDate;\n  };\n\n  // >>> When switch field, reset the picker value as prev field picker value\n  var prevActiveIndexRef = React.useRef(null);\n  useLayoutEffect(function () {\n    if (open) {\n      if (!defaultPickerValue[mergedActiveIndex]) {\n        var nextPickerValue = isTimePicker ? null : generateConfig.getNow();\n\n        /**\n         * 1. If has prevActiveIndex, use it to avoid panel jump\n         * 2. If current field has value\n         *    - If `activeIndex` is 1 and `calendarValue[0]` is not same panel as `calendarValue[1]`,\n         *      offset `calendarValue[1]` and set it\n         *    - Else use `calendarValue[activeIndex]`\n         * 3. If current field has no value but another field has value, use another field value\n         * 4. Else use now (not any `calendarValue` can ref)\n         */\n\n        if (prevActiveIndexRef.current !== null && prevActiveIndexRef.current !== mergedActiveIndex) {\n          // If from another field, not jump picker value\n          nextPickerValue = [mergedStartPickerValue, mergedEndPickerValue][mergedActiveIndex ^ 1];\n        } else if (calendarValue[mergedActiveIndex]) {\n          // Current field has value\n          nextPickerValue = mergedActiveIndex === 0 ? calendarValue[0] : getEndDatePickerValue(calendarValue[0], calendarValue[1]);\n        } else if (calendarValue[mergedActiveIndex ^ 1]) {\n          // Current field has no value but another field has value\n          nextPickerValue = calendarValue[mergedActiveIndex ^ 1];\n        }\n\n        // Only sync when has value, this will sync in the `min-max` logic\n        if (nextPickerValue) {\n          // nextPickerValue < minDate\n          if (minDate && generateConfig.isAfter(minDate, nextPickerValue)) {\n            nextPickerValue = minDate;\n          }\n\n          // maxDate < nextPickerValue\n          var offsetPickerValue = multiplePanel ? offsetPanelDate(generateConfig, pickerMode, nextPickerValue, 1) : nextPickerValue;\n          if (maxDate && generateConfig.isAfter(offsetPickerValue, maxDate)) {\n            nextPickerValue = multiplePanel ? offsetPanelDate(generateConfig, pickerMode, maxDate, -1) : maxDate;\n          }\n          setCurrentPickerValue(nextPickerValue, 'reset');\n        }\n      }\n    }\n  }, [open, mergedActiveIndex, calendarValue[mergedActiveIndex]]);\n\n  // >>> Reset prevActiveIndex when panel closed\n  React.useEffect(function () {\n    if (open) {\n      prevActiveIndexRef.current = mergedActiveIndex;\n    } else {\n      prevActiveIndexRef.current = null;\n    }\n  }, [open, mergedActiveIndex]);\n\n  // >>> defaultPickerValue: Resync to `defaultPickerValue` for each panel focused\n  useLayoutEffect(function () {\n    if (open && defaultPickerValue) {\n      if (defaultPickerValue[mergedActiveIndex]) {\n        setCurrentPickerValue(defaultPickerValue[mergedActiveIndex], 'reset');\n      }\n    }\n  }, [open, mergedActiveIndex]);\n  return [currentPickerValue, setCurrentPickerValue];\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}