{"ast":null,"code":"import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport { getRowFormat, pickProps, toArray } from \"../utils/miscUtil\";\nimport { fillTimeFormat } from \"./useLocale\";\n\nfunction checkShow(format, keywords, show) {\n  return show !== null && show !== void 0 ? show : keywords.some(function (keyword) {\n    return format.includes(keyword);\n  });\n}\n\nvar showTimeKeys = [// 'format',\n'showNow', 'showHour', 'showMinute', 'showSecond', 'showMillisecond', 'use12Hours', 'hourStep', 'minuteStep', 'secondStep', 'millisecondStep', 'hideDisabledOptions', 'defaultValue', 'disabledHours', 'disabledMinutes', 'disabledSeconds', 'disabledMilliseconds', 'disabledTime', 'changeOnScroll', 'defaultOpenValue'];\n/**\n * Get SharedTimeProps from props.\n */\n\nfunction pickTimeProps(props) {\n  var timeProps = pickProps(props, showTimeKeys);\n  var format = props.format,\n      picker = props.picker;\n  var propFormat = null;\n\n  if (format) {\n    propFormat = format;\n\n    if (Array.isArray(propFormat)) {\n      propFormat = propFormat[0];\n    }\n\n    propFormat = _typeof(propFormat) === 'object' ? propFormat.format : propFormat;\n  }\n\n  if (picker === 'time') {\n    timeProps.format = propFormat;\n  }\n\n  return [timeProps, propFormat];\n}\n\nfunction isStringFormat(format) {\n  return format && typeof format === 'string';\n}\n/**\n * Get `showHour`, `showMinute`, `showSecond` or other from the props.\n * This is pure function, will not get `showXXX` from the `format` prop.\n */\n\n\nexport function getTimeProps(componentProps) {\n  var showTime = componentProps.showTime;\n\n  var _pickTimeProps = pickTimeProps(componentProps),\n      _pickTimeProps2 = _slicedToArray(_pickTimeProps, 2),\n      pickedProps = _pickTimeProps2[0],\n      propFormat = _pickTimeProps2[1];\n\n  var showTimeConfig = showTime && _typeof(showTime) === 'object' ? showTime : {};\n\n  var timeConfig = _objectSpread(_objectSpread({\n    defaultOpenValue: showTimeConfig.defaultOpenValue || showTimeConfig.defaultValue\n  }, pickedProps), showTimeConfig);\n\n  var showMillisecond = timeConfig.showMillisecond;\n  var showHour = timeConfig.showHour,\n      showMinute = timeConfig.showMinute,\n      showSecond = timeConfig.showSecond;\n\n  if (!showHour && !showMinute && !showSecond && !showMillisecond) {\n    showHour = true;\n    showMinute = true;\n    showSecond = true;\n  }\n\n  return [timeConfig, _objectSpread(_objectSpread({}, timeConfig), {}, {\n    showHour: showHour,\n    showMinute: showMinute,\n    showSecond: showSecond,\n    showMillisecond: showMillisecond\n  }), timeConfig.format, propFormat];\n}\nexport function fillShowTimeConfig(picker, showTimeFormat, propFormat, timeConfig, locale) {\n  var isTimePicker = picker === 'time';\n\n  if (picker === 'datetime' || isTimePicker) {\n    var pickedProps = timeConfig; // ====================== BaseFormat ======================\n\n    var defaultLocaleFormat = getRowFormat(picker, locale, null);\n    var baselineFormat = defaultLocaleFormat;\n    var formatList = [showTimeFormat, propFormat];\n\n    for (var i = 0; i < formatList.length; i += 1) {\n      var format = toArray(formatList[i])[0];\n\n      if (isStringFormat(format)) {\n        baselineFormat = format;\n        break;\n      }\n    } // ========================= Show =========================\n\n\n    var showHour = pickedProps.showHour,\n        showMinute = pickedProps.showMinute,\n        showSecond = pickedProps.showSecond,\n        showMillisecond = pickedProps.showMillisecond;\n    var use12Hours = pickedProps.use12Hours;\n    var showMeridiem = checkShow(baselineFormat, ['a', 'A', 'LT', 'LLL', 'LTS'], use12Hours);\n    var hasShowConfig = [showHour, showMinute, showSecond, showMillisecond].some(function (show) {\n      return show !== undefined;\n    }); // Fill with format, if needed\n\n    if (!hasShowConfig) {\n      showHour = checkShow(baselineFormat, ['H', 'h', 'k', 'LT', 'LLL']);\n      showMinute = checkShow(baselineFormat, ['m', 'LT', 'LLL']);\n      showSecond = checkShow(baselineFormat, ['s', 'LTS']);\n      showMillisecond = checkShow(baselineFormat, ['SSS']);\n    } // Fallback if all can not see\n\n\n    if (!hasShowConfig && !showHour && !showMinute && !showSecond && !showMillisecond) {\n      showHour = true;\n      showMinute = true;\n      showSecond = true;\n    } // ======================== Format ========================\n\n\n    var timeFormat = showTimeFormat || fillTimeFormat(showHour, showMinute, showSecond, showMillisecond, showMeridiem); // ======================== Props =========================\n\n    return _objectSpread(_objectSpread({}, pickedProps), {}, {\n      // Format\n      format: timeFormat,\n      // Show Config\n      showHour: showHour,\n      showMinute: showMinute,\n      showSecond: showSecond,\n      showMillisecond: showMillisecond,\n      use12Hours: showMeridiem\n    });\n  }\n\n  return null;\n}","map":{"version":3,"names":["_objectSpread","_slicedToArray","_typeof","getRowFormat","pickProps","toArray","fillTimeFormat","checkShow","format","keywords","show","some","keyword","includes","showTimeKeys","pickTimeProps","props","timeProps","picker","propFormat","Array","isArray","isStringFormat","getTimeProps","componentProps","showTime","_pickTimeProps","_pickTimeProps2","pickedProps","showTimeConfig","timeConfig","defaultOpenValue","defaultValue","showMillisecond","showHour","showMinute","showSecond","fillShowTimeConfig","showTimeFormat","locale","isTimePicker","defaultLocaleFormat","baselineFormat","formatList","i","length","use12Hours","showMeridiem","hasShowConfig","undefined","timeFormat"],"sources":["/Users/joji/Documents/CODE/React/react-cutioluis/node_modules/rc-picker/es/hooks/useTimeConfig.js"],"sourcesContent":["import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport { getRowFormat, pickProps, toArray } from \"../utils/miscUtil\";\nimport { fillTimeFormat } from \"./useLocale\";\nfunction checkShow(format, keywords, show) {\n  return show !== null && show !== void 0 ? show : keywords.some(function (keyword) {\n    return format.includes(keyword);\n  });\n}\nvar showTimeKeys = [\n// 'format',\n'showNow', 'showHour', 'showMinute', 'showSecond', 'showMillisecond', 'use12Hours', 'hourStep', 'minuteStep', 'secondStep', 'millisecondStep', 'hideDisabledOptions', 'defaultValue', 'disabledHours', 'disabledMinutes', 'disabledSeconds', 'disabledMilliseconds', 'disabledTime', 'changeOnScroll', 'defaultOpenValue'];\n\n/**\n * Get SharedTimeProps from props.\n */\nfunction pickTimeProps(props) {\n  var timeProps = pickProps(props, showTimeKeys);\n  var format = props.format,\n    picker = props.picker;\n  var propFormat = null;\n  if (format) {\n    propFormat = format;\n    if (Array.isArray(propFormat)) {\n      propFormat = propFormat[0];\n    }\n    propFormat = _typeof(propFormat) === 'object' ? propFormat.format : propFormat;\n  }\n  if (picker === 'time') {\n    timeProps.format = propFormat;\n  }\n  return [timeProps, propFormat];\n}\nfunction isStringFormat(format) {\n  return format && typeof format === 'string';\n}\n/**\n * Get `showHour`, `showMinute`, `showSecond` or other from the props.\n * This is pure function, will not get `showXXX` from the `format` prop.\n */\nexport function getTimeProps(componentProps) {\n  var showTime = componentProps.showTime;\n  var _pickTimeProps = pickTimeProps(componentProps),\n    _pickTimeProps2 = _slicedToArray(_pickTimeProps, 2),\n    pickedProps = _pickTimeProps2[0],\n    propFormat = _pickTimeProps2[1];\n  var showTimeConfig = showTime && _typeof(showTime) === 'object' ? showTime : {};\n  var timeConfig = _objectSpread(_objectSpread({\n    defaultOpenValue: showTimeConfig.defaultOpenValue || showTimeConfig.defaultValue\n  }, pickedProps), showTimeConfig);\n  var showMillisecond = timeConfig.showMillisecond;\n  var showHour = timeConfig.showHour,\n    showMinute = timeConfig.showMinute,\n    showSecond = timeConfig.showSecond;\n  if (!showHour && !showMinute && !showSecond && !showMillisecond) {\n    showHour = true;\n    showMinute = true;\n    showSecond = true;\n  }\n  return [timeConfig, _objectSpread(_objectSpread({}, timeConfig), {}, {\n    showHour: showHour,\n    showMinute: showMinute,\n    showSecond: showSecond,\n    showMillisecond: showMillisecond\n  }), timeConfig.format, propFormat];\n}\nexport function fillShowTimeConfig(picker, showTimeFormat, propFormat, timeConfig, locale) {\n  var isTimePicker = picker === 'time';\n  if (picker === 'datetime' || isTimePicker) {\n    var pickedProps = timeConfig;\n\n    // ====================== BaseFormat ======================\n    var defaultLocaleFormat = getRowFormat(picker, locale, null);\n    var baselineFormat = defaultLocaleFormat;\n    var formatList = [showTimeFormat, propFormat];\n    for (var i = 0; i < formatList.length; i += 1) {\n      var format = toArray(formatList[i])[0];\n      if (isStringFormat(format)) {\n        baselineFormat = format;\n        break;\n      }\n    }\n\n    // ========================= Show =========================\n    var showHour = pickedProps.showHour,\n      showMinute = pickedProps.showMinute,\n      showSecond = pickedProps.showSecond,\n      showMillisecond = pickedProps.showMillisecond;\n    var use12Hours = pickedProps.use12Hours;\n    var showMeridiem = checkShow(baselineFormat, ['a', 'A', 'LT', 'LLL', 'LTS'], use12Hours);\n    var hasShowConfig = [showHour, showMinute, showSecond, showMillisecond].some(function (show) {\n      return show !== undefined;\n    });\n\n    // Fill with format, if needed\n    if (!hasShowConfig) {\n      showHour = checkShow(baselineFormat, ['H', 'h', 'k', 'LT', 'LLL']);\n      showMinute = checkShow(baselineFormat, ['m', 'LT', 'LLL']);\n      showSecond = checkShow(baselineFormat, ['s', 'LTS']);\n      showMillisecond = checkShow(baselineFormat, ['SSS']);\n    }\n\n    // Fallback if all can not see\n    if (!hasShowConfig && !showHour && !showMinute && !showSecond && !showMillisecond) {\n      showHour = true;\n      showMinute = true;\n      showSecond = true;\n    }\n\n    // ======================== Format ========================\n    var timeFormat = showTimeFormat || fillTimeFormat(showHour, showMinute, showSecond, showMillisecond, showMeridiem);\n\n    // ======================== Props =========================\n    return _objectSpread(_objectSpread({}, pickedProps), {}, {\n      // Format\n      format: timeFormat,\n      // Show Config\n      showHour: showHour,\n      showMinute: showMinute,\n      showSecond: showSecond,\n      showMillisecond: showMillisecond,\n      use12Hours: showMeridiem\n    });\n  }\n  return null;\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}