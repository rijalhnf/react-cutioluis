{"ast":null,"code":"\"use client\";\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport * as React from 'react';\nimport EditOutlined from \"@ant-design/icons/es/icons/EditOutlined\";\nimport classNames from 'classnames';\nimport copy from 'copy-to-clipboard';\nimport ResizeObserver from 'rc-resize-observer';\nimport toArray from \"rc-util/es/Children/toArray\";\nimport useIsomorphicLayoutEffect from \"rc-util/es/hooks/useLayoutEffect\";\nimport useMergedState from \"rc-util/es/hooks/useMergedState\";\nimport omit from \"rc-util/es/omit\";\nimport { composeRef } from \"rc-util/es/ref\";\nimport { isStyleSupport } from '../../_util/styleChecker';\nimport TransButton from '../../_util/transButton';\nimport { ConfigContext } from '../../config-provider';\nimport useLocale from '../../locale/useLocale';\nimport Tooltip from '../../tooltip';\nimport Editable from '../Editable';\nimport useMergedConfig from '../hooks/useMergedConfig';\nimport useUpdatedEffect from '../hooks/useUpdatedEffect';\nimport Typography from '../Typography';\nimport CopyBtn from './CopyBtn';\nimport Ellipsis from './Ellipsis';\nimport EllipsisTooltip from './EllipsisTooltip';\n\nfunction wrapperDecorations(_ref, content) {\n  let {\n    mark,\n    code,\n    underline,\n    delete: del,\n    strong,\n    keyboard,\n    italic\n  } = _ref;\n  let currentContent = content;\n\n  function wrap(tag, needed) {\n    if (!needed) {\n      return;\n    }\n\n    currentContent = /*#__PURE__*/React.createElement(tag, {}, currentContent);\n  }\n\n  wrap('strong', strong);\n  wrap('u', underline);\n  wrap('del', del);\n  wrap('code', code);\n  wrap('mark', mark);\n  wrap('kbd', keyboard);\n  wrap('i', italic);\n  return currentContent;\n}\n\nconst ELLIPSIS_STR = '...';\nconst Base = /*#__PURE__*/React.forwardRef((props, ref) => {\n  var _a, _b, _c;\n\n  const {\n    prefixCls: customizePrefixCls,\n    className,\n    style,\n    type,\n    disabled,\n    children,\n    ellipsis,\n    editable,\n    copyable,\n    component,\n    title\n  } = props,\n        restProps = __rest(props, [\"prefixCls\", \"className\", \"style\", \"type\", \"disabled\", \"children\", \"ellipsis\", \"editable\", \"copyable\", \"component\", \"title\"]);\n\n  const {\n    getPrefixCls,\n    direction\n  } = React.useContext(ConfigContext);\n  const [textLocale] = useLocale('Text');\n  const typographyRef = React.useRef(null);\n  const editIconRef = React.useRef(null); // ============================ MISC ============================\n\n  const prefixCls = getPrefixCls('typography', customizePrefixCls);\n  const textProps = omit(restProps, ['mark', 'code', 'delete', 'underline', 'strong', 'keyboard', 'italic']); // ========================== Editable ==========================\n\n  const [enableEdit, editConfig] = useMergedConfig(editable);\n  const [editing, setEditing] = useMergedState(false, {\n    value: editConfig.editing\n  });\n  const {\n    triggerType = ['icon']\n  } = editConfig;\n\n  const triggerEdit = edit => {\n    var _a;\n\n    if (edit) {\n      (_a = editConfig.onStart) === null || _a === void 0 ? void 0 : _a.call(editConfig);\n    }\n\n    setEditing(edit);\n  }; // Focus edit icon when back\n\n\n  useUpdatedEffect(() => {\n    var _a;\n\n    if (!editing) {\n      (_a = editIconRef.current) === null || _a === void 0 ? void 0 : _a.focus();\n    }\n  }, [editing]);\n\n  const onEditClick = e => {\n    e === null || e === void 0 ? void 0 : e.preventDefault();\n    triggerEdit(true);\n  };\n\n  const onEditChange = value => {\n    var _a;\n\n    (_a = editConfig.onChange) === null || _a === void 0 ? void 0 : _a.call(editConfig, value);\n    triggerEdit(false);\n  };\n\n  const onEditCancel = () => {\n    var _a;\n\n    (_a = editConfig.onCancel) === null || _a === void 0 ? void 0 : _a.call(editConfig);\n    triggerEdit(false);\n  }; // ========================== Copyable ==========================\n\n\n  const [enableCopy, copyConfig] = useMergedConfig(copyable);\n  const [copied, setCopied] = React.useState(false);\n  const copyIdRef = React.useRef(null);\n  const copyOptions = {};\n\n  if (copyConfig.format) {\n    copyOptions.format = copyConfig.format;\n  }\n\n  const cleanCopyId = () => {\n    if (copyIdRef.current) {\n      clearTimeout(copyIdRef.current);\n    }\n  };\n\n  const onCopyClick = e => {\n    var _a;\n\n    e === null || e === void 0 ? void 0 : e.preventDefault();\n    e === null || e === void 0 ? void 0 : e.stopPropagation();\n    copy(copyConfig.text || String(children) || '', copyOptions);\n    setCopied(true); // Trigger tips update\n\n    cleanCopyId();\n    copyIdRef.current = setTimeout(() => {\n      setCopied(false);\n    }, 3000);\n    (_a = copyConfig.onCopy) === null || _a === void 0 ? void 0 : _a.call(copyConfig, e);\n  };\n\n  React.useEffect(() => cleanCopyId, []); // ========================== Ellipsis ==========================\n\n  const [isLineClampSupport, setIsLineClampSupport] = React.useState(false);\n  const [isTextOverflowSupport, setIsTextOverflowSupport] = React.useState(false);\n  const [expanded, setExpanded] = React.useState(false);\n  const [isJsEllipsis, setIsJsEllipsis] = React.useState(false);\n  const [isNativeEllipsis, setIsNativeEllipsis] = React.useState(false);\n  const [isNativeVisible, setIsNativeVisible] = React.useState(true);\n  const [enableEllipsis, ellipsisConfig] = useMergedConfig(ellipsis, {\n    expandable: false\n  });\n  const mergedEnableEllipsis = enableEllipsis && !expanded; // Shared prop to reduce bundle size\n\n  const {\n    rows = 1\n  } = ellipsisConfig;\n  const needMeasureEllipsis = React.useMemo(() => // Disable ellipsis\n  !mergedEnableEllipsis || // Provide suffix\n  ellipsisConfig.suffix !== undefined || ellipsisConfig.onEllipsis || // Can't use css ellipsis since we need to provide the place for button\n  ellipsisConfig.expandable || enableEdit || enableCopy, [mergedEnableEllipsis, ellipsisConfig, enableEdit, enableCopy]);\n  useIsomorphicLayoutEffect(() => {\n    if (enableEllipsis && !needMeasureEllipsis) {\n      setIsLineClampSupport(isStyleSupport('webkitLineClamp'));\n      setIsTextOverflowSupport(isStyleSupport('textOverflow'));\n    }\n  }, [needMeasureEllipsis, enableEllipsis]);\n  const cssEllipsis = React.useMemo(() => {\n    if (needMeasureEllipsis) {\n      return false;\n    }\n\n    if (rows === 1) {\n      return isTextOverflowSupport;\n    }\n\n    return isLineClampSupport;\n  }, [needMeasureEllipsis, isTextOverflowSupport, isLineClampSupport]);\n  const isMergedEllipsis = mergedEnableEllipsis && (cssEllipsis ? isNativeEllipsis : isJsEllipsis);\n  const cssTextOverflow = mergedEnableEllipsis && rows === 1 && cssEllipsis;\n  const cssLineClamp = mergedEnableEllipsis && rows > 1 && cssEllipsis; // >>>>> Expand\n\n  const onExpandClick = e => {\n    var _a;\n\n    setExpanded(true);\n    (_a = ellipsisConfig.onExpand) === null || _a === void 0 ? void 0 : _a.call(ellipsisConfig, e);\n  };\n\n  const [ellipsisWidth, setEllipsisWidth] = React.useState(0);\n\n  const onResize = _ref2 => {\n    let {\n      offsetWidth\n    } = _ref2;\n    setEllipsisWidth(offsetWidth);\n  }; // >>>>> JS Ellipsis\n\n\n  const onJsEllipsis = jsEllipsis => {\n    var _a;\n\n    setIsJsEllipsis(jsEllipsis); // Trigger if changed\n\n    if (isJsEllipsis !== jsEllipsis) {\n      (_a = ellipsisConfig.onEllipsis) === null || _a === void 0 ? void 0 : _a.call(ellipsisConfig, jsEllipsis);\n    }\n  }; // >>>>> Native ellipsis\n\n\n  React.useEffect(() => {\n    const textEle = typographyRef.current;\n\n    if (enableEllipsis && cssEllipsis && textEle) {\n      const currentEllipsis = cssLineClamp ? textEle.offsetHeight < textEle.scrollHeight : textEle.offsetWidth < textEle.scrollWidth;\n\n      if (isNativeEllipsis !== currentEllipsis) {\n        setIsNativeEllipsis(currentEllipsis);\n      }\n    }\n  }, [enableEllipsis, cssEllipsis, children, cssLineClamp, isNativeVisible, ellipsisWidth]); // https://github.com/ant-design/ant-design/issues/36786\n  // Use IntersectionObserver to check if element is invisible\n\n  React.useEffect(() => {\n    const textEle = typographyRef.current;\n\n    if (typeof IntersectionObserver === 'undefined' || !textEle || !cssEllipsis || !mergedEnableEllipsis) {\n      return;\n    }\n    /* eslint-disable-next-line compat/compat */\n\n\n    const observer = new IntersectionObserver(() => {\n      setIsNativeVisible(!!textEle.offsetParent);\n    });\n    observer.observe(textEle);\n    return () => {\n      observer.disconnect();\n    };\n  }, [cssEllipsis, mergedEnableEllipsis]); // ========================== Tooltip ===========================\n\n  let tooltipProps = {};\n\n  if (ellipsisConfig.tooltip === true) {\n    tooltipProps = {\n      title: (_a = editConfig.text) !== null && _a !== void 0 ? _a : children\n    };\n  } else if ( /*#__PURE__*/React.isValidElement(ellipsisConfig.tooltip)) {\n    tooltipProps = {\n      title: ellipsisConfig.tooltip\n    };\n  } else if (typeof ellipsisConfig.tooltip === 'object') {\n    tooltipProps = Object.assign({\n      title: (_b = editConfig.text) !== null && _b !== void 0 ? _b : children\n    }, ellipsisConfig.tooltip);\n  } else {\n    tooltipProps = {\n      title: ellipsisConfig.tooltip\n    };\n  }\n\n  const topAriaLabel = React.useMemo(() => {\n    const isValid = val => ['string', 'number'].includes(typeof val);\n\n    if (!enableEllipsis || cssEllipsis) {\n      return undefined;\n    }\n\n    if (isValid(editConfig.text)) {\n      return editConfig.text;\n    }\n\n    if (isValid(children)) {\n      return children;\n    }\n\n    if (isValid(title)) {\n      return title;\n    }\n\n    if (isValid(tooltipProps.title)) {\n      return tooltipProps.title;\n    }\n\n    return undefined;\n  }, [enableEllipsis, cssEllipsis, title, tooltipProps.title, isMergedEllipsis]); // =========================== Render ===========================\n  // >>>>>>>>>>> Editing input\n\n  if (editing) {\n    return /*#__PURE__*/React.createElement(Editable, {\n      value: (_c = editConfig.text) !== null && _c !== void 0 ? _c : typeof children === 'string' ? children : '',\n      onSave: onEditChange,\n      onCancel: onEditCancel,\n      onEnd: editConfig.onEnd,\n      prefixCls: prefixCls,\n      className: className,\n      style: style,\n      direction: direction,\n      component: component,\n      maxLength: editConfig.maxLength,\n      autoSize: editConfig.autoSize,\n      enterIcon: editConfig.enterIcon\n    });\n  } // >>>>>>>>>>> Typography\n  // Expand\n\n\n  const renderExpand = () => {\n    const {\n      expandable,\n      symbol\n    } = ellipsisConfig;\n    if (!expandable) return null;\n    let expandContent;\n\n    if (symbol) {\n      expandContent = symbol;\n    } else {\n      expandContent = textLocale === null || textLocale === void 0 ? void 0 : textLocale.expand;\n    }\n\n    return /*#__PURE__*/React.createElement(\"a\", {\n      key: \"expand\",\n      className: `${prefixCls}-expand`,\n      onClick: onExpandClick,\n      \"aria-label\": textLocale === null || textLocale === void 0 ? void 0 : textLocale.expand\n    }, expandContent);\n  }; // Edit\n\n\n  const renderEdit = () => {\n    if (!enableEdit) return;\n    const {\n      icon,\n      tooltip\n    } = editConfig;\n    const editTitle = toArray(tooltip)[0] || (textLocale === null || textLocale === void 0 ? void 0 : textLocale.edit);\n    const ariaLabel = typeof editTitle === 'string' ? editTitle : '';\n    return triggerType.includes('icon') ? /*#__PURE__*/React.createElement(Tooltip, {\n      key: \"edit\",\n      title: tooltip === false ? '' : editTitle\n    }, /*#__PURE__*/React.createElement(TransButton, {\n      ref: editIconRef,\n      className: `${prefixCls}-edit`,\n      onClick: onEditClick,\n      \"aria-label\": ariaLabel\n    }, icon || /*#__PURE__*/React.createElement(EditOutlined, {\n      role: \"button\"\n    }))) : null;\n  }; // Copy\n\n\n  const renderCopy = () => {\n    if (!enableCopy) {\n      return null;\n    }\n\n    return /*#__PURE__*/React.createElement(CopyBtn, Object.assign({\n      key: \"copy\"\n    }, copyConfig, {\n      prefixCls: prefixCls,\n      copied: copied,\n      locale: textLocale,\n      onCopy: onCopyClick,\n      iconOnly: children === null || children === undefined\n    }));\n  };\n\n  const renderOperations = renderExpanded => [renderExpanded && renderExpand(), renderEdit(), renderCopy()];\n\n  const renderEllipsis = needEllipsis => [needEllipsis && /*#__PURE__*/React.createElement(\"span\", {\n    \"aria-hidden\": true,\n    key: \"ellipsis\"\n  }, ELLIPSIS_STR), ellipsisConfig.suffix, renderOperations(needEllipsis)];\n\n  return /*#__PURE__*/React.createElement(ResizeObserver, {\n    onResize: onResize,\n    disabled: !mergedEnableEllipsis\n  }, resizeRef => /*#__PURE__*/React.createElement(EllipsisTooltip, {\n    tooltipProps: tooltipProps,\n    enabledEllipsis: mergedEnableEllipsis,\n    isEllipsis: isMergedEllipsis\n  }, /*#__PURE__*/React.createElement(Typography, Object.assign({\n    className: classNames({\n      [`${prefixCls}-${type}`]: type,\n      [`${prefixCls}-disabled`]: disabled,\n      [`${prefixCls}-ellipsis`]: enableEllipsis,\n      [`${prefixCls}-single-line`]: mergedEnableEllipsis && rows === 1,\n      [`${prefixCls}-ellipsis-single-line`]: cssTextOverflow,\n      [`${prefixCls}-ellipsis-multiple-line`]: cssLineClamp\n    }, className),\n    prefixCls: customizePrefixCls,\n    style: Object.assign(Object.assign({}, style), {\n      WebkitLineClamp: cssLineClamp ? rows : undefined\n    }),\n    component: component,\n    ref: composeRef(resizeRef, typographyRef, ref),\n    direction: direction,\n    onClick: triggerType.includes('text') ? onEditClick : undefined,\n    \"aria-label\": topAriaLabel === null || topAriaLabel === void 0 ? void 0 : topAriaLabel.toString(),\n    title: title\n  }, textProps), /*#__PURE__*/React.createElement(Ellipsis, {\n    enabledMeasure: mergedEnableEllipsis && !cssEllipsis,\n    text: children,\n    rows: rows,\n    width: ellipsisWidth,\n    onEllipsis: onJsEllipsis,\n    miscDeps: [copied, expanded]\n  }, (node, needEllipsis) => {\n    let renderNode = node;\n\n    if (node.length && needEllipsis && topAriaLabel) {\n      renderNode = /*#__PURE__*/React.createElement(\"span\", {\n        key: \"show-content\",\n        \"aria-hidden\": true\n      }, renderNode);\n    }\n\n    const wrappedContext = wrapperDecorations(props, /*#__PURE__*/React.createElement(React.Fragment, null, renderNode, renderEllipsis(needEllipsis)));\n    return wrappedContext;\n  }))));\n});\nexport default Base;","map":{"version":3,"names":["__rest","s","e","t","p","Object","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","length","propertyIsEnumerable","React","EditOutlined","classNames","copy","ResizeObserver","toArray","useIsomorphicLayoutEffect","useMergedState","omit","composeRef","isStyleSupport","TransButton","ConfigContext","useLocale","Tooltip","Editable","useMergedConfig","useUpdatedEffect","Typography","CopyBtn","Ellipsis","EllipsisTooltip","wrapperDecorations","_ref","content","mark","code","underline","delete","del","strong","keyboard","italic","currentContent","wrap","tag","needed","createElement","ELLIPSIS_STR","Base","forwardRef","props","ref","_a","_b","_c","prefixCls","customizePrefixCls","className","style","type","disabled","children","ellipsis","editable","copyable","component","title","restProps","getPrefixCls","direction","useContext","textLocale","typographyRef","useRef","editIconRef","textProps","enableEdit","editConfig","editing","setEditing","value","triggerType","triggerEdit","edit","onStart","current","focus","onEditClick","preventDefault","onEditChange","onChange","onEditCancel","onCancel","enableCopy","copyConfig","copied","setCopied","useState","copyIdRef","copyOptions","format","cleanCopyId","clearTimeout","onCopyClick","stopPropagation","text","String","setTimeout","onCopy","useEffect","isLineClampSupport","setIsLineClampSupport","isTextOverflowSupport","setIsTextOverflowSupport","expanded","setExpanded","isJsEllipsis","setIsJsEllipsis","isNativeEllipsis","setIsNativeEllipsis","isNativeVisible","setIsNativeVisible","enableEllipsis","ellipsisConfig","expandable","mergedEnableEllipsis","rows","needMeasureEllipsis","useMemo","suffix","undefined","onEllipsis","cssEllipsis","isMergedEllipsis","cssTextOverflow","cssLineClamp","onExpandClick","onExpand","ellipsisWidth","setEllipsisWidth","onResize","_ref2","offsetWidth","onJsEllipsis","jsEllipsis","textEle","currentEllipsis","offsetHeight","scrollHeight","scrollWidth","IntersectionObserver","observer","offsetParent","observe","disconnect","tooltipProps","tooltip","isValidElement","assign","topAriaLabel","isValid","val","includes","onSave","onEnd","maxLength","autoSize","enterIcon","renderExpand","symbol","expandContent","expand","key","onClick","renderEdit","icon","editTitle","ariaLabel","role","renderCopy","locale","iconOnly","renderOperations","renderExpanded","renderEllipsis","needEllipsis","resizeRef","enabledEllipsis","isEllipsis","WebkitLineClamp","toString","enabledMeasure","width","miscDeps","node","renderNode","wrappedContext","Fragment"],"sources":["/Users/joji/Downloads/react-cutioluis-main copy/node_modules/antd/es/typography/Base/index.js"],"sourcesContent":["\"use client\";\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport * as React from 'react';\nimport EditOutlined from \"@ant-design/icons/es/icons/EditOutlined\";\nimport classNames from 'classnames';\nimport copy from 'copy-to-clipboard';\nimport ResizeObserver from 'rc-resize-observer';\nimport toArray from \"rc-util/es/Children/toArray\";\nimport useIsomorphicLayoutEffect from \"rc-util/es/hooks/useLayoutEffect\";\nimport useMergedState from \"rc-util/es/hooks/useMergedState\";\nimport omit from \"rc-util/es/omit\";\nimport { composeRef } from \"rc-util/es/ref\";\nimport { isStyleSupport } from '../../_util/styleChecker';\nimport TransButton from '../../_util/transButton';\nimport { ConfigContext } from '../../config-provider';\nimport useLocale from '../../locale/useLocale';\nimport Tooltip from '../../tooltip';\nimport Editable from '../Editable';\nimport useMergedConfig from '../hooks/useMergedConfig';\nimport useUpdatedEffect from '../hooks/useUpdatedEffect';\nimport Typography from '../Typography';\nimport CopyBtn from './CopyBtn';\nimport Ellipsis from './Ellipsis';\nimport EllipsisTooltip from './EllipsisTooltip';\nfunction wrapperDecorations(_ref, content) {\n  let {\n    mark,\n    code,\n    underline,\n    delete: del,\n    strong,\n    keyboard,\n    italic\n  } = _ref;\n  let currentContent = content;\n  function wrap(tag, needed) {\n    if (!needed) {\n      return;\n    }\n    currentContent = /*#__PURE__*/React.createElement(tag, {}, currentContent);\n  }\n  wrap('strong', strong);\n  wrap('u', underline);\n  wrap('del', del);\n  wrap('code', code);\n  wrap('mark', mark);\n  wrap('kbd', keyboard);\n  wrap('i', italic);\n  return currentContent;\n}\nconst ELLIPSIS_STR = '...';\nconst Base = /*#__PURE__*/React.forwardRef((props, ref) => {\n  var _a, _b, _c;\n  const {\n      prefixCls: customizePrefixCls,\n      className,\n      style,\n      type,\n      disabled,\n      children,\n      ellipsis,\n      editable,\n      copyable,\n      component,\n      title\n    } = props,\n    restProps = __rest(props, [\"prefixCls\", \"className\", \"style\", \"type\", \"disabled\", \"children\", \"ellipsis\", \"editable\", \"copyable\", \"component\", \"title\"]);\n  const {\n    getPrefixCls,\n    direction\n  } = React.useContext(ConfigContext);\n  const [textLocale] = useLocale('Text');\n  const typographyRef = React.useRef(null);\n  const editIconRef = React.useRef(null);\n  // ============================ MISC ============================\n  const prefixCls = getPrefixCls('typography', customizePrefixCls);\n  const textProps = omit(restProps, ['mark', 'code', 'delete', 'underline', 'strong', 'keyboard', 'italic']);\n  // ========================== Editable ==========================\n  const [enableEdit, editConfig] = useMergedConfig(editable);\n  const [editing, setEditing] = useMergedState(false, {\n    value: editConfig.editing\n  });\n  const {\n    triggerType = ['icon']\n  } = editConfig;\n  const triggerEdit = edit => {\n    var _a;\n    if (edit) {\n      (_a = editConfig.onStart) === null || _a === void 0 ? void 0 : _a.call(editConfig);\n    }\n    setEditing(edit);\n  };\n  // Focus edit icon when back\n  useUpdatedEffect(() => {\n    var _a;\n    if (!editing) {\n      (_a = editIconRef.current) === null || _a === void 0 ? void 0 : _a.focus();\n    }\n  }, [editing]);\n  const onEditClick = e => {\n    e === null || e === void 0 ? void 0 : e.preventDefault();\n    triggerEdit(true);\n  };\n  const onEditChange = value => {\n    var _a;\n    (_a = editConfig.onChange) === null || _a === void 0 ? void 0 : _a.call(editConfig, value);\n    triggerEdit(false);\n  };\n  const onEditCancel = () => {\n    var _a;\n    (_a = editConfig.onCancel) === null || _a === void 0 ? void 0 : _a.call(editConfig);\n    triggerEdit(false);\n  };\n  // ========================== Copyable ==========================\n  const [enableCopy, copyConfig] = useMergedConfig(copyable);\n  const [copied, setCopied] = React.useState(false);\n  const copyIdRef = React.useRef(null);\n  const copyOptions = {};\n  if (copyConfig.format) {\n    copyOptions.format = copyConfig.format;\n  }\n  const cleanCopyId = () => {\n    if (copyIdRef.current) {\n      clearTimeout(copyIdRef.current);\n    }\n  };\n  const onCopyClick = e => {\n    var _a;\n    e === null || e === void 0 ? void 0 : e.preventDefault();\n    e === null || e === void 0 ? void 0 : e.stopPropagation();\n    copy(copyConfig.text || String(children) || '', copyOptions);\n    setCopied(true);\n    // Trigger tips update\n    cleanCopyId();\n    copyIdRef.current = setTimeout(() => {\n      setCopied(false);\n    }, 3000);\n    (_a = copyConfig.onCopy) === null || _a === void 0 ? void 0 : _a.call(copyConfig, e);\n  };\n  React.useEffect(() => cleanCopyId, []);\n  // ========================== Ellipsis ==========================\n  const [isLineClampSupport, setIsLineClampSupport] = React.useState(false);\n  const [isTextOverflowSupport, setIsTextOverflowSupport] = React.useState(false);\n  const [expanded, setExpanded] = React.useState(false);\n  const [isJsEllipsis, setIsJsEllipsis] = React.useState(false);\n  const [isNativeEllipsis, setIsNativeEllipsis] = React.useState(false);\n  const [isNativeVisible, setIsNativeVisible] = React.useState(true);\n  const [enableEllipsis, ellipsisConfig] = useMergedConfig(ellipsis, {\n    expandable: false\n  });\n  const mergedEnableEllipsis = enableEllipsis && !expanded;\n  // Shared prop to reduce bundle size\n  const {\n    rows = 1\n  } = ellipsisConfig;\n  const needMeasureEllipsis = React.useMemo(() =>\n  // Disable ellipsis\n  !mergedEnableEllipsis ||\n  // Provide suffix\n  ellipsisConfig.suffix !== undefined || ellipsisConfig.onEllipsis ||\n  // Can't use css ellipsis since we need to provide the place for button\n  ellipsisConfig.expandable || enableEdit || enableCopy, [mergedEnableEllipsis, ellipsisConfig, enableEdit, enableCopy]);\n  useIsomorphicLayoutEffect(() => {\n    if (enableEllipsis && !needMeasureEllipsis) {\n      setIsLineClampSupport(isStyleSupport('webkitLineClamp'));\n      setIsTextOverflowSupport(isStyleSupport('textOverflow'));\n    }\n  }, [needMeasureEllipsis, enableEllipsis]);\n  const cssEllipsis = React.useMemo(() => {\n    if (needMeasureEllipsis) {\n      return false;\n    }\n    if (rows === 1) {\n      return isTextOverflowSupport;\n    }\n    return isLineClampSupport;\n  }, [needMeasureEllipsis, isTextOverflowSupport, isLineClampSupport]);\n  const isMergedEllipsis = mergedEnableEllipsis && (cssEllipsis ? isNativeEllipsis : isJsEllipsis);\n  const cssTextOverflow = mergedEnableEllipsis && rows === 1 && cssEllipsis;\n  const cssLineClamp = mergedEnableEllipsis && rows > 1 && cssEllipsis;\n  // >>>>> Expand\n  const onExpandClick = e => {\n    var _a;\n    setExpanded(true);\n    (_a = ellipsisConfig.onExpand) === null || _a === void 0 ? void 0 : _a.call(ellipsisConfig, e);\n  };\n  const [ellipsisWidth, setEllipsisWidth] = React.useState(0);\n  const onResize = _ref2 => {\n    let {\n      offsetWidth\n    } = _ref2;\n    setEllipsisWidth(offsetWidth);\n  };\n  // >>>>> JS Ellipsis\n  const onJsEllipsis = jsEllipsis => {\n    var _a;\n    setIsJsEllipsis(jsEllipsis);\n    // Trigger if changed\n    if (isJsEllipsis !== jsEllipsis) {\n      (_a = ellipsisConfig.onEllipsis) === null || _a === void 0 ? void 0 : _a.call(ellipsisConfig, jsEllipsis);\n    }\n  };\n  // >>>>> Native ellipsis\n  React.useEffect(() => {\n    const textEle = typographyRef.current;\n    if (enableEllipsis && cssEllipsis && textEle) {\n      const currentEllipsis = cssLineClamp ? textEle.offsetHeight < textEle.scrollHeight : textEle.offsetWidth < textEle.scrollWidth;\n      if (isNativeEllipsis !== currentEllipsis) {\n        setIsNativeEllipsis(currentEllipsis);\n      }\n    }\n  }, [enableEllipsis, cssEllipsis, children, cssLineClamp, isNativeVisible, ellipsisWidth]);\n  // https://github.com/ant-design/ant-design/issues/36786\n  // Use IntersectionObserver to check if element is invisible\n  React.useEffect(() => {\n    const textEle = typographyRef.current;\n    if (typeof IntersectionObserver === 'undefined' || !textEle || !cssEllipsis || !mergedEnableEllipsis) {\n      return;\n    }\n    /* eslint-disable-next-line compat/compat */\n    const observer = new IntersectionObserver(() => {\n      setIsNativeVisible(!!textEle.offsetParent);\n    });\n    observer.observe(textEle);\n    return () => {\n      observer.disconnect();\n    };\n  }, [cssEllipsis, mergedEnableEllipsis]);\n  // ========================== Tooltip ===========================\n  let tooltipProps = {};\n  if (ellipsisConfig.tooltip === true) {\n    tooltipProps = {\n      title: (_a = editConfig.text) !== null && _a !== void 0 ? _a : children\n    };\n  } else if ( /*#__PURE__*/React.isValidElement(ellipsisConfig.tooltip)) {\n    tooltipProps = {\n      title: ellipsisConfig.tooltip\n    };\n  } else if (typeof ellipsisConfig.tooltip === 'object') {\n    tooltipProps = Object.assign({\n      title: (_b = editConfig.text) !== null && _b !== void 0 ? _b : children\n    }, ellipsisConfig.tooltip);\n  } else {\n    tooltipProps = {\n      title: ellipsisConfig.tooltip\n    };\n  }\n  const topAriaLabel = React.useMemo(() => {\n    const isValid = val => ['string', 'number'].includes(typeof val);\n    if (!enableEllipsis || cssEllipsis) {\n      return undefined;\n    }\n    if (isValid(editConfig.text)) {\n      return editConfig.text;\n    }\n    if (isValid(children)) {\n      return children;\n    }\n    if (isValid(title)) {\n      return title;\n    }\n    if (isValid(tooltipProps.title)) {\n      return tooltipProps.title;\n    }\n    return undefined;\n  }, [enableEllipsis, cssEllipsis, title, tooltipProps.title, isMergedEllipsis]);\n  // =========================== Render ===========================\n  // >>>>>>>>>>> Editing input\n  if (editing) {\n    return /*#__PURE__*/React.createElement(Editable, {\n      value: (_c = editConfig.text) !== null && _c !== void 0 ? _c : typeof children === 'string' ? children : '',\n      onSave: onEditChange,\n      onCancel: onEditCancel,\n      onEnd: editConfig.onEnd,\n      prefixCls: prefixCls,\n      className: className,\n      style: style,\n      direction: direction,\n      component: component,\n      maxLength: editConfig.maxLength,\n      autoSize: editConfig.autoSize,\n      enterIcon: editConfig.enterIcon\n    });\n  }\n  // >>>>>>>>>>> Typography\n  // Expand\n  const renderExpand = () => {\n    const {\n      expandable,\n      symbol\n    } = ellipsisConfig;\n    if (!expandable) return null;\n    let expandContent;\n    if (symbol) {\n      expandContent = symbol;\n    } else {\n      expandContent = textLocale === null || textLocale === void 0 ? void 0 : textLocale.expand;\n    }\n    return /*#__PURE__*/React.createElement(\"a\", {\n      key: \"expand\",\n      className: `${prefixCls}-expand`,\n      onClick: onExpandClick,\n      \"aria-label\": textLocale === null || textLocale === void 0 ? void 0 : textLocale.expand\n    }, expandContent);\n  };\n  // Edit\n  const renderEdit = () => {\n    if (!enableEdit) return;\n    const {\n      icon,\n      tooltip\n    } = editConfig;\n    const editTitle = toArray(tooltip)[0] || (textLocale === null || textLocale === void 0 ? void 0 : textLocale.edit);\n    const ariaLabel = typeof editTitle === 'string' ? editTitle : '';\n    return triggerType.includes('icon') ? ( /*#__PURE__*/React.createElement(Tooltip, {\n      key: \"edit\",\n      title: tooltip === false ? '' : editTitle\n    }, /*#__PURE__*/React.createElement(TransButton, {\n      ref: editIconRef,\n      className: `${prefixCls}-edit`,\n      onClick: onEditClick,\n      \"aria-label\": ariaLabel\n    }, icon || /*#__PURE__*/React.createElement(EditOutlined, {\n      role: \"button\"\n    })))) : null;\n  };\n  // Copy\n  const renderCopy = () => {\n    if (!enableCopy) {\n      return null;\n    }\n    return /*#__PURE__*/React.createElement(CopyBtn, Object.assign({\n      key: \"copy\"\n    }, copyConfig, {\n      prefixCls: prefixCls,\n      copied: copied,\n      locale: textLocale,\n      onCopy: onCopyClick,\n      iconOnly: children === null || children === undefined\n    }));\n  };\n  const renderOperations = renderExpanded => [renderExpanded && renderExpand(), renderEdit(), renderCopy()];\n  const renderEllipsis = needEllipsis => [needEllipsis && ( /*#__PURE__*/React.createElement(\"span\", {\n    \"aria-hidden\": true,\n    key: \"ellipsis\"\n  }, ELLIPSIS_STR)), ellipsisConfig.suffix, renderOperations(needEllipsis)];\n  return /*#__PURE__*/React.createElement(ResizeObserver, {\n    onResize: onResize,\n    disabled: !mergedEnableEllipsis\n  }, resizeRef => ( /*#__PURE__*/React.createElement(EllipsisTooltip, {\n    tooltipProps: tooltipProps,\n    enabledEllipsis: mergedEnableEllipsis,\n    isEllipsis: isMergedEllipsis\n  }, /*#__PURE__*/React.createElement(Typography, Object.assign({\n    className: classNames({\n      [`${prefixCls}-${type}`]: type,\n      [`${prefixCls}-disabled`]: disabled,\n      [`${prefixCls}-ellipsis`]: enableEllipsis,\n      [`${prefixCls}-single-line`]: mergedEnableEllipsis && rows === 1,\n      [`${prefixCls}-ellipsis-single-line`]: cssTextOverflow,\n      [`${prefixCls}-ellipsis-multiple-line`]: cssLineClamp\n    }, className),\n    prefixCls: customizePrefixCls,\n    style: Object.assign(Object.assign({}, style), {\n      WebkitLineClamp: cssLineClamp ? rows : undefined\n    }),\n    component: component,\n    ref: composeRef(resizeRef, typographyRef, ref),\n    direction: direction,\n    onClick: triggerType.includes('text') ? onEditClick : undefined,\n    \"aria-label\": topAriaLabel === null || topAriaLabel === void 0 ? void 0 : topAriaLabel.toString(),\n    title: title\n  }, textProps), /*#__PURE__*/React.createElement(Ellipsis, {\n    enabledMeasure: mergedEnableEllipsis && !cssEllipsis,\n    text: children,\n    rows: rows,\n    width: ellipsisWidth,\n    onEllipsis: onJsEllipsis,\n    miscDeps: [copied, expanded]\n  }, (node, needEllipsis) => {\n    let renderNode = node;\n    if (node.length && needEllipsis && topAriaLabel) {\n      renderNode = /*#__PURE__*/React.createElement(\"span\", {\n        key: \"show-content\",\n        \"aria-hidden\": true\n      }, renderNode);\n    }\n    const wrappedContext = wrapperDecorations(props, /*#__PURE__*/React.createElement(React.Fragment, null, renderNode, renderEllipsis(needEllipsis)));\n    return wrappedContext;\n  })))));\n});\nexport default Base;"],"mappings":"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"},"metadata":{},"sourceType":"module"}