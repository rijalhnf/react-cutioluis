{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { supportRef } from \"rc-util/es/ref\";\nimport * as React from 'react';\n/**\n * Create Immutable pair for `makeImmutable` and `responseImmutable`.\n */\n\nexport default function createImmutable() {\n  var ImmutableContext = /*#__PURE__*/React.createContext(null);\n  /**\n   * Get render update mark by `makeImmutable` root.\n   * Do not deps on the return value as render times\n   * but only use for `useMemo` or `useCallback` deps.\n   */\n\n  function useImmutableMark() {\n    return React.useContext(ImmutableContext);\n  }\n  /**\n  * Wrapped Component will be marked as Immutable.\n  * When Component parent trigger render,\n  * it will notice children component (use with `responseImmutable`) node that parent has updated.\n  * @param Component Passed Component\n  * @param triggerRender Customize trigger `responseImmutable` children re-render logic. Default will always trigger re-render when this component re-render.\n  */\n\n\n  function makeImmutable(Component, shouldTriggerRender) {\n    var refAble = supportRef(Component);\n\n    var ImmutableComponent = function ImmutableComponent(props, ref) {\n      var refProps = refAble ? {\n        ref: ref\n      } : {};\n      var renderTimesRef = React.useRef(0);\n      var prevProps = React.useRef(props); // If parent has the context, we do not wrap it\n\n      var mark = useImmutableMark();\n\n      if (mark !== null) {\n        return /*#__PURE__*/React.createElement(Component, _extends({}, props, refProps));\n      }\n\n      if ( // Always trigger re-render if not provide `notTriggerRender`\n      !shouldTriggerRender || shouldTriggerRender(prevProps.current, props)) {\n        renderTimesRef.current += 1;\n      }\n\n      prevProps.current = props;\n      return /*#__PURE__*/React.createElement(ImmutableContext.Provider, {\n        value: renderTimesRef.current\n      }, /*#__PURE__*/React.createElement(Component, _extends({}, props, refProps)));\n    };\n\n    if (process.env.NODE_ENV !== 'production') {\n      ImmutableComponent.displayName = \"ImmutableRoot(\".concat(Component.displayName || Component.name, \")\");\n    }\n\n    return refAble ? /*#__PURE__*/React.forwardRef(ImmutableComponent) : ImmutableComponent;\n  }\n  /**\n   * Wrapped Component with `React.memo`.\n   * But will rerender when parent with `makeImmutable` rerender.\n   */\n\n\n  function responseImmutable(Component, propsAreEqual) {\n    var refAble = supportRef(Component);\n\n    var ImmutableComponent = function ImmutableComponent(props, ref) {\n      var refProps = refAble ? {\n        ref: ref\n      } : {};\n      useImmutableMark();\n      return /*#__PURE__*/React.createElement(Component, _extends({}, props, refProps));\n    };\n\n    if (process.env.NODE_ENV !== 'production') {\n      ImmutableComponent.displayName = \"ImmutableResponse(\".concat(Component.displayName || Component.name, \")\");\n    }\n\n    return refAble ? /*#__PURE__*/React.memo( /*#__PURE__*/React.forwardRef(ImmutableComponent), propsAreEqual) : /*#__PURE__*/React.memo(ImmutableComponent, propsAreEqual);\n  }\n\n  return {\n    makeImmutable: makeImmutable,\n    responseImmutable: responseImmutable,\n    useImmutableMark: useImmutableMark\n  };\n}","map":{"version":3,"names":["_extends","supportRef","React","createImmutable","ImmutableContext","createContext","useImmutableMark","useContext","makeImmutable","Component","shouldTriggerRender","refAble","ImmutableComponent","props","ref","refProps","renderTimesRef","useRef","prevProps","mark","createElement","current","Provider","value","process","env","NODE_ENV","displayName","concat","name","forwardRef","responseImmutable","propsAreEqual","memo"],"sources":["/Users/joji/Documents/CODE/React/react-cutioluis/node_modules/@rc-component/context/es/Immutable.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { supportRef } from \"rc-util/es/ref\";\nimport * as React from 'react';\n/**\n * Create Immutable pair for `makeImmutable` and `responseImmutable`.\n */\nexport default function createImmutable() {\n  var ImmutableContext = /*#__PURE__*/React.createContext(null);\n\n  /**\n   * Get render update mark by `makeImmutable` root.\n   * Do not deps on the return value as render times\n   * but only use for `useMemo` or `useCallback` deps.\n   */\n  function useImmutableMark() {\n    return React.useContext(ImmutableContext);\n  }\n\n  /**\n  * Wrapped Component will be marked as Immutable.\n  * When Component parent trigger render,\n  * it will notice children component (use with `responseImmutable`) node that parent has updated.\n  * @param Component Passed Component\n  * @param triggerRender Customize trigger `responseImmutable` children re-render logic. Default will always trigger re-render when this component re-render.\n  */\n  function makeImmutable(Component, shouldTriggerRender) {\n    var refAble = supportRef(Component);\n    var ImmutableComponent = function ImmutableComponent(props, ref) {\n      var refProps = refAble ? {\n        ref: ref\n      } : {};\n      var renderTimesRef = React.useRef(0);\n      var prevProps = React.useRef(props);\n\n      // If parent has the context, we do not wrap it\n      var mark = useImmutableMark();\n      if (mark !== null) {\n        return /*#__PURE__*/React.createElement(Component, _extends({}, props, refProps));\n      }\n      if (\n      // Always trigger re-render if not provide `notTriggerRender`\n      !shouldTriggerRender || shouldTriggerRender(prevProps.current, props)) {\n        renderTimesRef.current += 1;\n      }\n      prevProps.current = props;\n      return /*#__PURE__*/React.createElement(ImmutableContext.Provider, {\n        value: renderTimesRef.current\n      }, /*#__PURE__*/React.createElement(Component, _extends({}, props, refProps)));\n    };\n    if (process.env.NODE_ENV !== 'production') {\n      ImmutableComponent.displayName = \"ImmutableRoot(\".concat(Component.displayName || Component.name, \")\");\n    }\n    return refAble ? /*#__PURE__*/React.forwardRef(ImmutableComponent) : ImmutableComponent;\n  }\n\n  /**\n   * Wrapped Component with `React.memo`.\n   * But will rerender when parent with `makeImmutable` rerender.\n   */\n  function responseImmutable(Component, propsAreEqual) {\n    var refAble = supportRef(Component);\n    var ImmutableComponent = function ImmutableComponent(props, ref) {\n      var refProps = refAble ? {\n        ref: ref\n      } : {};\n      useImmutableMark();\n      return /*#__PURE__*/React.createElement(Component, _extends({}, props, refProps));\n    };\n    if (process.env.NODE_ENV !== 'production') {\n      ImmutableComponent.displayName = \"ImmutableResponse(\".concat(Component.displayName || Component.name, \")\");\n    }\n    return refAble ? /*#__PURE__*/React.memo( /*#__PURE__*/React.forwardRef(ImmutableComponent), propsAreEqual) : /*#__PURE__*/React.memo(ImmutableComponent, propsAreEqual);\n  }\n  return {\n    makeImmutable: makeImmutable,\n    responseImmutable: responseImmutable,\n    useImmutableMark: useImmutableMark\n  };\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}