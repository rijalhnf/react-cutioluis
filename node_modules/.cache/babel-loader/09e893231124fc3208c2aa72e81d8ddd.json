{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _excluded = [\"children\"],\n    _excluded2 = [\"fixed\"];\nimport toArray from \"rc-util/es/Children/toArray\";\nimport warning from \"rc-util/es/warning\";\nimport * as React from 'react';\nimport { EXPAND_COLUMN } from \"../../constant\";\nimport { INTERNAL_COL_DEFINE } from \"../../utils/legacyUtil\";\nimport useWidthColumns from \"./useWidthColumns\";\nexport function convertChildrenToColumns(children) {\n  return toArray(children).filter(function (node) {\n    return /*#__PURE__*/React.isValidElement(node);\n  }).map(function (_ref) {\n    var key = _ref.key,\n        props = _ref.props;\n\n    var nodeChildren = props.children,\n        restProps = _objectWithoutProperties(props, _excluded);\n\n    var column = _objectSpread({\n      key: key\n    }, restProps);\n\n    if (nodeChildren) {\n      column.children = convertChildrenToColumns(nodeChildren);\n    }\n\n    return column;\n  });\n}\n\nfunction filterHiddenColumns(columns) {\n  return columns.filter(function (column) {\n    return column && _typeof(column) === 'object' && !column.hidden;\n  }).map(function (column) {\n    var subColumns = column.children;\n\n    if (subColumns && subColumns.length > 0) {\n      return _objectSpread(_objectSpread({}, column), {}, {\n        children: filterHiddenColumns(subColumns)\n      });\n    }\n\n    return column;\n  });\n}\n\nfunction flatColumns(columns) {\n  var parentKey = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'key';\n  return columns.filter(function (column) {\n    return column && _typeof(column) === 'object';\n  }).reduce(function (list, column, index) {\n    var fixed = column.fixed; // Convert `fixed='true'` to `fixed='left'` instead\n\n    var parsedFixed = fixed === true ? 'left' : fixed;\n    var mergedKey = \"\".concat(parentKey, \"-\").concat(index);\n    var subColumns = column.children;\n\n    if (subColumns && subColumns.length > 0) {\n      return [].concat(_toConsumableArray(list), _toConsumableArray(flatColumns(subColumns, mergedKey).map(function (subColum) {\n        return _objectSpread({\n          fixed: parsedFixed\n        }, subColum);\n      })));\n    }\n\n    return [].concat(_toConsumableArray(list), [_objectSpread(_objectSpread({\n      key: mergedKey\n    }, column), {}, {\n      fixed: parsedFixed\n    })]);\n  }, []);\n}\n\nfunction revertForRtl(columns) {\n  return columns.map(function (column) {\n    var fixed = column.fixed,\n        restProps = _objectWithoutProperties(column, _excluded2); // Convert `fixed='left'` to `fixed='right'` instead\n\n\n    var parsedFixed = fixed;\n\n    if (fixed === 'left') {\n      parsedFixed = 'right';\n    } else if (fixed === 'right') {\n      parsedFixed = 'left';\n    }\n\n    return _objectSpread({\n      fixed: parsedFixed\n    }, restProps);\n  });\n}\n/**\n * Parse `columns` & `children` into `columns`.\n */\n\n\nfunction useColumns(_ref2, transformColumns) {\n  var prefixCls = _ref2.prefixCls,\n      columns = _ref2.columns,\n      children = _ref2.children,\n      expandable = _ref2.expandable,\n      expandedKeys = _ref2.expandedKeys,\n      columnTitle = _ref2.columnTitle,\n      getRowKey = _ref2.getRowKey,\n      onTriggerExpand = _ref2.onTriggerExpand,\n      expandIcon = _ref2.expandIcon,\n      rowExpandable = _ref2.rowExpandable,\n      expandIconColumnIndex = _ref2.expandIconColumnIndex,\n      direction = _ref2.direction,\n      expandRowByClick = _ref2.expandRowByClick,\n      columnWidth = _ref2.columnWidth,\n      fixed = _ref2.fixed,\n      scrollWidth = _ref2.scrollWidth,\n      clientWidth = _ref2.clientWidth;\n  var baseColumns = React.useMemo(function () {\n    var newColumns = columns || convertChildrenToColumns(children) || [];\n    return filterHiddenColumns(newColumns.slice());\n  }, [columns, children]); // ========================== Expand ==========================\n\n  var withExpandColumns = React.useMemo(function () {\n    if (expandable) {\n      var _expandColumn;\n\n      var cloneColumns = baseColumns.slice(); // >>> Warning if use `expandIconColumnIndex`\n\n      if (process.env.NODE_ENV !== 'production' && expandIconColumnIndex >= 0) {\n        warning(false, '`expandIconColumnIndex` is deprecated. Please use `Table.EXPAND_COLUMN` in `columns` instead.');\n      } // >>> Insert expand column if not exist\n\n\n      if (!cloneColumns.includes(EXPAND_COLUMN)) {\n        var expandColIndex = expandIconColumnIndex || 0;\n\n        if (expandColIndex >= 0) {\n          cloneColumns.splice(expandColIndex, 0, EXPAND_COLUMN);\n        }\n      } // >>> Deduplicate additional expand column\n\n\n      if (process.env.NODE_ENV !== 'production' && cloneColumns.filter(function (c) {\n        return c === EXPAND_COLUMN;\n      }).length > 1) {\n        warning(false, 'There exist more than one `EXPAND_COLUMN` in `columns`.');\n      }\n\n      var expandColumnIndex = cloneColumns.indexOf(EXPAND_COLUMN);\n      cloneColumns = cloneColumns.filter(function (column, index) {\n        return column !== EXPAND_COLUMN || index === expandColumnIndex;\n      }); // >>> Check if expand column need to fixed\n\n      var prevColumn = baseColumns[expandColumnIndex];\n      var fixedColumn;\n\n      if ((fixed === 'left' || fixed) && !expandIconColumnIndex) {\n        fixedColumn = 'left';\n      } else if ((fixed === 'right' || fixed) && expandIconColumnIndex === baseColumns.length) {\n        fixedColumn = 'right';\n      } else {\n        fixedColumn = prevColumn ? prevColumn.fixed : null;\n      } // >>> Create expandable column\n\n\n      var expandColumn = (_expandColumn = {}, _defineProperty(_expandColumn, INTERNAL_COL_DEFINE, {\n        className: \"\".concat(prefixCls, \"-expand-icon-col\"),\n        columnType: 'EXPAND_COLUMN'\n      }), _defineProperty(_expandColumn, \"title\", columnTitle), _defineProperty(_expandColumn, \"fixed\", fixedColumn), _defineProperty(_expandColumn, \"className\", \"\".concat(prefixCls, \"-row-expand-icon-cell\")), _defineProperty(_expandColumn, \"width\", columnWidth), _defineProperty(_expandColumn, \"render\", function render(_, record, index) {\n        var rowKey = getRowKey(record, index);\n        var expanded = expandedKeys.has(rowKey);\n        var recordExpandable = rowExpandable ? rowExpandable(record) : true;\n        var icon = expandIcon({\n          prefixCls: prefixCls,\n          expanded: expanded,\n          expandable: recordExpandable,\n          record: record,\n          onExpand: onTriggerExpand\n        });\n\n        if (expandRowByClick) {\n          return /*#__PURE__*/React.createElement(\"span\", {\n            onClick: function onClick(e) {\n              return e.stopPropagation();\n            }\n          }, icon);\n        }\n\n        return icon;\n      }), _expandColumn);\n      return cloneColumns.map(function (col) {\n        return col === EXPAND_COLUMN ? expandColumn : col;\n      });\n    }\n\n    if (process.env.NODE_ENV !== 'production' && baseColumns.includes(EXPAND_COLUMN)) {\n      warning(false, '`expandable` is not config but there exist `EXPAND_COLUMN` in `columns`.');\n    }\n\n    return baseColumns.filter(function (col) {\n      return col !== EXPAND_COLUMN;\n    });\n  }, [expandable, baseColumns, getRowKey, expandedKeys, expandIcon, direction]); // ========================= Transform ========================\n\n  var mergedColumns = React.useMemo(function () {\n    var finalColumns = withExpandColumns;\n\n    if (transformColumns) {\n      finalColumns = transformColumns(finalColumns);\n    } // Always provides at least one column for table display\n\n\n    if (!finalColumns.length) {\n      finalColumns = [{\n        render: function render() {\n          return null;\n        }\n      }];\n    }\n\n    return finalColumns;\n  }, [transformColumns, withExpandColumns, direction]); // ========================== Flatten =========================\n\n  var flattenColumns = React.useMemo(function () {\n    if (direction === 'rtl') {\n      return revertForRtl(flatColumns(mergedColumns));\n    }\n\n    return flatColumns(mergedColumns);\n  }, [mergedColumns, direction, scrollWidth]); // ========================= Gap Fixed ========================\n\n  var hasGapFixed = React.useMemo(function () {\n    // Fixed: left, since old browser not support `findLastIndex`, we should use reverse loop\n    var lastLeftIndex = -1;\n\n    for (var i = flattenColumns.length - 1; i >= 0; i -= 1) {\n      var colFixed = flattenColumns[i].fixed;\n\n      if (colFixed === 'left' || colFixed === true) {\n        lastLeftIndex = i;\n        break;\n      }\n    }\n\n    if (lastLeftIndex >= 0) {\n      for (var _i = 0; _i <= lastLeftIndex; _i += 1) {\n        var _colFixed = flattenColumns[_i].fixed;\n\n        if (_colFixed !== 'left' && _colFixed !== true) {\n          return true;\n        }\n      }\n    } // Fixed: right\n\n\n    var firstRightIndex = flattenColumns.findIndex(function (_ref3) {\n      var colFixed = _ref3.fixed;\n      return colFixed === 'right';\n    });\n\n    if (firstRightIndex >= 0) {\n      for (var _i2 = firstRightIndex; _i2 < flattenColumns.length; _i2 += 1) {\n        var _colFixed2 = flattenColumns[_i2].fixed;\n\n        if (_colFixed2 !== 'right') {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  }, [flattenColumns]); // ========================= FillWidth ========================\n\n  var _useWidthColumns = useWidthColumns(flattenColumns, scrollWidth, clientWidth),\n      _useWidthColumns2 = _slicedToArray(_useWidthColumns, 2),\n      filledColumns = _useWidthColumns2[0],\n      realScrollWidth = _useWidthColumns2[1];\n\n  return [mergedColumns, filledColumns, realScrollWidth, hasGapFixed];\n}\n\nexport default useColumns;","map":{"version":3,"names":["_slicedToArray","_defineProperty","_toConsumableArray","_typeof","_objectSpread","_objectWithoutProperties","_excluded","_excluded2","toArray","warning","React","EXPAND_COLUMN","INTERNAL_COL_DEFINE","useWidthColumns","convertChildrenToColumns","children","filter","node","isValidElement","map","_ref","key","props","nodeChildren","restProps","column","filterHiddenColumns","columns","hidden","subColumns","length","flatColumns","parentKey","arguments","undefined","reduce","list","index","fixed","parsedFixed","mergedKey","concat","subColum","revertForRtl","useColumns","_ref2","transformColumns","prefixCls","expandable","expandedKeys","columnTitle","getRowKey","onTriggerExpand","expandIcon","rowExpandable","expandIconColumnIndex","direction","expandRowByClick","columnWidth","scrollWidth","clientWidth","baseColumns","useMemo","newColumns","slice","withExpandColumns","_expandColumn","cloneColumns","process","env","NODE_ENV","includes","expandColIndex","splice","c","expandColumnIndex","indexOf","prevColumn","fixedColumn","expandColumn","className","columnType","render","_","record","rowKey","expanded","has","recordExpandable","icon","onExpand","createElement","onClick","e","stopPropagation","col","mergedColumns","finalColumns","flattenColumns","hasGapFixed","lastLeftIndex","i","colFixed","_i","_colFixed","firstRightIndex","findIndex","_ref3","_i2","_colFixed2","_useWidthColumns","_useWidthColumns2","filledColumns","realScrollWidth"],"sources":["/Users/joji/Documents/CODE/React/react-cutioluis/node_modules/rc-table/es/hooks/useColumns/index.js"],"sourcesContent":["import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _excluded = [\"children\"],\n  _excluded2 = [\"fixed\"];\nimport toArray from \"rc-util/es/Children/toArray\";\nimport warning from \"rc-util/es/warning\";\nimport * as React from 'react';\nimport { EXPAND_COLUMN } from \"../../constant\";\nimport { INTERNAL_COL_DEFINE } from \"../../utils/legacyUtil\";\nimport useWidthColumns from \"./useWidthColumns\";\nexport function convertChildrenToColumns(children) {\n  return toArray(children).filter(function (node) {\n    return /*#__PURE__*/React.isValidElement(node);\n  }).map(function (_ref) {\n    var key = _ref.key,\n      props = _ref.props;\n    var nodeChildren = props.children,\n      restProps = _objectWithoutProperties(props, _excluded);\n    var column = _objectSpread({\n      key: key\n    }, restProps);\n    if (nodeChildren) {\n      column.children = convertChildrenToColumns(nodeChildren);\n    }\n    return column;\n  });\n}\nfunction filterHiddenColumns(columns) {\n  return columns.filter(function (column) {\n    return column && _typeof(column) === 'object' && !column.hidden;\n  }).map(function (column) {\n    var subColumns = column.children;\n    if (subColumns && subColumns.length > 0) {\n      return _objectSpread(_objectSpread({}, column), {}, {\n        children: filterHiddenColumns(subColumns)\n      });\n    }\n    return column;\n  });\n}\nfunction flatColumns(columns) {\n  var parentKey = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'key';\n  return columns.filter(function (column) {\n    return column && _typeof(column) === 'object';\n  }).reduce(function (list, column, index) {\n    var fixed = column.fixed;\n    // Convert `fixed='true'` to `fixed='left'` instead\n    var parsedFixed = fixed === true ? 'left' : fixed;\n    var mergedKey = \"\".concat(parentKey, \"-\").concat(index);\n    var subColumns = column.children;\n    if (subColumns && subColumns.length > 0) {\n      return [].concat(_toConsumableArray(list), _toConsumableArray(flatColumns(subColumns, mergedKey).map(function (subColum) {\n        return _objectSpread({\n          fixed: parsedFixed\n        }, subColum);\n      })));\n    }\n    return [].concat(_toConsumableArray(list), [_objectSpread(_objectSpread({\n      key: mergedKey\n    }, column), {}, {\n      fixed: parsedFixed\n    })]);\n  }, []);\n}\nfunction revertForRtl(columns) {\n  return columns.map(function (column) {\n    var fixed = column.fixed,\n      restProps = _objectWithoutProperties(column, _excluded2);\n\n    // Convert `fixed='left'` to `fixed='right'` instead\n    var parsedFixed = fixed;\n    if (fixed === 'left') {\n      parsedFixed = 'right';\n    } else if (fixed === 'right') {\n      parsedFixed = 'left';\n    }\n    return _objectSpread({\n      fixed: parsedFixed\n    }, restProps);\n  });\n}\n\n/**\n * Parse `columns` & `children` into `columns`.\n */\nfunction useColumns(_ref2, transformColumns) {\n  var prefixCls = _ref2.prefixCls,\n    columns = _ref2.columns,\n    children = _ref2.children,\n    expandable = _ref2.expandable,\n    expandedKeys = _ref2.expandedKeys,\n    columnTitle = _ref2.columnTitle,\n    getRowKey = _ref2.getRowKey,\n    onTriggerExpand = _ref2.onTriggerExpand,\n    expandIcon = _ref2.expandIcon,\n    rowExpandable = _ref2.rowExpandable,\n    expandIconColumnIndex = _ref2.expandIconColumnIndex,\n    direction = _ref2.direction,\n    expandRowByClick = _ref2.expandRowByClick,\n    columnWidth = _ref2.columnWidth,\n    fixed = _ref2.fixed,\n    scrollWidth = _ref2.scrollWidth,\n    clientWidth = _ref2.clientWidth;\n  var baseColumns = React.useMemo(function () {\n    var newColumns = columns || convertChildrenToColumns(children) || [];\n    return filterHiddenColumns(newColumns.slice());\n  }, [columns, children]);\n\n  // ========================== Expand ==========================\n  var withExpandColumns = React.useMemo(function () {\n    if (expandable) {\n      var _expandColumn;\n      var cloneColumns = baseColumns.slice();\n\n      // >>> Warning if use `expandIconColumnIndex`\n      if (process.env.NODE_ENV !== 'production' && expandIconColumnIndex >= 0) {\n        warning(false, '`expandIconColumnIndex` is deprecated. Please use `Table.EXPAND_COLUMN` in `columns` instead.');\n      }\n\n      // >>> Insert expand column if not exist\n      if (!cloneColumns.includes(EXPAND_COLUMN)) {\n        var expandColIndex = expandIconColumnIndex || 0;\n        if (expandColIndex >= 0) {\n          cloneColumns.splice(expandColIndex, 0, EXPAND_COLUMN);\n        }\n      }\n\n      // >>> Deduplicate additional expand column\n      if (process.env.NODE_ENV !== 'production' && cloneColumns.filter(function (c) {\n        return c === EXPAND_COLUMN;\n      }).length > 1) {\n        warning(false, 'There exist more than one `EXPAND_COLUMN` in `columns`.');\n      }\n      var expandColumnIndex = cloneColumns.indexOf(EXPAND_COLUMN);\n      cloneColumns = cloneColumns.filter(function (column, index) {\n        return column !== EXPAND_COLUMN || index === expandColumnIndex;\n      });\n\n      // >>> Check if expand column need to fixed\n      var prevColumn = baseColumns[expandColumnIndex];\n      var fixedColumn;\n      if ((fixed === 'left' || fixed) && !expandIconColumnIndex) {\n        fixedColumn = 'left';\n      } else if ((fixed === 'right' || fixed) && expandIconColumnIndex === baseColumns.length) {\n        fixedColumn = 'right';\n      } else {\n        fixedColumn = prevColumn ? prevColumn.fixed : null;\n      }\n\n      // >>> Create expandable column\n      var expandColumn = (_expandColumn = {}, _defineProperty(_expandColumn, INTERNAL_COL_DEFINE, {\n        className: \"\".concat(prefixCls, \"-expand-icon-col\"),\n        columnType: 'EXPAND_COLUMN'\n      }), _defineProperty(_expandColumn, \"title\", columnTitle), _defineProperty(_expandColumn, \"fixed\", fixedColumn), _defineProperty(_expandColumn, \"className\", \"\".concat(prefixCls, \"-row-expand-icon-cell\")), _defineProperty(_expandColumn, \"width\", columnWidth), _defineProperty(_expandColumn, \"render\", function render(_, record, index) {\n        var rowKey = getRowKey(record, index);\n        var expanded = expandedKeys.has(rowKey);\n        var recordExpandable = rowExpandable ? rowExpandable(record) : true;\n        var icon = expandIcon({\n          prefixCls: prefixCls,\n          expanded: expanded,\n          expandable: recordExpandable,\n          record: record,\n          onExpand: onTriggerExpand\n        });\n        if (expandRowByClick) {\n          return /*#__PURE__*/React.createElement(\"span\", {\n            onClick: function onClick(e) {\n              return e.stopPropagation();\n            }\n          }, icon);\n        }\n        return icon;\n      }), _expandColumn);\n      return cloneColumns.map(function (col) {\n        return col === EXPAND_COLUMN ? expandColumn : col;\n      });\n    }\n    if (process.env.NODE_ENV !== 'production' && baseColumns.includes(EXPAND_COLUMN)) {\n      warning(false, '`expandable` is not config but there exist `EXPAND_COLUMN` in `columns`.');\n    }\n    return baseColumns.filter(function (col) {\n      return col !== EXPAND_COLUMN;\n    });\n  }, [expandable, baseColumns, getRowKey, expandedKeys, expandIcon, direction]);\n\n  // ========================= Transform ========================\n  var mergedColumns = React.useMemo(function () {\n    var finalColumns = withExpandColumns;\n    if (transformColumns) {\n      finalColumns = transformColumns(finalColumns);\n    }\n\n    // Always provides at least one column for table display\n    if (!finalColumns.length) {\n      finalColumns = [{\n        render: function render() {\n          return null;\n        }\n      }];\n    }\n    return finalColumns;\n  }, [transformColumns, withExpandColumns, direction]);\n\n  // ========================== Flatten =========================\n  var flattenColumns = React.useMemo(function () {\n    if (direction === 'rtl') {\n      return revertForRtl(flatColumns(mergedColumns));\n    }\n    return flatColumns(mergedColumns);\n  }, [mergedColumns, direction, scrollWidth]);\n\n  // ========================= Gap Fixed ========================\n  var hasGapFixed = React.useMemo(function () {\n    // Fixed: left, since old browser not support `findLastIndex`, we should use reverse loop\n    var lastLeftIndex = -1;\n    for (var i = flattenColumns.length - 1; i >= 0; i -= 1) {\n      var colFixed = flattenColumns[i].fixed;\n      if (colFixed === 'left' || colFixed === true) {\n        lastLeftIndex = i;\n        break;\n      }\n    }\n    if (lastLeftIndex >= 0) {\n      for (var _i = 0; _i <= lastLeftIndex; _i += 1) {\n        var _colFixed = flattenColumns[_i].fixed;\n        if (_colFixed !== 'left' && _colFixed !== true) {\n          return true;\n        }\n      }\n    }\n\n    // Fixed: right\n    var firstRightIndex = flattenColumns.findIndex(function (_ref3) {\n      var colFixed = _ref3.fixed;\n      return colFixed === 'right';\n    });\n    if (firstRightIndex >= 0) {\n      for (var _i2 = firstRightIndex; _i2 < flattenColumns.length; _i2 += 1) {\n        var _colFixed2 = flattenColumns[_i2].fixed;\n        if (_colFixed2 !== 'right') {\n          return true;\n        }\n      }\n    }\n    return false;\n  }, [flattenColumns]);\n\n  // ========================= FillWidth ========================\n  var _useWidthColumns = useWidthColumns(flattenColumns, scrollWidth, clientWidth),\n    _useWidthColumns2 = _slicedToArray(_useWidthColumns, 2),\n    filledColumns = _useWidthColumns2[0],\n    realScrollWidth = _useWidthColumns2[1];\n  return [mergedColumns, filledColumns, realScrollWidth, hasGapFixed];\n}\nexport default useColumns;"],"mappings":"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"},"metadata":{},"sourceType":"module"}