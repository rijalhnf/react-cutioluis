{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _excluded = [\"name\"];\nimport { merge } from \"rc-util/es/utils/set\";\nimport warning from \"rc-util/es/warning\";\nimport * as React from 'react';\nimport { HOOK_MARK } from \"./FieldContext\";\nimport { allPromiseFinish } from \"./utils/asyncUtil\";\nimport { defaultValidateMessages } from \"./utils/messages\";\nimport NameMap from \"./utils/NameMap\";\nimport { cloneByNamePathList, containsNamePath, getNamePath, getValue, matchNamePath, setValue } from \"./utils/valueUtil\";\nexport var FormStore = /*#__PURE__*/_createClass(function FormStore(forceRootUpdate) {\n  var _this = this;\n\n  _classCallCheck(this, FormStore);\n\n  _defineProperty(this, \"formHooked\", false);\n\n  _defineProperty(this, \"forceRootUpdate\", void 0);\n\n  _defineProperty(this, \"subscribable\", true);\n\n  _defineProperty(this, \"store\", {});\n\n  _defineProperty(this, \"fieldEntities\", []);\n\n  _defineProperty(this, \"initialValues\", {});\n\n  _defineProperty(this, \"callbacks\", {});\n\n  _defineProperty(this, \"validateMessages\", null);\n\n  _defineProperty(this, \"preserve\", null);\n\n  _defineProperty(this, \"lastValidatePromise\", null);\n\n  _defineProperty(this, \"getForm\", function () {\n    return {\n      getFieldValue: _this.getFieldValue,\n      getFieldsValue: _this.getFieldsValue,\n      getFieldError: _this.getFieldError,\n      getFieldWarning: _this.getFieldWarning,\n      getFieldsError: _this.getFieldsError,\n      isFieldsTouched: _this.isFieldsTouched,\n      isFieldTouched: _this.isFieldTouched,\n      isFieldValidating: _this.isFieldValidating,\n      isFieldsValidating: _this.isFieldsValidating,\n      resetFields: _this.resetFields,\n      setFields: _this.setFields,\n      setFieldValue: _this.setFieldValue,\n      setFieldsValue: _this.setFieldsValue,\n      validateFields: _this.validateFields,\n      submit: _this.submit,\n      _init: true,\n      getInternalHooks: _this.getInternalHooks\n    };\n  }); // ======================== Internal Hooks ========================\n\n\n  _defineProperty(this, \"getInternalHooks\", function (key) {\n    if (key === HOOK_MARK) {\n      _this.formHooked = true;\n      return {\n        dispatch: _this.dispatch,\n        initEntityValue: _this.initEntityValue,\n        registerField: _this.registerField,\n        useSubscribe: _this.useSubscribe,\n        setInitialValues: _this.setInitialValues,\n        destroyForm: _this.destroyForm,\n        setCallbacks: _this.setCallbacks,\n        setValidateMessages: _this.setValidateMessages,\n        getFields: _this.getFields,\n        setPreserve: _this.setPreserve,\n        getInitialValue: _this.getInitialValue,\n        registerWatch: _this.registerWatch\n      };\n    }\n\n    warning(false, '`getInternalHooks` is internal usage. Should not call directly.');\n    return null;\n  });\n\n  _defineProperty(this, \"useSubscribe\", function (subscribable) {\n    _this.subscribable = subscribable;\n  });\n  /**\n   * Record prev Form unmount fieldEntities which config preserve false.\n   * This need to be refill with initialValues instead of store value.\n   */\n\n\n  _defineProperty(this, \"prevWithoutPreserves\", null);\n  /**\n   * First time `setInitialValues` should update store with initial value\n   */\n\n\n  _defineProperty(this, \"setInitialValues\", function (initialValues, init) {\n    _this.initialValues = initialValues || {};\n\n    if (init) {\n      var _this$prevWithoutPres;\n\n      var nextStore = merge(initialValues, _this.store); // We will take consider prev form unmount fields.\n      // When the field is not `preserve`, we need fill this with initialValues instead of store.\n      // eslint-disable-next-line array-callback-return\n\n      (_this$prevWithoutPres = _this.prevWithoutPreserves) === null || _this$prevWithoutPres === void 0 || _this$prevWithoutPres.map(function (_ref) {\n        var namePath = _ref.key;\n        nextStore = setValue(nextStore, namePath, getValue(initialValues, namePath));\n      });\n      _this.prevWithoutPreserves = null;\n\n      _this.updateStore(nextStore);\n    }\n  });\n\n  _defineProperty(this, \"destroyForm\", function () {\n    var prevWithoutPreserves = new NameMap();\n\n    _this.getFieldEntities(true).forEach(function (entity) {\n      if (!_this.isMergedPreserve(entity.isPreserve())) {\n        prevWithoutPreserves.set(entity.getNamePath(), true);\n      }\n    });\n\n    _this.prevWithoutPreserves = prevWithoutPreserves;\n  });\n\n  _defineProperty(this, \"getInitialValue\", function (namePath) {\n    var initValue = getValue(_this.initialValues, namePath); // Not cloneDeep when without `namePath`\n\n    return namePath.length ? merge(initValue) : initValue;\n  });\n\n  _defineProperty(this, \"setCallbacks\", function (callbacks) {\n    _this.callbacks = callbacks;\n  });\n\n  _defineProperty(this, \"setValidateMessages\", function (validateMessages) {\n    _this.validateMessages = validateMessages;\n  });\n\n  _defineProperty(this, \"setPreserve\", function (preserve) {\n    _this.preserve = preserve;\n  }); // ============================= Watch ============================\n\n\n  _defineProperty(this, \"watchList\", []);\n\n  _defineProperty(this, \"registerWatch\", function (callback) {\n    _this.watchList.push(callback);\n\n    return function () {\n      _this.watchList = _this.watchList.filter(function (fn) {\n        return fn !== callback;\n      });\n    };\n  });\n\n  _defineProperty(this, \"notifyWatch\", function () {\n    var namePath = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : []; // No need to cost perf when nothing need to watch\n\n    if (_this.watchList.length) {\n      var values = _this.getFieldsValue();\n\n      var allValues = _this.getFieldsValue(true);\n\n      _this.watchList.forEach(function (callback) {\n        callback(values, allValues, namePath);\n      });\n    }\n  }); // ========================== Dev Warning =========================\n\n\n  _defineProperty(this, \"timeoutId\", null);\n\n  _defineProperty(this, \"warningUnhooked\", function () {\n    if (process.env.NODE_ENV !== 'production' && !_this.timeoutId && typeof window !== 'undefined') {\n      _this.timeoutId = setTimeout(function () {\n        _this.timeoutId = null;\n\n        if (!_this.formHooked) {\n          warning(false, 'Instance created by `useForm` is not connected to any Form element. Forget to pass `form` prop?');\n        }\n      });\n    }\n  }); // ============================ Store =============================\n\n\n  _defineProperty(this, \"updateStore\", function (nextStore) {\n    _this.store = nextStore;\n  }); // ============================ Fields ============================\n\n  /**\n   * Get registered field entities.\n   * @param pure Only return field which has a `name`. Default: false\n   */\n\n\n  _defineProperty(this, \"getFieldEntities\", function () {\n    var pure = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n    if (!pure) {\n      return _this.fieldEntities;\n    }\n\n    return _this.fieldEntities.filter(function (field) {\n      return field.getNamePath().length;\n    });\n  });\n\n  _defineProperty(this, \"getFieldsMap\", function () {\n    var pure = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n    var cache = new NameMap();\n\n    _this.getFieldEntities(pure).forEach(function (field) {\n      var namePath = field.getNamePath();\n      cache.set(namePath, field);\n    });\n\n    return cache;\n  });\n\n  _defineProperty(this, \"getFieldEntitiesForNamePathList\", function (nameList) {\n    if (!nameList) {\n      return _this.getFieldEntities(true);\n    }\n\n    var cache = _this.getFieldsMap(true);\n\n    return nameList.map(function (name) {\n      var namePath = getNamePath(name);\n      return cache.get(namePath) || {\n        INVALIDATE_NAME_PATH: getNamePath(name)\n      };\n    });\n  });\n\n  _defineProperty(this, \"getFieldsValue\", function (nameList, filterFunc) {\n    _this.warningUnhooked(); // Fill args\n\n\n    var mergedNameList;\n    var mergedFilterFunc;\n    var mergedStrict;\n\n    if (nameList === true || Array.isArray(nameList)) {\n      mergedNameList = nameList;\n      mergedFilterFunc = filterFunc;\n    } else if (nameList && _typeof(nameList) === 'object') {\n      mergedStrict = nameList.strict;\n      mergedFilterFunc = nameList.filter;\n    }\n\n    if (mergedNameList === true && !mergedFilterFunc) {\n      return _this.store;\n    }\n\n    var fieldEntities = _this.getFieldEntitiesForNamePathList(Array.isArray(mergedNameList) ? mergedNameList : null);\n\n    var filteredNameList = [];\n    fieldEntities.forEach(function (entity) {\n      var _isListField, _ref3;\n\n      var namePath = 'INVALIDATE_NAME_PATH' in entity ? entity.INVALIDATE_NAME_PATH : entity.getNamePath(); // Ignore when it's a list item and not specific the namePath,\n      // since parent field is already take in count\n\n      if (mergedStrict) {\n        var _isList, _ref2;\n\n        if ((_isList = (_ref2 = entity).isList) !== null && _isList !== void 0 && _isList.call(_ref2)) {\n          return;\n        }\n      } else if (!mergedNameList && (_isListField = (_ref3 = entity).isListField) !== null && _isListField !== void 0 && _isListField.call(_ref3)) {\n        return;\n      }\n\n      if (!mergedFilterFunc) {\n        filteredNameList.push(namePath);\n      } else {\n        var meta = 'getMeta' in entity ? entity.getMeta() : null;\n\n        if (mergedFilterFunc(meta)) {\n          filteredNameList.push(namePath);\n        }\n      }\n    });\n    return cloneByNamePathList(_this.store, filteredNameList.map(getNamePath));\n  });\n\n  _defineProperty(this, \"getFieldValue\", function (name) {\n    _this.warningUnhooked();\n\n    var namePath = getNamePath(name);\n    return getValue(_this.store, namePath);\n  });\n\n  _defineProperty(this, \"getFieldsError\", function (nameList) {\n    _this.warningUnhooked();\n\n    var fieldEntities = _this.getFieldEntitiesForNamePathList(nameList);\n\n    return fieldEntities.map(function (entity, index) {\n      if (entity && !('INVALIDATE_NAME_PATH' in entity)) {\n        return {\n          name: entity.getNamePath(),\n          errors: entity.getErrors(),\n          warnings: entity.getWarnings()\n        };\n      }\n\n      return {\n        name: getNamePath(nameList[index]),\n        errors: [],\n        warnings: []\n      };\n    });\n  });\n\n  _defineProperty(this, \"getFieldError\", function (name) {\n    _this.warningUnhooked();\n\n    var namePath = getNamePath(name);\n\n    var fieldError = _this.getFieldsError([namePath])[0];\n\n    return fieldError.errors;\n  });\n\n  _defineProperty(this, \"getFieldWarning\", function (name) {\n    _this.warningUnhooked();\n\n    var namePath = getNamePath(name);\n\n    var fieldError = _this.getFieldsError([namePath])[0];\n\n    return fieldError.warnings;\n  });\n\n  _defineProperty(this, \"isFieldsTouched\", function () {\n    _this.warningUnhooked();\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    var arg0 = args[0],\n        arg1 = args[1];\n    var namePathList;\n    var isAllFieldsTouched = false;\n\n    if (args.length === 0) {\n      namePathList = null;\n    } else if (args.length === 1) {\n      if (Array.isArray(arg0)) {\n        namePathList = arg0.map(getNamePath);\n        isAllFieldsTouched = false;\n      } else {\n        namePathList = null;\n        isAllFieldsTouched = arg0;\n      }\n    } else {\n      namePathList = arg0.map(getNamePath);\n      isAllFieldsTouched = arg1;\n    }\n\n    var fieldEntities = _this.getFieldEntities(true);\n\n    var isFieldTouched = function isFieldTouched(field) {\n      return field.isFieldTouched();\n    }; // ===== Will get fully compare when not config namePathList =====\n\n\n    if (!namePathList) {\n      return isAllFieldsTouched ? fieldEntities.every(function (entity) {\n        return isFieldTouched(entity) || entity.isList();\n      }) : fieldEntities.some(isFieldTouched);\n    } // Generate a nest tree for validate\n\n\n    var map = new NameMap();\n    namePathList.forEach(function (shortNamePath) {\n      map.set(shortNamePath, []);\n    });\n    fieldEntities.forEach(function (field) {\n      var fieldNamePath = field.getNamePath(); // Find matched entity and put into list\n\n      namePathList.forEach(function (shortNamePath) {\n        if (shortNamePath.every(function (nameUnit, i) {\n          return fieldNamePath[i] === nameUnit;\n        })) {\n          map.update(shortNamePath, function (list) {\n            return [].concat(_toConsumableArray(list), [field]);\n          });\n        }\n      });\n    }); // Check if NameMap value is touched\n\n    var isNamePathListTouched = function isNamePathListTouched(entities) {\n      return entities.some(isFieldTouched);\n    };\n\n    var namePathListEntities = map.map(function (_ref4) {\n      var value = _ref4.value;\n      return value;\n    });\n    return isAllFieldsTouched ? namePathListEntities.every(isNamePathListTouched) : namePathListEntities.some(isNamePathListTouched);\n  });\n\n  _defineProperty(this, \"isFieldTouched\", function (name) {\n    _this.warningUnhooked();\n\n    return _this.isFieldsTouched([name]);\n  });\n\n  _defineProperty(this, \"isFieldsValidating\", function (nameList) {\n    _this.warningUnhooked();\n\n    var fieldEntities = _this.getFieldEntities();\n\n    if (!nameList) {\n      return fieldEntities.some(function (testField) {\n        return testField.isFieldValidating();\n      });\n    }\n\n    var namePathList = nameList.map(getNamePath);\n    return fieldEntities.some(function (testField) {\n      var fieldNamePath = testField.getNamePath();\n      return containsNamePath(namePathList, fieldNamePath) && testField.isFieldValidating();\n    });\n  });\n\n  _defineProperty(this, \"isFieldValidating\", function (name) {\n    _this.warningUnhooked();\n\n    return _this.isFieldsValidating([name]);\n  });\n  /**\n   * Reset Field with field `initialValue` prop.\n   * Can pass `entities` or `namePathList` or just nothing.\n   */\n\n\n  _defineProperty(this, \"resetWithFieldInitialValue\", function () {\n    var info = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {}; // Create cache\n\n    var cache = new NameMap();\n\n    var fieldEntities = _this.getFieldEntities(true);\n\n    fieldEntities.forEach(function (field) {\n      var initialValue = field.props.initialValue;\n      var namePath = field.getNamePath(); // Record only if has `initialValue`\n\n      if (initialValue !== undefined) {\n        var records = cache.get(namePath) || new Set();\n        records.add({\n          entity: field,\n          value: initialValue\n        });\n        cache.set(namePath, records);\n      }\n    }); // Reset\n\n    var resetWithFields = function resetWithFields(entities) {\n      entities.forEach(function (field) {\n        var initialValue = field.props.initialValue;\n\n        if (initialValue !== undefined) {\n          var namePath = field.getNamePath();\n\n          var formInitialValue = _this.getInitialValue(namePath);\n\n          if (formInitialValue !== undefined) {\n            // Warning if conflict with form initialValues and do not modify value\n            warning(false, \"Form already set 'initialValues' with path '\".concat(namePath.join('.'), \"'. Field can not overwrite it.\"));\n          } else {\n            var records = cache.get(namePath);\n\n            if (records && records.size > 1) {\n              // Warning if multiple field set `initialValue`and do not modify value\n              warning(false, \"Multiple Field with path '\".concat(namePath.join('.'), \"' set 'initialValue'. Can not decide which one to pick.\"));\n            } else if (records) {\n              var originValue = _this.getFieldValue(namePath);\n\n              var isListField = field.isListField(); // Set `initialValue`\n\n              if (!isListField && (!info.skipExist || originValue === undefined)) {\n                _this.updateStore(setValue(_this.store, namePath, _toConsumableArray(records)[0].value));\n              }\n            }\n          }\n        }\n      });\n    };\n\n    var requiredFieldEntities;\n\n    if (info.entities) {\n      requiredFieldEntities = info.entities;\n    } else if (info.namePathList) {\n      requiredFieldEntities = [];\n      info.namePathList.forEach(function (namePath) {\n        var records = cache.get(namePath);\n\n        if (records) {\n          var _requiredFieldEntitie;\n\n          (_requiredFieldEntitie = requiredFieldEntities).push.apply(_requiredFieldEntitie, _toConsumableArray(_toConsumableArray(records).map(function (r) {\n            return r.entity;\n          })));\n        }\n      });\n    } else {\n      requiredFieldEntities = fieldEntities;\n    }\n\n    resetWithFields(requiredFieldEntities);\n  });\n\n  _defineProperty(this, \"resetFields\", function (nameList) {\n    _this.warningUnhooked();\n\n    var prevStore = _this.store;\n\n    if (!nameList) {\n      _this.updateStore(merge(_this.initialValues));\n\n      _this.resetWithFieldInitialValue();\n\n      _this.notifyObservers(prevStore, null, {\n        type: 'reset'\n      });\n\n      _this.notifyWatch();\n\n      return;\n    } // Reset by `nameList`\n\n\n    var namePathList = nameList.map(getNamePath);\n    namePathList.forEach(function (namePath) {\n      var initialValue = _this.getInitialValue(namePath);\n\n      _this.updateStore(setValue(_this.store, namePath, initialValue));\n    });\n\n    _this.resetWithFieldInitialValue({\n      namePathList: namePathList\n    });\n\n    _this.notifyObservers(prevStore, namePathList, {\n      type: 'reset'\n    });\n\n    _this.notifyWatch(namePathList);\n  });\n\n  _defineProperty(this, \"setFields\", function (fields) {\n    _this.warningUnhooked();\n\n    var prevStore = _this.store;\n    var namePathList = [];\n    fields.forEach(function (fieldData) {\n      var name = fieldData.name,\n          data = _objectWithoutProperties(fieldData, _excluded);\n\n      var namePath = getNamePath(name);\n      namePathList.push(namePath); // Value\n\n      if ('value' in data) {\n        _this.updateStore(setValue(_this.store, namePath, data.value));\n      }\n\n      _this.notifyObservers(prevStore, [namePath], {\n        type: 'setField',\n        data: fieldData\n      });\n    });\n\n    _this.notifyWatch(namePathList);\n  });\n\n  _defineProperty(this, \"getFields\", function () {\n    var entities = _this.getFieldEntities(true);\n\n    var fields = entities.map(function (field) {\n      var namePath = field.getNamePath();\n      var meta = field.getMeta();\n\n      var fieldData = _objectSpread(_objectSpread({}, meta), {}, {\n        name: namePath,\n        value: _this.getFieldValue(namePath)\n      });\n\n      Object.defineProperty(fieldData, 'originRCField', {\n        value: true\n      });\n      return fieldData;\n    });\n    return fields;\n  }); // =========================== Observer ===========================\n\n  /**\n   * This only trigger when a field is on constructor to avoid we get initialValue too late\n   */\n\n\n  _defineProperty(this, \"initEntityValue\", function (entity) {\n    var initialValue = entity.props.initialValue;\n\n    if (initialValue !== undefined) {\n      var namePath = entity.getNamePath();\n      var prevValue = getValue(_this.store, namePath);\n\n      if (prevValue === undefined) {\n        _this.updateStore(setValue(_this.store, namePath, initialValue));\n      }\n    }\n  });\n\n  _defineProperty(this, \"isMergedPreserve\", function (fieldPreserve) {\n    var mergedPreserve = fieldPreserve !== undefined ? fieldPreserve : _this.preserve;\n    return mergedPreserve !== null && mergedPreserve !== void 0 ? mergedPreserve : true;\n  });\n\n  _defineProperty(this, \"registerField\", function (entity) {\n    _this.fieldEntities.push(entity);\n\n    var namePath = entity.getNamePath();\n\n    _this.notifyWatch([namePath]); // Set initial values\n\n\n    if (entity.props.initialValue !== undefined) {\n      var prevStore = _this.store;\n\n      _this.resetWithFieldInitialValue({\n        entities: [entity],\n        skipExist: true\n      });\n\n      _this.notifyObservers(prevStore, [entity.getNamePath()], {\n        type: 'valueUpdate',\n        source: 'internal'\n      });\n    } // un-register field callback\n\n\n    return function (isListField, preserve) {\n      var subNamePath = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n      _this.fieldEntities = _this.fieldEntities.filter(function (item) {\n        return item !== entity;\n      }); // Clean up store value if not preserve\n\n      if (!_this.isMergedPreserve(preserve) && (!isListField || subNamePath.length > 1)) {\n        var defaultValue = isListField ? undefined : _this.getInitialValue(namePath);\n\n        if (namePath.length && _this.getFieldValue(namePath) !== defaultValue && _this.fieldEntities.every(function (field) {\n          return (// Only reset when no namePath exist\n            !matchNamePath(field.getNamePath(), namePath)\n          );\n        })) {\n          var _prevStore = _this.store;\n\n          _this.updateStore(setValue(_prevStore, namePath, defaultValue, true)); // Notify that field is unmount\n\n\n          _this.notifyObservers(_prevStore, [namePath], {\n            type: 'remove'\n          }); // Dependencies update\n\n\n          _this.triggerDependenciesUpdate(_prevStore, namePath);\n        }\n      }\n\n      _this.notifyWatch([namePath]);\n    };\n  });\n\n  _defineProperty(this, \"dispatch\", function (action) {\n    switch (action.type) {\n      case 'updateValue':\n        {\n          var namePath = action.namePath,\n              value = action.value;\n\n          _this.updateValue(namePath, value);\n\n          break;\n        }\n\n      case 'validateField':\n        {\n          var _namePath = action.namePath,\n              triggerName = action.triggerName;\n\n          _this.validateFields([_namePath], {\n            triggerName: triggerName\n          });\n\n          break;\n        }\n\n      default: // Currently we don't have other action. Do nothing.\n\n    }\n  });\n\n  _defineProperty(this, \"notifyObservers\", function (prevStore, namePathList, info) {\n    if (_this.subscribable) {\n      var mergedInfo = _objectSpread(_objectSpread({}, info), {}, {\n        store: _this.getFieldsValue(true)\n      });\n\n      _this.getFieldEntities().forEach(function (_ref5) {\n        var onStoreChange = _ref5.onStoreChange;\n        onStoreChange(prevStore, namePathList, mergedInfo);\n      });\n    } else {\n      _this.forceRootUpdate();\n    }\n  });\n  /**\n   * Notify dependencies children with parent update\n   * We need delay to trigger validate in case Field is under render props\n   */\n\n\n  _defineProperty(this, \"triggerDependenciesUpdate\", function (prevStore, namePath) {\n    var childrenFields = _this.getDependencyChildrenFields(namePath);\n\n    if (childrenFields.length) {\n      _this.validateFields(childrenFields);\n    }\n\n    _this.notifyObservers(prevStore, childrenFields, {\n      type: 'dependenciesUpdate',\n      relatedFields: [namePath].concat(_toConsumableArray(childrenFields))\n    });\n\n    return childrenFields;\n  });\n\n  _defineProperty(this, \"updateValue\", function (name, value) {\n    var namePath = getNamePath(name);\n    var prevStore = _this.store;\n\n    _this.updateStore(setValue(_this.store, namePath, value));\n\n    _this.notifyObservers(prevStore, [namePath], {\n      type: 'valueUpdate',\n      source: 'internal'\n    });\n\n    _this.notifyWatch([namePath]); // Dependencies update\n\n\n    var childrenFields = _this.triggerDependenciesUpdate(prevStore, namePath); // trigger callback function\n\n\n    var onValuesChange = _this.callbacks.onValuesChange;\n\n    if (onValuesChange) {\n      var changedValues = cloneByNamePathList(_this.store, [namePath]);\n      onValuesChange(changedValues, _this.getFieldsValue());\n    }\n\n    _this.triggerOnFieldsChange([namePath].concat(_toConsumableArray(childrenFields)));\n  }); // Let all child Field get update.\n\n\n  _defineProperty(this, \"setFieldsValue\", function (store) {\n    _this.warningUnhooked();\n\n    var prevStore = _this.store;\n\n    if (store) {\n      var nextStore = merge(_this.store, store);\n\n      _this.updateStore(nextStore);\n    }\n\n    _this.notifyObservers(prevStore, null, {\n      type: 'valueUpdate',\n      source: 'external'\n    });\n\n    _this.notifyWatch();\n  });\n\n  _defineProperty(this, \"setFieldValue\", function (name, value) {\n    _this.setFields([{\n      name: name,\n      value: value\n    }]);\n  });\n\n  _defineProperty(this, \"getDependencyChildrenFields\", function (rootNamePath) {\n    var children = new Set();\n    var childrenFields = [];\n    var dependencies2fields = new NameMap();\n    /**\n     * Generate maps\n     * Can use cache to save perf if user report performance issue with this\n     */\n\n    _this.getFieldEntities().forEach(function (field) {\n      var dependencies = field.props.dependencies;\n      (dependencies || []).forEach(function (dependency) {\n        var dependencyNamePath = getNamePath(dependency);\n        dependencies2fields.update(dependencyNamePath, function () {\n          var fields = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : new Set();\n          fields.add(field);\n          return fields;\n        });\n      });\n    });\n\n    var fillChildren = function fillChildren(namePath) {\n      var fields = dependencies2fields.get(namePath) || new Set();\n      fields.forEach(function (field) {\n        if (!children.has(field)) {\n          children.add(field);\n          var fieldNamePath = field.getNamePath();\n\n          if (field.isFieldDirty() && fieldNamePath.length) {\n            childrenFields.push(fieldNamePath);\n            fillChildren(fieldNamePath);\n          }\n        }\n      });\n    };\n\n    fillChildren(rootNamePath);\n    return childrenFields;\n  });\n\n  _defineProperty(this, \"triggerOnFieldsChange\", function (namePathList, filedErrors) {\n    var onFieldsChange = _this.callbacks.onFieldsChange;\n\n    if (onFieldsChange) {\n      var fields = _this.getFields();\n      /**\n       * Fill errors since `fields` may be replaced by controlled fields\n       */\n\n\n      if (filedErrors) {\n        var cache = new NameMap();\n        filedErrors.forEach(function (_ref6) {\n          var name = _ref6.name,\n              errors = _ref6.errors;\n          cache.set(name, errors);\n        });\n        fields.forEach(function (field) {\n          // eslint-disable-next-line no-param-reassign\n          field.errors = cache.get(field.name) || field.errors;\n        });\n      }\n\n      var changedFields = fields.filter(function (_ref7) {\n        var fieldName = _ref7.name;\n        return containsNamePath(namePathList, fieldName);\n      });\n\n      if (changedFields.length) {\n        onFieldsChange(changedFields, fields);\n      }\n    }\n  }); // =========================== Validate ===========================\n\n\n  _defineProperty(this, \"validateFields\", function (arg1, arg2) {\n    _this.warningUnhooked();\n\n    var nameList;\n    var options;\n\n    if (Array.isArray(arg1) || typeof arg1 === 'string' || typeof arg2 === 'string') {\n      nameList = arg1;\n      options = arg2;\n    } else {\n      options = arg1;\n    }\n\n    var provideNameList = !!nameList;\n    var namePathList = provideNameList ? nameList.map(getNamePath) : []; // Collect result in promise list\n\n    var promiseList = []; // We temp save the path which need trigger for `onFieldsChange`\n\n    var TMP_SPLIT = String(Date.now());\n    var validateNamePathList = new Set();\n\n    var _ref8 = options || {},\n        recursive = _ref8.recursive,\n        dirty = _ref8.dirty;\n\n    _this.getFieldEntities(true).forEach(function (field) {\n      // Add field if not provide `nameList`\n      if (!provideNameList) {\n        namePathList.push(field.getNamePath());\n      } // Skip if without rule\n\n\n      if (!field.props.rules || !field.props.rules.length) {\n        return;\n      } // Skip if only validate dirty field\n\n\n      if (dirty && !field.isFieldDirty()) {\n        return;\n      }\n\n      var fieldNamePath = field.getNamePath();\n      validateNamePathList.add(fieldNamePath.join(TMP_SPLIT)); // Add field validate rule in to promise list\n\n      if (!provideNameList || containsNamePath(namePathList, fieldNamePath, recursive)) {\n        var promise = field.validateRules(_objectSpread({\n          validateMessages: _objectSpread(_objectSpread({}, defaultValidateMessages), _this.validateMessages)\n        }, options)); // Wrap promise with field\n\n        promiseList.push(promise.then(function () {\n          return {\n            name: fieldNamePath,\n            errors: [],\n            warnings: []\n          };\n        }).catch(function (ruleErrors) {\n          var _ruleErrors$forEach;\n\n          var mergedErrors = [];\n          var mergedWarnings = [];\n          (_ruleErrors$forEach = ruleErrors.forEach) === null || _ruleErrors$forEach === void 0 || _ruleErrors$forEach.call(ruleErrors, function (_ref9) {\n            var warningOnly = _ref9.rule.warningOnly,\n                errors = _ref9.errors;\n\n            if (warningOnly) {\n              mergedWarnings.push.apply(mergedWarnings, _toConsumableArray(errors));\n            } else {\n              mergedErrors.push.apply(mergedErrors, _toConsumableArray(errors));\n            }\n          });\n\n          if (mergedErrors.length) {\n            return Promise.reject({\n              name: fieldNamePath,\n              errors: mergedErrors,\n              warnings: mergedWarnings\n            });\n          }\n\n          return {\n            name: fieldNamePath,\n            errors: mergedErrors,\n            warnings: mergedWarnings\n          };\n        }));\n      }\n    });\n\n    var summaryPromise = allPromiseFinish(promiseList);\n    _this.lastValidatePromise = summaryPromise; // Notify fields with rule that validate has finished and need update\n\n    summaryPromise.catch(function (results) {\n      return results;\n    }).then(function (results) {\n      var resultNamePathList = results.map(function (_ref10) {\n        var name = _ref10.name;\n        return name;\n      });\n\n      _this.notifyObservers(_this.store, resultNamePathList, {\n        type: 'validateFinish'\n      });\n\n      _this.triggerOnFieldsChange(resultNamePathList, results);\n    });\n    var returnPromise = summaryPromise.then(function () {\n      if (_this.lastValidatePromise === summaryPromise) {\n        return Promise.resolve(_this.getFieldsValue(namePathList));\n      }\n\n      return Promise.reject([]);\n    }).catch(function (results) {\n      var errorList = results.filter(function (result) {\n        return result && result.errors.length;\n      });\n      return Promise.reject({\n        values: _this.getFieldsValue(namePathList),\n        errorFields: errorList,\n        outOfDate: _this.lastValidatePromise !== summaryPromise\n      });\n    }); // Do not throw in console\n\n    returnPromise.catch(function (e) {\n      return e;\n    }); // `validating` changed. Trigger `onFieldsChange`\n\n    var triggerNamePathList = namePathList.filter(function (namePath) {\n      return validateNamePathList.has(namePath.join(TMP_SPLIT));\n    });\n\n    _this.triggerOnFieldsChange(triggerNamePathList);\n\n    return returnPromise;\n  }); // ============================ Submit ============================\n\n\n  _defineProperty(this, \"submit\", function () {\n    _this.warningUnhooked();\n\n    _this.validateFields().then(function (values) {\n      var onFinish = _this.callbacks.onFinish;\n\n      if (onFinish) {\n        try {\n          onFinish(values);\n        } catch (err) {\n          // Should print error if user `onFinish` callback failed\n          console.error(err);\n        }\n      }\n    }).catch(function (e) {\n      var onFinishFailed = _this.callbacks.onFinishFailed;\n\n      if (onFinishFailed) {\n        onFinishFailed(e);\n      }\n    });\n  });\n\n  this.forceRootUpdate = forceRootUpdate;\n});\n\nfunction useForm(form) {\n  var formRef = React.useRef();\n\n  var _React$useState = React.useState({}),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      forceUpdate = _React$useState2[1];\n\n  if (!formRef.current) {\n    if (form) {\n      formRef.current = form;\n    } else {\n      // Create a new FormStore if not provided\n      var forceReRender = function forceReRender() {\n        forceUpdate({});\n      };\n\n      var formStore = new FormStore(forceReRender);\n      formRef.current = formStore.getForm();\n    }\n  }\n\n  return [formRef.current];\n}\n\nexport default useForm;","map":{"version":3,"names":["_slicedToArray","_objectSpread","_objectWithoutProperties","_toConsumableArray","_typeof","_createClass","_classCallCheck","_defineProperty","_excluded","merge","warning","React","HOOK_MARK","allPromiseFinish","defaultValidateMessages","NameMap","cloneByNamePathList","containsNamePath","getNamePath","getValue","matchNamePath","setValue","FormStore","forceRootUpdate","_this","getFieldValue","getFieldsValue","getFieldError","getFieldWarning","getFieldsError","isFieldsTouched","isFieldTouched","isFieldValidating","isFieldsValidating","resetFields","setFields","setFieldValue","setFieldsValue","validateFields","submit","_init","getInternalHooks","key","formHooked","dispatch","initEntityValue","registerField","useSubscribe","setInitialValues","destroyForm","setCallbacks","setValidateMessages","getFields","setPreserve","getInitialValue","registerWatch","subscribable","initialValues","init","_this$prevWithoutPres","nextStore","store","prevWithoutPreserves","map","_ref","namePath","updateStore","getFieldEntities","forEach","entity","isMergedPreserve","isPreserve","set","initValue","length","callbacks","validateMessages","preserve","callback","watchList","push","filter","fn","arguments","undefined","values","allValues","process","env","NODE_ENV","timeoutId","window","setTimeout","pure","fieldEntities","field","cache","nameList","getFieldsMap","name","get","INVALIDATE_NAME_PATH","filterFunc","warningUnhooked","mergedNameList","mergedFilterFunc","mergedStrict","Array","isArray","strict","getFieldEntitiesForNamePathList","filteredNameList","_isListField","_ref3","_isList","_ref2","isList","call","isListField","meta","getMeta","index","errors","getErrors","warnings","getWarnings","fieldError","_len","args","_key","arg0","arg1","namePathList","isAllFieldsTouched","every","some","shortNamePath","fieldNamePath","nameUnit","i","update","list","concat","isNamePathListTouched","entities","namePathListEntities","_ref4","value","testField","info","initialValue","props","records","Set","add","resetWithFields","formInitialValue","join","size","originValue","skipExist","requiredFieldEntities","_requiredFieldEntitie","apply","r","prevStore","resetWithFieldInitialValue","notifyObservers","type","notifyWatch","fields","fieldData","data","Object","defineProperty","prevValue","fieldPreserve","mergedPreserve","source","subNamePath","item","defaultValue","_prevStore","triggerDependenciesUpdate","action","updateValue","_namePath","triggerName","mergedInfo","_ref5","onStoreChange","childrenFields","getDependencyChildrenFields","relatedFields","onValuesChange","changedValues","triggerOnFieldsChange","rootNamePath","children","dependencies2fields","dependencies","dependency","dependencyNamePath","fillChildren","has","isFieldDirty","filedErrors","onFieldsChange","_ref6","changedFields","_ref7","fieldName","arg2","options","provideNameList","promiseList","TMP_SPLIT","String","Date","now","validateNamePathList","_ref8","recursive","dirty","rules","promise","validateRules","then","catch","ruleErrors","_ruleErrors$forEach","mergedErrors","mergedWarnings","_ref9","warningOnly","rule","Promise","reject","summaryPromise","lastValidatePromise","results","resultNamePathList","_ref10","returnPromise","resolve","errorList","result","errorFields","outOfDate","e","triggerNamePathList","onFinish","err","console","error","onFinishFailed","useForm","form","formRef","useRef","_React$useState","useState","_React$useState2","forceUpdate","current","forceReRender","formStore","getForm"],"sources":["/Users/joji/Documents/CODE/React/react-cutioluis/node_modules/rc-field-form/es/useForm.js"],"sourcesContent":["import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _excluded = [\"name\"];\nimport { merge } from \"rc-util/es/utils/set\";\nimport warning from \"rc-util/es/warning\";\nimport * as React from 'react';\nimport { HOOK_MARK } from \"./FieldContext\";\nimport { allPromiseFinish } from \"./utils/asyncUtil\";\nimport { defaultValidateMessages } from \"./utils/messages\";\nimport NameMap from \"./utils/NameMap\";\nimport { cloneByNamePathList, containsNamePath, getNamePath, getValue, matchNamePath, setValue } from \"./utils/valueUtil\";\nexport var FormStore = /*#__PURE__*/_createClass(function FormStore(forceRootUpdate) {\n  var _this = this;\n  _classCallCheck(this, FormStore);\n  _defineProperty(this, \"formHooked\", false);\n  _defineProperty(this, \"forceRootUpdate\", void 0);\n  _defineProperty(this, \"subscribable\", true);\n  _defineProperty(this, \"store\", {});\n  _defineProperty(this, \"fieldEntities\", []);\n  _defineProperty(this, \"initialValues\", {});\n  _defineProperty(this, \"callbacks\", {});\n  _defineProperty(this, \"validateMessages\", null);\n  _defineProperty(this, \"preserve\", null);\n  _defineProperty(this, \"lastValidatePromise\", null);\n  _defineProperty(this, \"getForm\", function () {\n    return {\n      getFieldValue: _this.getFieldValue,\n      getFieldsValue: _this.getFieldsValue,\n      getFieldError: _this.getFieldError,\n      getFieldWarning: _this.getFieldWarning,\n      getFieldsError: _this.getFieldsError,\n      isFieldsTouched: _this.isFieldsTouched,\n      isFieldTouched: _this.isFieldTouched,\n      isFieldValidating: _this.isFieldValidating,\n      isFieldsValidating: _this.isFieldsValidating,\n      resetFields: _this.resetFields,\n      setFields: _this.setFields,\n      setFieldValue: _this.setFieldValue,\n      setFieldsValue: _this.setFieldsValue,\n      validateFields: _this.validateFields,\n      submit: _this.submit,\n      _init: true,\n      getInternalHooks: _this.getInternalHooks\n    };\n  });\n  // ======================== Internal Hooks ========================\n  _defineProperty(this, \"getInternalHooks\", function (key) {\n    if (key === HOOK_MARK) {\n      _this.formHooked = true;\n      return {\n        dispatch: _this.dispatch,\n        initEntityValue: _this.initEntityValue,\n        registerField: _this.registerField,\n        useSubscribe: _this.useSubscribe,\n        setInitialValues: _this.setInitialValues,\n        destroyForm: _this.destroyForm,\n        setCallbacks: _this.setCallbacks,\n        setValidateMessages: _this.setValidateMessages,\n        getFields: _this.getFields,\n        setPreserve: _this.setPreserve,\n        getInitialValue: _this.getInitialValue,\n        registerWatch: _this.registerWatch\n      };\n    }\n    warning(false, '`getInternalHooks` is internal usage. Should not call directly.');\n    return null;\n  });\n  _defineProperty(this, \"useSubscribe\", function (subscribable) {\n    _this.subscribable = subscribable;\n  });\n  /**\n   * Record prev Form unmount fieldEntities which config preserve false.\n   * This need to be refill with initialValues instead of store value.\n   */\n  _defineProperty(this, \"prevWithoutPreserves\", null);\n  /**\n   * First time `setInitialValues` should update store with initial value\n   */\n  _defineProperty(this, \"setInitialValues\", function (initialValues, init) {\n    _this.initialValues = initialValues || {};\n    if (init) {\n      var _this$prevWithoutPres;\n      var nextStore = merge(initialValues, _this.store);\n\n      // We will take consider prev form unmount fields.\n      // When the field is not `preserve`, we need fill this with initialValues instead of store.\n      // eslint-disable-next-line array-callback-return\n      (_this$prevWithoutPres = _this.prevWithoutPreserves) === null || _this$prevWithoutPres === void 0 || _this$prevWithoutPres.map(function (_ref) {\n        var namePath = _ref.key;\n        nextStore = setValue(nextStore, namePath, getValue(initialValues, namePath));\n      });\n      _this.prevWithoutPreserves = null;\n      _this.updateStore(nextStore);\n    }\n  });\n  _defineProperty(this, \"destroyForm\", function () {\n    var prevWithoutPreserves = new NameMap();\n    _this.getFieldEntities(true).forEach(function (entity) {\n      if (!_this.isMergedPreserve(entity.isPreserve())) {\n        prevWithoutPreserves.set(entity.getNamePath(), true);\n      }\n    });\n    _this.prevWithoutPreserves = prevWithoutPreserves;\n  });\n  _defineProperty(this, \"getInitialValue\", function (namePath) {\n    var initValue = getValue(_this.initialValues, namePath);\n\n    // Not cloneDeep when without `namePath`\n    return namePath.length ? merge(initValue) : initValue;\n  });\n  _defineProperty(this, \"setCallbacks\", function (callbacks) {\n    _this.callbacks = callbacks;\n  });\n  _defineProperty(this, \"setValidateMessages\", function (validateMessages) {\n    _this.validateMessages = validateMessages;\n  });\n  _defineProperty(this, \"setPreserve\", function (preserve) {\n    _this.preserve = preserve;\n  });\n  // ============================= Watch ============================\n  _defineProperty(this, \"watchList\", []);\n  _defineProperty(this, \"registerWatch\", function (callback) {\n    _this.watchList.push(callback);\n    return function () {\n      _this.watchList = _this.watchList.filter(function (fn) {\n        return fn !== callback;\n      });\n    };\n  });\n  _defineProperty(this, \"notifyWatch\", function () {\n    var namePath = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    // No need to cost perf when nothing need to watch\n    if (_this.watchList.length) {\n      var values = _this.getFieldsValue();\n      var allValues = _this.getFieldsValue(true);\n      _this.watchList.forEach(function (callback) {\n        callback(values, allValues, namePath);\n      });\n    }\n  });\n  // ========================== Dev Warning =========================\n  _defineProperty(this, \"timeoutId\", null);\n  _defineProperty(this, \"warningUnhooked\", function () {\n    if (process.env.NODE_ENV !== 'production' && !_this.timeoutId && typeof window !== 'undefined') {\n      _this.timeoutId = setTimeout(function () {\n        _this.timeoutId = null;\n        if (!_this.formHooked) {\n          warning(false, 'Instance created by `useForm` is not connected to any Form element. Forget to pass `form` prop?');\n        }\n      });\n    }\n  });\n  // ============================ Store =============================\n  _defineProperty(this, \"updateStore\", function (nextStore) {\n    _this.store = nextStore;\n  });\n  // ============================ Fields ============================\n  /**\n   * Get registered field entities.\n   * @param pure Only return field which has a `name`. Default: false\n   */\n  _defineProperty(this, \"getFieldEntities\", function () {\n    var pure = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n    if (!pure) {\n      return _this.fieldEntities;\n    }\n    return _this.fieldEntities.filter(function (field) {\n      return field.getNamePath().length;\n    });\n  });\n  _defineProperty(this, \"getFieldsMap\", function () {\n    var pure = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n    var cache = new NameMap();\n    _this.getFieldEntities(pure).forEach(function (field) {\n      var namePath = field.getNamePath();\n      cache.set(namePath, field);\n    });\n    return cache;\n  });\n  _defineProperty(this, \"getFieldEntitiesForNamePathList\", function (nameList) {\n    if (!nameList) {\n      return _this.getFieldEntities(true);\n    }\n    var cache = _this.getFieldsMap(true);\n    return nameList.map(function (name) {\n      var namePath = getNamePath(name);\n      return cache.get(namePath) || {\n        INVALIDATE_NAME_PATH: getNamePath(name)\n      };\n    });\n  });\n  _defineProperty(this, \"getFieldsValue\", function (nameList, filterFunc) {\n    _this.warningUnhooked();\n\n    // Fill args\n    var mergedNameList;\n    var mergedFilterFunc;\n    var mergedStrict;\n    if (nameList === true || Array.isArray(nameList)) {\n      mergedNameList = nameList;\n      mergedFilterFunc = filterFunc;\n    } else if (nameList && _typeof(nameList) === 'object') {\n      mergedStrict = nameList.strict;\n      mergedFilterFunc = nameList.filter;\n    }\n    if (mergedNameList === true && !mergedFilterFunc) {\n      return _this.store;\n    }\n    var fieldEntities = _this.getFieldEntitiesForNamePathList(Array.isArray(mergedNameList) ? mergedNameList : null);\n    var filteredNameList = [];\n    fieldEntities.forEach(function (entity) {\n      var _isListField, _ref3;\n      var namePath = 'INVALIDATE_NAME_PATH' in entity ? entity.INVALIDATE_NAME_PATH : entity.getNamePath();\n\n      // Ignore when it's a list item and not specific the namePath,\n      // since parent field is already take in count\n      if (mergedStrict) {\n        var _isList, _ref2;\n        if ((_isList = (_ref2 = entity).isList) !== null && _isList !== void 0 && _isList.call(_ref2)) {\n          return;\n        }\n      } else if (!mergedNameList && (_isListField = (_ref3 = entity).isListField) !== null && _isListField !== void 0 && _isListField.call(_ref3)) {\n        return;\n      }\n      if (!mergedFilterFunc) {\n        filteredNameList.push(namePath);\n      } else {\n        var meta = 'getMeta' in entity ? entity.getMeta() : null;\n        if (mergedFilterFunc(meta)) {\n          filteredNameList.push(namePath);\n        }\n      }\n    });\n    return cloneByNamePathList(_this.store, filteredNameList.map(getNamePath));\n  });\n  _defineProperty(this, \"getFieldValue\", function (name) {\n    _this.warningUnhooked();\n    var namePath = getNamePath(name);\n    return getValue(_this.store, namePath);\n  });\n  _defineProperty(this, \"getFieldsError\", function (nameList) {\n    _this.warningUnhooked();\n    var fieldEntities = _this.getFieldEntitiesForNamePathList(nameList);\n    return fieldEntities.map(function (entity, index) {\n      if (entity && !('INVALIDATE_NAME_PATH' in entity)) {\n        return {\n          name: entity.getNamePath(),\n          errors: entity.getErrors(),\n          warnings: entity.getWarnings()\n        };\n      }\n      return {\n        name: getNamePath(nameList[index]),\n        errors: [],\n        warnings: []\n      };\n    });\n  });\n  _defineProperty(this, \"getFieldError\", function (name) {\n    _this.warningUnhooked();\n    var namePath = getNamePath(name);\n    var fieldError = _this.getFieldsError([namePath])[0];\n    return fieldError.errors;\n  });\n  _defineProperty(this, \"getFieldWarning\", function (name) {\n    _this.warningUnhooked();\n    var namePath = getNamePath(name);\n    var fieldError = _this.getFieldsError([namePath])[0];\n    return fieldError.warnings;\n  });\n  _defineProperty(this, \"isFieldsTouched\", function () {\n    _this.warningUnhooked();\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    var arg0 = args[0],\n      arg1 = args[1];\n    var namePathList;\n    var isAllFieldsTouched = false;\n    if (args.length === 0) {\n      namePathList = null;\n    } else if (args.length === 1) {\n      if (Array.isArray(arg0)) {\n        namePathList = arg0.map(getNamePath);\n        isAllFieldsTouched = false;\n      } else {\n        namePathList = null;\n        isAllFieldsTouched = arg0;\n      }\n    } else {\n      namePathList = arg0.map(getNamePath);\n      isAllFieldsTouched = arg1;\n    }\n    var fieldEntities = _this.getFieldEntities(true);\n    var isFieldTouched = function isFieldTouched(field) {\n      return field.isFieldTouched();\n    };\n\n    // ===== Will get fully compare when not config namePathList =====\n    if (!namePathList) {\n      return isAllFieldsTouched ? fieldEntities.every(function (entity) {\n        return isFieldTouched(entity) || entity.isList();\n      }) : fieldEntities.some(isFieldTouched);\n    }\n\n    // Generate a nest tree for validate\n    var map = new NameMap();\n    namePathList.forEach(function (shortNamePath) {\n      map.set(shortNamePath, []);\n    });\n    fieldEntities.forEach(function (field) {\n      var fieldNamePath = field.getNamePath();\n\n      // Find matched entity and put into list\n      namePathList.forEach(function (shortNamePath) {\n        if (shortNamePath.every(function (nameUnit, i) {\n          return fieldNamePath[i] === nameUnit;\n        })) {\n          map.update(shortNamePath, function (list) {\n            return [].concat(_toConsumableArray(list), [field]);\n          });\n        }\n      });\n    });\n\n    // Check if NameMap value is touched\n    var isNamePathListTouched = function isNamePathListTouched(entities) {\n      return entities.some(isFieldTouched);\n    };\n    var namePathListEntities = map.map(function (_ref4) {\n      var value = _ref4.value;\n      return value;\n    });\n    return isAllFieldsTouched ? namePathListEntities.every(isNamePathListTouched) : namePathListEntities.some(isNamePathListTouched);\n  });\n  _defineProperty(this, \"isFieldTouched\", function (name) {\n    _this.warningUnhooked();\n    return _this.isFieldsTouched([name]);\n  });\n  _defineProperty(this, \"isFieldsValidating\", function (nameList) {\n    _this.warningUnhooked();\n    var fieldEntities = _this.getFieldEntities();\n    if (!nameList) {\n      return fieldEntities.some(function (testField) {\n        return testField.isFieldValidating();\n      });\n    }\n    var namePathList = nameList.map(getNamePath);\n    return fieldEntities.some(function (testField) {\n      var fieldNamePath = testField.getNamePath();\n      return containsNamePath(namePathList, fieldNamePath) && testField.isFieldValidating();\n    });\n  });\n  _defineProperty(this, \"isFieldValidating\", function (name) {\n    _this.warningUnhooked();\n    return _this.isFieldsValidating([name]);\n  });\n  /**\n   * Reset Field with field `initialValue` prop.\n   * Can pass `entities` or `namePathList` or just nothing.\n   */\n  _defineProperty(this, \"resetWithFieldInitialValue\", function () {\n    var info = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    // Create cache\n    var cache = new NameMap();\n    var fieldEntities = _this.getFieldEntities(true);\n    fieldEntities.forEach(function (field) {\n      var initialValue = field.props.initialValue;\n      var namePath = field.getNamePath();\n\n      // Record only if has `initialValue`\n      if (initialValue !== undefined) {\n        var records = cache.get(namePath) || new Set();\n        records.add({\n          entity: field,\n          value: initialValue\n        });\n        cache.set(namePath, records);\n      }\n    });\n\n    // Reset\n    var resetWithFields = function resetWithFields(entities) {\n      entities.forEach(function (field) {\n        var initialValue = field.props.initialValue;\n        if (initialValue !== undefined) {\n          var namePath = field.getNamePath();\n          var formInitialValue = _this.getInitialValue(namePath);\n          if (formInitialValue !== undefined) {\n            // Warning if conflict with form initialValues and do not modify value\n            warning(false, \"Form already set 'initialValues' with path '\".concat(namePath.join('.'), \"'. Field can not overwrite it.\"));\n          } else {\n            var records = cache.get(namePath);\n            if (records && records.size > 1) {\n              // Warning if multiple field set `initialValue`and do not modify value\n              warning(false, \"Multiple Field with path '\".concat(namePath.join('.'), \"' set 'initialValue'. Can not decide which one to pick.\"));\n            } else if (records) {\n              var originValue = _this.getFieldValue(namePath);\n              var isListField = field.isListField();\n\n              // Set `initialValue`\n              if (!isListField && (!info.skipExist || originValue === undefined)) {\n                _this.updateStore(setValue(_this.store, namePath, _toConsumableArray(records)[0].value));\n              }\n            }\n          }\n        }\n      });\n    };\n    var requiredFieldEntities;\n    if (info.entities) {\n      requiredFieldEntities = info.entities;\n    } else if (info.namePathList) {\n      requiredFieldEntities = [];\n      info.namePathList.forEach(function (namePath) {\n        var records = cache.get(namePath);\n        if (records) {\n          var _requiredFieldEntitie;\n          (_requiredFieldEntitie = requiredFieldEntities).push.apply(_requiredFieldEntitie, _toConsumableArray(_toConsumableArray(records).map(function (r) {\n            return r.entity;\n          })));\n        }\n      });\n    } else {\n      requiredFieldEntities = fieldEntities;\n    }\n    resetWithFields(requiredFieldEntities);\n  });\n  _defineProperty(this, \"resetFields\", function (nameList) {\n    _this.warningUnhooked();\n    var prevStore = _this.store;\n    if (!nameList) {\n      _this.updateStore(merge(_this.initialValues));\n      _this.resetWithFieldInitialValue();\n      _this.notifyObservers(prevStore, null, {\n        type: 'reset'\n      });\n      _this.notifyWatch();\n      return;\n    }\n\n    // Reset by `nameList`\n    var namePathList = nameList.map(getNamePath);\n    namePathList.forEach(function (namePath) {\n      var initialValue = _this.getInitialValue(namePath);\n      _this.updateStore(setValue(_this.store, namePath, initialValue));\n    });\n    _this.resetWithFieldInitialValue({\n      namePathList: namePathList\n    });\n    _this.notifyObservers(prevStore, namePathList, {\n      type: 'reset'\n    });\n    _this.notifyWatch(namePathList);\n  });\n  _defineProperty(this, \"setFields\", function (fields) {\n    _this.warningUnhooked();\n    var prevStore = _this.store;\n    var namePathList = [];\n    fields.forEach(function (fieldData) {\n      var name = fieldData.name,\n        data = _objectWithoutProperties(fieldData, _excluded);\n      var namePath = getNamePath(name);\n      namePathList.push(namePath);\n\n      // Value\n      if ('value' in data) {\n        _this.updateStore(setValue(_this.store, namePath, data.value));\n      }\n      _this.notifyObservers(prevStore, [namePath], {\n        type: 'setField',\n        data: fieldData\n      });\n    });\n    _this.notifyWatch(namePathList);\n  });\n  _defineProperty(this, \"getFields\", function () {\n    var entities = _this.getFieldEntities(true);\n    var fields = entities.map(function (field) {\n      var namePath = field.getNamePath();\n      var meta = field.getMeta();\n      var fieldData = _objectSpread(_objectSpread({}, meta), {}, {\n        name: namePath,\n        value: _this.getFieldValue(namePath)\n      });\n      Object.defineProperty(fieldData, 'originRCField', {\n        value: true\n      });\n      return fieldData;\n    });\n    return fields;\n  });\n  // =========================== Observer ===========================\n  /**\n   * This only trigger when a field is on constructor to avoid we get initialValue too late\n   */\n  _defineProperty(this, \"initEntityValue\", function (entity) {\n    var initialValue = entity.props.initialValue;\n    if (initialValue !== undefined) {\n      var namePath = entity.getNamePath();\n      var prevValue = getValue(_this.store, namePath);\n      if (prevValue === undefined) {\n        _this.updateStore(setValue(_this.store, namePath, initialValue));\n      }\n    }\n  });\n  _defineProperty(this, \"isMergedPreserve\", function (fieldPreserve) {\n    var mergedPreserve = fieldPreserve !== undefined ? fieldPreserve : _this.preserve;\n    return mergedPreserve !== null && mergedPreserve !== void 0 ? mergedPreserve : true;\n  });\n  _defineProperty(this, \"registerField\", function (entity) {\n    _this.fieldEntities.push(entity);\n    var namePath = entity.getNamePath();\n    _this.notifyWatch([namePath]);\n\n    // Set initial values\n    if (entity.props.initialValue !== undefined) {\n      var prevStore = _this.store;\n      _this.resetWithFieldInitialValue({\n        entities: [entity],\n        skipExist: true\n      });\n      _this.notifyObservers(prevStore, [entity.getNamePath()], {\n        type: 'valueUpdate',\n        source: 'internal'\n      });\n    }\n\n    // un-register field callback\n    return function (isListField, preserve) {\n      var subNamePath = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n      _this.fieldEntities = _this.fieldEntities.filter(function (item) {\n        return item !== entity;\n      });\n\n      // Clean up store value if not preserve\n      if (!_this.isMergedPreserve(preserve) && (!isListField || subNamePath.length > 1)) {\n        var defaultValue = isListField ? undefined : _this.getInitialValue(namePath);\n        if (namePath.length && _this.getFieldValue(namePath) !== defaultValue && _this.fieldEntities.every(function (field) {\n          return (\n            // Only reset when no namePath exist\n            !matchNamePath(field.getNamePath(), namePath)\n          );\n        })) {\n          var _prevStore = _this.store;\n          _this.updateStore(setValue(_prevStore, namePath, defaultValue, true));\n\n          // Notify that field is unmount\n          _this.notifyObservers(_prevStore, [namePath], {\n            type: 'remove'\n          });\n\n          // Dependencies update\n          _this.triggerDependenciesUpdate(_prevStore, namePath);\n        }\n      }\n      _this.notifyWatch([namePath]);\n    };\n  });\n  _defineProperty(this, \"dispatch\", function (action) {\n    switch (action.type) {\n      case 'updateValue':\n        {\n          var namePath = action.namePath,\n            value = action.value;\n          _this.updateValue(namePath, value);\n          break;\n        }\n      case 'validateField':\n        {\n          var _namePath = action.namePath,\n            triggerName = action.triggerName;\n          _this.validateFields([_namePath], {\n            triggerName: triggerName\n          });\n          break;\n        }\n      default:\n      // Currently we don't have other action. Do nothing.\n    }\n  });\n  _defineProperty(this, \"notifyObservers\", function (prevStore, namePathList, info) {\n    if (_this.subscribable) {\n      var mergedInfo = _objectSpread(_objectSpread({}, info), {}, {\n        store: _this.getFieldsValue(true)\n      });\n      _this.getFieldEntities().forEach(function (_ref5) {\n        var onStoreChange = _ref5.onStoreChange;\n        onStoreChange(prevStore, namePathList, mergedInfo);\n      });\n    } else {\n      _this.forceRootUpdate();\n    }\n  });\n  /**\n   * Notify dependencies children with parent update\n   * We need delay to trigger validate in case Field is under render props\n   */\n  _defineProperty(this, \"triggerDependenciesUpdate\", function (prevStore, namePath) {\n    var childrenFields = _this.getDependencyChildrenFields(namePath);\n    if (childrenFields.length) {\n      _this.validateFields(childrenFields);\n    }\n    _this.notifyObservers(prevStore, childrenFields, {\n      type: 'dependenciesUpdate',\n      relatedFields: [namePath].concat(_toConsumableArray(childrenFields))\n    });\n    return childrenFields;\n  });\n  _defineProperty(this, \"updateValue\", function (name, value) {\n    var namePath = getNamePath(name);\n    var prevStore = _this.store;\n    _this.updateStore(setValue(_this.store, namePath, value));\n    _this.notifyObservers(prevStore, [namePath], {\n      type: 'valueUpdate',\n      source: 'internal'\n    });\n    _this.notifyWatch([namePath]);\n\n    // Dependencies update\n    var childrenFields = _this.triggerDependenciesUpdate(prevStore, namePath);\n\n    // trigger callback function\n    var onValuesChange = _this.callbacks.onValuesChange;\n    if (onValuesChange) {\n      var changedValues = cloneByNamePathList(_this.store, [namePath]);\n      onValuesChange(changedValues, _this.getFieldsValue());\n    }\n    _this.triggerOnFieldsChange([namePath].concat(_toConsumableArray(childrenFields)));\n  });\n  // Let all child Field get update.\n  _defineProperty(this, \"setFieldsValue\", function (store) {\n    _this.warningUnhooked();\n    var prevStore = _this.store;\n    if (store) {\n      var nextStore = merge(_this.store, store);\n      _this.updateStore(nextStore);\n    }\n    _this.notifyObservers(prevStore, null, {\n      type: 'valueUpdate',\n      source: 'external'\n    });\n    _this.notifyWatch();\n  });\n  _defineProperty(this, \"setFieldValue\", function (name, value) {\n    _this.setFields([{\n      name: name,\n      value: value\n    }]);\n  });\n  _defineProperty(this, \"getDependencyChildrenFields\", function (rootNamePath) {\n    var children = new Set();\n    var childrenFields = [];\n    var dependencies2fields = new NameMap();\n\n    /**\n     * Generate maps\n     * Can use cache to save perf if user report performance issue with this\n     */\n    _this.getFieldEntities().forEach(function (field) {\n      var dependencies = field.props.dependencies;\n      (dependencies || []).forEach(function (dependency) {\n        var dependencyNamePath = getNamePath(dependency);\n        dependencies2fields.update(dependencyNamePath, function () {\n          var fields = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : new Set();\n          fields.add(field);\n          return fields;\n        });\n      });\n    });\n    var fillChildren = function fillChildren(namePath) {\n      var fields = dependencies2fields.get(namePath) || new Set();\n      fields.forEach(function (field) {\n        if (!children.has(field)) {\n          children.add(field);\n          var fieldNamePath = field.getNamePath();\n          if (field.isFieldDirty() && fieldNamePath.length) {\n            childrenFields.push(fieldNamePath);\n            fillChildren(fieldNamePath);\n          }\n        }\n      });\n    };\n    fillChildren(rootNamePath);\n    return childrenFields;\n  });\n  _defineProperty(this, \"triggerOnFieldsChange\", function (namePathList, filedErrors) {\n    var onFieldsChange = _this.callbacks.onFieldsChange;\n    if (onFieldsChange) {\n      var fields = _this.getFields();\n\n      /**\n       * Fill errors since `fields` may be replaced by controlled fields\n       */\n      if (filedErrors) {\n        var cache = new NameMap();\n        filedErrors.forEach(function (_ref6) {\n          var name = _ref6.name,\n            errors = _ref6.errors;\n          cache.set(name, errors);\n        });\n        fields.forEach(function (field) {\n          // eslint-disable-next-line no-param-reassign\n          field.errors = cache.get(field.name) || field.errors;\n        });\n      }\n      var changedFields = fields.filter(function (_ref7) {\n        var fieldName = _ref7.name;\n        return containsNamePath(namePathList, fieldName);\n      });\n      if (changedFields.length) {\n        onFieldsChange(changedFields, fields);\n      }\n    }\n  });\n  // =========================== Validate ===========================\n  _defineProperty(this, \"validateFields\", function (arg1, arg2) {\n    _this.warningUnhooked();\n    var nameList;\n    var options;\n    if (Array.isArray(arg1) || typeof arg1 === 'string' || typeof arg2 === 'string') {\n      nameList = arg1;\n      options = arg2;\n    } else {\n      options = arg1;\n    }\n    var provideNameList = !!nameList;\n    var namePathList = provideNameList ? nameList.map(getNamePath) : [];\n\n    // Collect result in promise list\n    var promiseList = [];\n\n    // We temp save the path which need trigger for `onFieldsChange`\n    var TMP_SPLIT = String(Date.now());\n    var validateNamePathList = new Set();\n    var _ref8 = options || {},\n      recursive = _ref8.recursive,\n      dirty = _ref8.dirty;\n    _this.getFieldEntities(true).forEach(function (field) {\n      // Add field if not provide `nameList`\n      if (!provideNameList) {\n        namePathList.push(field.getNamePath());\n      }\n\n      // Skip if without rule\n      if (!field.props.rules || !field.props.rules.length) {\n        return;\n      }\n\n      // Skip if only validate dirty field\n      if (dirty && !field.isFieldDirty()) {\n        return;\n      }\n      var fieldNamePath = field.getNamePath();\n      validateNamePathList.add(fieldNamePath.join(TMP_SPLIT));\n\n      // Add field validate rule in to promise list\n      if (!provideNameList || containsNamePath(namePathList, fieldNamePath, recursive)) {\n        var promise = field.validateRules(_objectSpread({\n          validateMessages: _objectSpread(_objectSpread({}, defaultValidateMessages), _this.validateMessages)\n        }, options));\n\n        // Wrap promise with field\n        promiseList.push(promise.then(function () {\n          return {\n            name: fieldNamePath,\n            errors: [],\n            warnings: []\n          };\n        }).catch(function (ruleErrors) {\n          var _ruleErrors$forEach;\n          var mergedErrors = [];\n          var mergedWarnings = [];\n          (_ruleErrors$forEach = ruleErrors.forEach) === null || _ruleErrors$forEach === void 0 || _ruleErrors$forEach.call(ruleErrors, function (_ref9) {\n            var warningOnly = _ref9.rule.warningOnly,\n              errors = _ref9.errors;\n            if (warningOnly) {\n              mergedWarnings.push.apply(mergedWarnings, _toConsumableArray(errors));\n            } else {\n              mergedErrors.push.apply(mergedErrors, _toConsumableArray(errors));\n            }\n          });\n          if (mergedErrors.length) {\n            return Promise.reject({\n              name: fieldNamePath,\n              errors: mergedErrors,\n              warnings: mergedWarnings\n            });\n          }\n          return {\n            name: fieldNamePath,\n            errors: mergedErrors,\n            warnings: mergedWarnings\n          };\n        }));\n      }\n    });\n    var summaryPromise = allPromiseFinish(promiseList);\n    _this.lastValidatePromise = summaryPromise;\n\n    // Notify fields with rule that validate has finished and need update\n    summaryPromise.catch(function (results) {\n      return results;\n    }).then(function (results) {\n      var resultNamePathList = results.map(function (_ref10) {\n        var name = _ref10.name;\n        return name;\n      });\n      _this.notifyObservers(_this.store, resultNamePathList, {\n        type: 'validateFinish'\n      });\n      _this.triggerOnFieldsChange(resultNamePathList, results);\n    });\n    var returnPromise = summaryPromise.then(function () {\n      if (_this.lastValidatePromise === summaryPromise) {\n        return Promise.resolve(_this.getFieldsValue(namePathList));\n      }\n      return Promise.reject([]);\n    }).catch(function (results) {\n      var errorList = results.filter(function (result) {\n        return result && result.errors.length;\n      });\n      return Promise.reject({\n        values: _this.getFieldsValue(namePathList),\n        errorFields: errorList,\n        outOfDate: _this.lastValidatePromise !== summaryPromise\n      });\n    });\n\n    // Do not throw in console\n    returnPromise.catch(function (e) {\n      return e;\n    });\n\n    // `validating` changed. Trigger `onFieldsChange`\n    var triggerNamePathList = namePathList.filter(function (namePath) {\n      return validateNamePathList.has(namePath.join(TMP_SPLIT));\n    });\n    _this.triggerOnFieldsChange(triggerNamePathList);\n    return returnPromise;\n  });\n  // ============================ Submit ============================\n  _defineProperty(this, \"submit\", function () {\n    _this.warningUnhooked();\n    _this.validateFields().then(function (values) {\n      var onFinish = _this.callbacks.onFinish;\n      if (onFinish) {\n        try {\n          onFinish(values);\n        } catch (err) {\n          // Should print error if user `onFinish` callback failed\n          console.error(err);\n        }\n      }\n    }).catch(function (e) {\n      var onFinishFailed = _this.callbacks.onFinishFailed;\n      if (onFinishFailed) {\n        onFinishFailed(e);\n      }\n    });\n  });\n  this.forceRootUpdate = forceRootUpdate;\n});\nfunction useForm(form) {\n  var formRef = React.useRef();\n  var _React$useState = React.useState({}),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    forceUpdate = _React$useState2[1];\n  if (!formRef.current) {\n    if (form) {\n      formRef.current = form;\n    } else {\n      // Create a new FormStore if not provided\n      var forceReRender = function forceReRender() {\n        forceUpdate({});\n      };\n      var formStore = new FormStore(forceReRender);\n      formRef.current = formStore.getForm();\n    }\n  }\n  return [formRef.current];\n}\nexport default useForm;"],"mappings":"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"},"metadata":{},"sourceType":"module"}