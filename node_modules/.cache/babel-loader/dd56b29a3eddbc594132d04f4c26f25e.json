{"ast":null,"code":"import { SEARCH_MARK } from \"../hooks/useSearchOptions\";\nexport var VALUE_SPLIT = '__RC_CASCADER_SPLIT__';\nexport var SHOW_PARENT = 'SHOW_PARENT';\nexport var SHOW_CHILD = 'SHOW_CHILD';\n/**\n * Will convert value to string, and join with `VALUE_SPLIT`\n */\n\nexport function toPathKey(value) {\n  return value.join(VALUE_SPLIT);\n}\n/**\n * Batch convert value to string, and join with `VALUE_SPLIT`\n */\n\nexport function toPathKeys(value) {\n  return value.map(toPathKey);\n}\nexport function toPathValueStr(pathKey) {\n  return pathKey.split(VALUE_SPLIT);\n}\nexport function fillFieldNames(fieldNames) {\n  var _ref = fieldNames || {},\n      label = _ref.label,\n      value = _ref.value,\n      children = _ref.children;\n\n  var val = value || 'value';\n  return {\n    label: label || 'label',\n    value: val,\n    key: val,\n    children: children || 'children'\n  };\n}\nexport function isLeaf(option, fieldNames) {\n  var _option$isLeaf, _option$fieldNames$ch;\n\n  return (_option$isLeaf = option.isLeaf) !== null && _option$isLeaf !== void 0 ? _option$isLeaf : !((_option$fieldNames$ch = option[fieldNames.children]) !== null && _option$fieldNames$ch !== void 0 && _option$fieldNames$ch.length);\n}\nexport function scrollIntoParentView(element) {\n  var parent = element.parentElement;\n\n  if (!parent) {\n    return;\n  }\n\n  var elementToParent = element.offsetTop - parent.offsetTop; // offsetParent may not be parent.\n\n  if (elementToParent - parent.scrollTop < 0) {\n    parent.scrollTo({\n      top: elementToParent\n    });\n  } else if (elementToParent + element.offsetHeight - parent.scrollTop > parent.offsetHeight) {\n    parent.scrollTo({\n      top: elementToParent + element.offsetHeight - parent.offsetHeight\n    });\n  }\n}\nexport function getFullPathKeys(options, fieldNames) {\n  return options.map(function (item) {\n    var _item$SEARCH_MARK;\n\n    return (_item$SEARCH_MARK = item[SEARCH_MARK]) === null || _item$SEARCH_MARK === void 0 ? void 0 : _item$SEARCH_MARK.map(function (opt) {\n      return opt[fieldNames.value];\n    });\n  });\n}\n\nfunction isMultipleValue(value) {\n  return Array.isArray(value) && Array.isArray(value[0]);\n}\n\nexport function toRawValues(value) {\n  if (!value) {\n    return [];\n  }\n\n  if (isMultipleValue(value)) {\n    return value;\n  }\n\n  return (value.length === 0 ? [] : [value]).map(function (val) {\n    return Array.isArray(val) ? val : [val];\n  });\n}","map":{"version":3,"names":["SEARCH_MARK","VALUE_SPLIT","SHOW_PARENT","SHOW_CHILD","toPathKey","value","join","toPathKeys","map","toPathValueStr","pathKey","split","fillFieldNames","fieldNames","_ref","label","children","val","key","isLeaf","option","_option$isLeaf","_option$fieldNames$ch","length","scrollIntoParentView","element","parent","parentElement","elementToParent","offsetTop","scrollTop","scrollTo","top","offsetHeight","getFullPathKeys","options","item","_item$SEARCH_MARK","opt","isMultipleValue","Array","isArray","toRawValues"],"sources":["/Users/joji/Documents/CODE/React/react-cutioluis/node_modules/rc-cascader/es/utils/commonUtil.js"],"sourcesContent":["import { SEARCH_MARK } from \"../hooks/useSearchOptions\";\nexport var VALUE_SPLIT = '__RC_CASCADER_SPLIT__';\nexport var SHOW_PARENT = 'SHOW_PARENT';\nexport var SHOW_CHILD = 'SHOW_CHILD';\n\n/**\n * Will convert value to string, and join with `VALUE_SPLIT`\n */\nexport function toPathKey(value) {\n  return value.join(VALUE_SPLIT);\n}\n\n/**\n * Batch convert value to string, and join with `VALUE_SPLIT`\n */\nexport function toPathKeys(value) {\n  return value.map(toPathKey);\n}\nexport function toPathValueStr(pathKey) {\n  return pathKey.split(VALUE_SPLIT);\n}\nexport function fillFieldNames(fieldNames) {\n  var _ref = fieldNames || {},\n    label = _ref.label,\n    value = _ref.value,\n    children = _ref.children;\n  var val = value || 'value';\n  return {\n    label: label || 'label',\n    value: val,\n    key: val,\n    children: children || 'children'\n  };\n}\nexport function isLeaf(option, fieldNames) {\n  var _option$isLeaf, _option$fieldNames$ch;\n  return (_option$isLeaf = option.isLeaf) !== null && _option$isLeaf !== void 0 ? _option$isLeaf : !((_option$fieldNames$ch = option[fieldNames.children]) !== null && _option$fieldNames$ch !== void 0 && _option$fieldNames$ch.length);\n}\nexport function scrollIntoParentView(element) {\n  var parent = element.parentElement;\n  if (!parent) {\n    return;\n  }\n  var elementToParent = element.offsetTop - parent.offsetTop; // offsetParent may not be parent.\n  if (elementToParent - parent.scrollTop < 0) {\n    parent.scrollTo({\n      top: elementToParent\n    });\n  } else if (elementToParent + element.offsetHeight - parent.scrollTop > parent.offsetHeight) {\n    parent.scrollTo({\n      top: elementToParent + element.offsetHeight - parent.offsetHeight\n    });\n  }\n}\nexport function getFullPathKeys(options, fieldNames) {\n  return options.map(function (item) {\n    var _item$SEARCH_MARK;\n    return (_item$SEARCH_MARK = item[SEARCH_MARK]) === null || _item$SEARCH_MARK === void 0 ? void 0 : _item$SEARCH_MARK.map(function (opt) {\n      return opt[fieldNames.value];\n    });\n  });\n}\nfunction isMultipleValue(value) {\n  return Array.isArray(value) && Array.isArray(value[0]);\n}\nexport function toRawValues(value) {\n  if (!value) {\n    return [];\n  }\n  if (isMultipleValue(value)) {\n    return value;\n  }\n  return (value.length === 0 ? [] : [value]).map(function (val) {\n    return Array.isArray(val) ? val : [val];\n  });\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}